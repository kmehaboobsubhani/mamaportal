import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';
import { EqualValidatorDirective } from './equal-validator.directive';
import { MdbInputDirective } from './mdb-input.directive';
import { MdbInput } from './input.directive';
import * as ɵngcc0 from '@angular/core';
export class InputsModule {
    static forRoot() {
        return { ngModule: InputsModule, providers: [] };
    }
}
InputsModule.ɵfac = function InputsModule_Factory(t) { return new (t || InputsModule)(); };
InputsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: InputsModule });
InputsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputsModule, { declarations: function () { return [MdbInput, MdbInputDirective, EqualValidatorDirective]; }, exports: function () { return [MdbInput, MdbInputDirective, EqualValidatorDirective]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputsModule, [{
        type: NgModule,
        args: [{
                declarations: [MdbInput, MdbInputDirective, EqualValidatorDirective],
                exports: [MdbInput, MdbInputDirective, EqualValidatorDirective],
                schemas: [NO_ERRORS_SCHEMA]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXRzLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYW5ndWxhci1ib290c3RyYXAtbWQvc3JjL2xpYi9mcmVlL2lucHV0cy9pbnB1dHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7QUFPN0MsTUFBTSxPQUFPLFlBQVk7QUFDekIsSUFBUyxNQUFNLENBQUMsT0FBTztBQUFLLFFBQ3hCLE9BQU8sRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsQ0FBQztBQUNyRCxJQUFFLENBQUM7QUFDSDt3Q0FUQyxRQUFRLFNBQUMsa0JBQ1IsWUFBWSxFQUFFLENBQUM7TUFBUSxFQUFFLGlCQUFpQixFQUFFLHVCQUF1QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxDQUFDLFFBQVEsRUFBRSxpQkFBaUIsRUFBRTthQUF1QixDQUFDLGtCQUMvRCxPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxlQUM1Qjs7Ozs7Ozs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOT19FUlJPUlNfU0NIRU1BIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFcXVhbFZhbGlkYXRvckRpcmVjdGl2ZSB9IGZyb20gJy4vZXF1YWwtdmFsaWRhdG9yLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBNZGJJbnB1dERpcmVjdGl2ZSB9IGZyb20gJy4vbWRiLWlucHV0LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBNZGJJbnB1dCB9IGZyb20gJy4vaW5wdXQuZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbTWRiSW5wdXQsIE1kYklucHV0RGlyZWN0aXZlLCBFcXVhbFZhbGlkYXRvckRpcmVjdGl2ZV0sXG4gIGV4cG9ydHM6IFtNZGJJbnB1dCwgTWRiSW5wdXREaXJlY3RpdmUsIEVxdWFsVmFsaWRhdG9yRGlyZWN0aXZlXSxcbiAgc2NoZW1hczogW05PX0VSUk9SU19TQ0hFTUFdLFxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dHNNb2R1bGUge1xuICBwdWJsaWMgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxJbnB1dHNNb2R1bGU+IHtcbiAgICByZXR1cm4geyBuZ01vZHVsZTogSW5wdXRzTW9kdWxlLCBwcm92aWRlcnM6IFtdIH07XG4gIH1cbn1cbiJdfQ==