{"version":3,"file":"ng-chartjs.directive.d.ts","sources":["ng-chartjs.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, OnInit, OnChanges, EventEmitter, ElementRef, SimpleChanges, NgZone } from '@angular/core';\nimport * as Chart from 'chart.js';\nimport { StoreService } from './store.service';\nimport { NgChartjsService } from './ng-chartjs.service';\nimport { Colors } from './colors';\nexport declare type Labels = Array<string | string[] | number | number[] | Date | Date[] | any | any[]>;\nexport declare type Orientation = 'oldest' | 'latest';\nexport interface NgChartjsEvent {\n    event: MouseEvent;\n    active: Array<{}>;\n}\nexport declare class NgChartjsDirective implements OnDestroy, OnChanges, OnInit {\n    private ngChartjsService;\n    private storeService;\n    private zone;\n    data: number[] | any[];\n    datasets: Chart.ChartDataSets[];\n    labels: Labels;\n    options: Chart.ChartOptions;\n    inlinePlugins: any[];\n    chartType: Chart.ChartType;\n    colors: Colors[];\n    legend: boolean;\n    adding: {\n        labels: Labels[];\n        data: any[][];\n    };\n    removing: {\n        orientation: Orientation;\n    };\n    resetOption: Chart.ChartOptions;\n    noZone: boolean;\n    id: string;\n    chartClick: EventEmitter<NgChartjsEvent>;\n    chartHover: EventEmitter<NgChartjsEvent>;\n    chart: Chart;\n    private ctx;\n    private initFlag;\n    private hasChanges;\n    private element;\n    constructor(element: ElementRef, ngChartjsService: NgChartjsService, storeService: StoreService, zone: NgZone);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    update(): void;\n    addData(labels: Labels[], data: any[][]): void;\n    removeData(orientation: Orientation): void;\n    private refresh;\n    private removeChart;\n    private addChart;\n    private updateChartData;\n    private getChartBuilder;\n    private getDatasets;\n    private updateColors;\n    private addData_;\n    private removeData_;\n}\n"]}