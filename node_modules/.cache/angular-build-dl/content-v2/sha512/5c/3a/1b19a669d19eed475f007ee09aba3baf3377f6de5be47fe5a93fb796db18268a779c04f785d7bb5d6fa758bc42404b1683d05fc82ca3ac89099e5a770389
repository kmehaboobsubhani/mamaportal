{"version":3,"sources":["./src/app/views/inventory/stocks/stocks.component.ts","./src/app/views/inventory/stocks/stocks-routing.module.ts","./src/app/views/inventory/stocks/stocks.module.ts","./src/app/views/inventory/stocks/stocks.component.css","./src/app/views/inventory/stocks/stocks-filter.pipe.ts","./src/app/views/inventory/stocks/stocks.component.html"],"names":[],"mappings":"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","file":"views-inventory-stocks-stocks-module-es2015.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { CommonDataService } from '../../../Common/common-data.service';\r\nimport { DataService } from '../../../service/data.service';\r\nimport { ITableData } from '../../tables/data-tables/data-tables.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ColDef } from 'ag-grid-community';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'app-stocks',\r\n  templateUrl: './stocks.component.html',\r\n  styleUrls: ['./stocks.component.css']\r\n})\r\nexport class StocksComponent implements OnInit {\r\n  currentPage = 1;\r\n  page: number;\r\n  public data: ITableData;\r\n  public filterQuery = '';\r\n  error: any;\r\n  machineId: string;\r\n  public itemNames: any = [];\r\n  public selItem : any;\r\n  public springs: any = [];\r\n\r\n  constructor(private service: DataService, private commonData: CommonDataService,private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute) {\r\n      this.machineId = \"MACH01\";\r\n\r\n      this.service.getMerchantTransactionsData(this.commonData.merchantId, this.machineId).subscribe((data: any) => {\r\n        console.log(\"getSprings Reponse:::\" + JSON.stringify(data));\r\n        debugger;\r\n          console.log(\"Springs...............................\")\r\n          this.springs ;\r\n          //this.data = data.rowSprings.springs ;\r\n          this.data = data.rowSprings[0].springs[0]\r\n          //  console.log(this.springs);\r\n          //  for (let i = 0; i < data.length; i++) {\r\n          //  this.data.push(data[i]); \r\n          //  }\r\n        debugger;\r\n      });\r\n    }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  getBadge(status) {\r\n    switch (status) {\r\n      case 'Active':\r\n        return 'success';\r\n      case 'Inactive':\r\n        return 'secondary';\r\n      case 'Payment Success':\r\n        return 'warning';\r\n      case 'Banned':\r\n        return 'danger';\r\n      default:\r\n        return 'primary';\r\n    }\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { StocksComponent } from './stocks.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StocksComponent,\r\n    data: {\r\n      title: 'stocks',\r\n    }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class StocksRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CardModule, GridModule, SwitchModule, FormModule, } from '@coreui/angular';\r\nimport { IconModule } from '@coreui/icons-angular';\r\nimport { StocksRoutingModule } from './stocks-routing.module';\r\nimport { StocksComponent } from './stocks.component';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// DataTable\r\nimport { DataTableModule } from '@pascalhonegger/ng-datatable';\r\n\r\nimport { DataFilterPipe } from './stocks-filter.pipe';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StocksRoutingModule,\r\n    CardModule,\r\n    GridModule,\r\n    IconModule,\r\n    SwitchModule,\r\n    PaginationModule,\r\n    FormsModule,\r\n    FormModule,\r\n    DataTableModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [StocksComponent, DataFilterPipe],\r\n})\r\nexport class StocksModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdG9ja3MuY29tcG9uZW50LmNzcyJ9 */\";","import * as _ from 'lodash';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dataFilter',\r\n})\r\nexport class DataFilterPipe implements PipeTransform {\r\n  transform(array: any[], query: string): any {\r\n    if (query) {\r\n      return _.filter(array, (row) => row.name.indexOf(query) > -1);\r\n    }\r\n    return array;\r\n  }\r\n}\r\n","export default \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <div class=\\\"float-left\\\">\\r\\n        <h3 class=\\\"text-info\\\">Stock Management</h3>\\r\\n      </div>\\r\\n      <div class=\\\"float-right\\\">\\r\\n        <a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/stocks/addStocks']\\\"><i class=\\\"fa fa-plus\\\"></i> Add Stock</a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"table-responsive-sm\\\">\\r\\n        <div class=\\\"float-right\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\r\\n        </div>\\r\\n        <div class=\\\"float-right\\\">\\r\\n          <input cInput [(ngModel)]=\\\"filterQuery\\\" placeholder=\\\"Search by name\\\" />\\r\\n        </div>\\r\\n\\r\\n        <table class=\\\"table table-striped table-hover table-responsive-lg\\\" [mfData]=\\\"data | dataFilter: filterQuery\\\"\\r\\n        #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th style=\\\"width: 10%;\\\">\\r\\n              <mfDefaultSorter by=\\\"springName\\\" #sortspringName>\\r\\n                SpringName\\r\\n                <span\\r\\n                  *ngIf=\\\"sortspringName.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortspringName.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>            \\r\\n            <th style=\\\"width: 10%;\\\">\\r\\n              <mfDefaultSorter by=\\\"availability\\\" #sortavailability>\\r\\n                Available Quantity\\r\\n                <span\\r\\n                  *ngIf=\\\"sortavailability.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortavailability.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n            <th style=\\\"width: 10%;\\\">\\r\\n              <mfDefaultSorter by=\\\"name\\\" #sortname>\\r\\n                Item Name\\r\\n                <span\\r\\n                  *ngIf=\\\"sortname.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortname.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n            <th style=\\\"width: 10%;\\\">\\r\\n              <mfDefaultSorter by=\\\"totalSlots\\\" #sorttotalSlots>\\r\\n                TotalSlots\\r\\n                <span\\r\\n                  *ngIf=\\\"sorttotalSlots.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sorttotalSlots.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n            \\r\\n            <th style=\\\"width: 15%;\\\">\\r\\n              <mfDefaultSorter by=\\\"alterNativeSpringNo\\\" #sortalterNativeSpringNo>\\r\\n                AlterNative Spring Name\\r\\n                <span\\r\\n                  *ngIf=\\\"sortalterNativeSpringNo.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortalterNativeSpringNo.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n           \\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let tx of mf.data\\\">                              \\r\\n                <td>{{tx.springName}}</td> \\r\\n                <td>{{tx.availability}}</td>\\r\\n                <td>{{tx.name}}</td>\\r\\n                <td>{{tx.totalSlots}}</td>\\r\\n                <td>{{tx.alterNativeSpringNo}}</td>\\r\\n                <td>{{tx.active}}</td>                 \\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <div class=\\\"float-right\\\">\\r\\n              <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5, 10, 15]\\\"></mfBootstrapPaginator>\\r\\n        </div>\\r\\n        </div>\\r\\n      </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";"],"sourceRoot":"webpack:///"}