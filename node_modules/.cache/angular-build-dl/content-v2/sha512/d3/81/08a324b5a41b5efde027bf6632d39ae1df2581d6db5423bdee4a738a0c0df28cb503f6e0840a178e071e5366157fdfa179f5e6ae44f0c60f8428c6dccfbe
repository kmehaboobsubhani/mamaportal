{"version":3,"sources":["./src/app/views/tables/data-tables/data-tables.component.scss","./src/app/views/tables/data-tables/data-tables-routing.module.ts","./src/app/views/tables/data-tables/data-tables.component.html","./src/app/views/tables/data-tables/data-tables.module.ts","./src/app/views/tables/data-tables/data-tables.service.ts","./src/app/views/tables/data-tables/data-tables.component.ts","./src/app/views/tables/data-tables/data-tables-filter.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;;;;;;;;ACAnJ;AACc;AAEO;AAE9D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,0EAAmB;QAC9B,IAAI,EAAE;YACJ,KAAK,EAAE,YAAY;SACpB;KACF;CACF,CAAC;IAMW,uBAAuB,SAAvB,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;ACnBpC;AAAe,orCAAqnC,kiBAAkiB,uiBAAuiB,6hBAA6hB,kiBAAkiB,soBAAsoB,aAAa,yBAAyB,cAAc,6CAA6C,YAAY,yBAAyB,yBAAyB,yBAAyB,uBAAuB,6BAA6B,yBAAyB,4VAA4V,E;;;;;;;;;;;;;;;;;;;;;;;;;ACA18I;AACM;AACF;AACW;AAExD,YAAY;AACmD;AAEM;AAEP;AACH;AAE3D,UAAU;AAC6D;IAgB1D,oBAAoB,SAApB,oBAAoB;CAAG;AAAvB,oBAAoB;IAdhC,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY;YACZ,0DAAW;YACX,qEAAgB;YAChB,mFAAuB;YACvB,4EAAe;YACf,0DAAU;YACV,0DAAU;YACV,4EAAe;YACf,0DAAU;SACb;QACH,YAAY,EAAE,CAAC,0EAAmB,EAAE,uEAAc,CAAC;KACpD,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;AC9BU;AACO;AAGhB;AACiB;IAetC,iBAAiB,SAAjB,iBAAiB;IAG5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,yBAAyB,CAAC;IAEG,CAAC;IAExC,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CACjD,4DAAK,CAAC,CAAC,CAAC,EAAE,uCAAuC;QACjD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,wBAAwB;SACtD,CAAC;IACJ,CAAC;IAEO,WAAW,CAAC,KAAwB;QAC1C,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,kEAAkE;YAClE,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC1D;aAAM;YACL,sDAAsD;YACtD,6DAA6D;YAC7D,OAAO,CAAC,KAAK,CACX,yBAAyB,KAAK,CAAC,MAAM,IAAI,GAAG,aAAa,KAAK,CAAC,KAAK,EAAE,CACvE,CAAC;SACH;QACD,wDAAwD;QACxD,OAAO,uDAAU,CAAC,iDAAiD,CAAC,CAAC;IACvE,CAAC;CACF;;YA7CQ,+DAAU;;AAmBN,iBAAiB;IAD7B,gEAAU,EAAE;mFAIe,+DAAU;GAHzB,iBAAiB,CA0B7B;AA1B6B;;;;;;;;;;;;;;;;;;;;;;;ACpBY;AAC4B;IAQzD,mBAAmB,SAAnB,mBAAmB;IAK9B,YAAoB,gBAAmC;QAAnC,qBAAgB,GAAhB,gBAAgB,CAAmB;QAFhD,gBAAW,GAAG,EAAE,CAAC;QAiBjB,qBAAgB,GAAG,CAAC,CAAM,EAAE,EAAE;YACnC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;QAhBC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,SAAS,CACvC,CAAC,IAAgB,EAAE,EAAE;YACnB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;YACxB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EAAE,eAAe;QAClB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,aAAa;SAC9C,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,GAAW;QACtB,OAAO,CAAC,GAAG,CAAC;IACd,CAAC;IAMM,OAAO,CAAC,OAAe;QAC5B,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE;YACtC,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,OAAO;YACd,GAAG,EAAE,SAAS;SACf,CAAC,CAAC;IACL,CAAC;CACF;;YAxCoB,sEAAiB;;AAQzB,mBAAmB;IAN/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wFAA2C;QAE3C,SAAS,EAAE,CAAC,sEAAiB,CAAC;;KAC/B,CAAC;mFAMsC,sEAAiB;GAL5C,mBAAmB,CAgC/B;AAhC+B;;;;;;;;;;;;;;;;;;;;ACTJ;AACwB;IAKvC,cAAc,SAAd,cAAc;IACzB,SAAS,CAAC,KAAY,EAAE,KAAa;QACnC,IAAI,KAAK,EAAE;YACT,OAAO,6CAAQ,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC/D;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAPY,cAAc;IAH1B,0DAAI,CAAC;QACJ,IAAI,EAAE,YAAY;KACnB,CAAC;GACW,cAAc,CAO1B;AAP0B","file":"data-tables-data-tables-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXRhLXRhYmxlcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DataTablesComponent } from './data-tables.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DataTablesComponent,\n    data: {\n      title: 'Data Table',\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DataTablesRoutingModule {}\n","export default \"<div class=\\\"fade-in\\\">\\n  <c-card>\\n    <c-card-header>\\n      DataTable\\n      <c-card-header-actions>\\n        <a\\n          href=\\\"https://github.com/mariuszfoltak/angular2-datatable\\\"\\n          target=\\\"_blank\\\"\\n          class=\\\"card-header-action\\\"\\n        >\\n          <small class=\\\"text-muted\\\">docs</small>\\n        </a>\\n      </c-card-header-actions>\\n    </c-card-header>\\n    <c-card-body>\\n      <c-row class=\\\"mb-3\\\">\\n        <c-col md=\\\"4\\\" class=\\\"offset-md-8\\\">\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n            </div>\\n            <input cInput\\n\\n              [(ngModel)]=\\\"filterQuery\\\"\\n              placeholder=\\\"Search by name\\\"\\n            />\\n          </div>\\n        </c-col>\\n      </c-row>\\n      <table\\n        class=\\\"table table-striped table-hover table-responsive-lg\\\"\\n        [mfData]=\\\"data | dataFilter: filterQuery\\\"\\n        #mf=\\\"mfDataTable\\\"\\n        [mfRowsOnPage]=\\\"10\\\"\\n      >\\n        <thead>\\n          <tr>\\n            <th style=\\\"width: 20%;\\\">\\n              <mfDefaultSorter by=\\\"name\\\" #sortName>\\n                Name\\n                <span\\n                  *ngIf=\\\"sortName.isSortedByMeAsc\\\"\\n                  class=\\\"cil-arrow-top\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n                <span\\n                  *ngIf=\\\"sortName.isSortedByMeDesc\\\"\\n                  class=\\\"cil-arrow-bottom\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n              </mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 35%;\\\">\\n              <mfDefaultSorter by=\\\"email\\\" #sortEmail>\\n                Email\\n                <span\\n                  *ngIf=\\\"sortEmail.isSortedByMeAsc\\\"\\n                  class=\\\"cil-arrow-top\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n                <span\\n                  *ngIf=\\\"sortEmail.isSortedByMeDesc\\\"\\n                  class=\\\"cil-arrow-bottom\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n              </mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%;\\\">\\n              <mfDefaultSorter by=\\\"age\\\" #sortAge>\\n                Age\\n                <span\\n                  *ngIf=\\\"sortAge.isSortedByMeAsc\\\"\\n                  class=\\\"cil-arrow-top\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n                <span\\n                  *ngIf=\\\"sortAge.isSortedByMeDesc\\\"\\n                  class=\\\"cil-arrow-bottom\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n              </mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 20%;\\\">\\n              <mfDefaultSorter by=\\\"city\\\" #sortCity>\\n                City\\n                <span\\n                  *ngIf=\\\"sortCity.isSortedByMeAsc\\\"\\n                  class=\\\"cil-arrow-top\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n                <span\\n                  *ngIf=\\\"sortCity.isSortedByMeDesc\\\"\\n                  class=\\\"cil-arrow-bottom\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n              </mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%;\\\">\\n              <mfDefaultSorter by=\\\"regDate\\\" #sortRegDate>\\n                Registered\\n                <span\\n                  *ngIf=\\\"sortRegDate.isSortedByMeAsc\\\"\\n                  class=\\\"cil-arrow-top\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n                <span\\n                  *ngIf=\\\"sortRegDate.isSortedByMeDesc\\\"\\n                  class=\\\"cil-arrow-bottom\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n              </mfDefaultSorter>\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of mf.data\\\">\\n            <td>{{ item.name }}</td>\\n            <td>{{ item.email }}</td>\\n            <td class=\\\"text-left\\\">{{ item.age }}</td>\\n            <td>{{ item.city | uppercase }}</td>\\n            <td>{{ item.regDate | date }}</td>\\n<!--            <td>{{ getDate(item.regDate) }}</td>-->\\n          </tr>\\n        </tbody>\\n        <tfoot>\\n          <tr>\\n            <td colspan=\\\"5\\\">\\n              <mfBootstrapPaginator\\n                [rowsOnPageSet]=\\\"[5, 10, 15]\\\"\\n              ></mfBootstrapPaginator>\\n            </td>\\n          </tr>\\n        </tfoot>\\n      </table>\\n    </c-card-body>\\n  </c-card>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n// DataTable\nimport { DataTableModule } from '@pascalhonegger/ng-datatable';\n\nimport { CardModule, FormModule, GridModule } from '@coreui/angular';\n\nimport { DataTablesComponent } from './data-tables.component';\nimport { DataFilterPipe } from './data-tables-filter.pipe';\n\n// Routing\nimport { DataTablesRoutingModule } from './data-tables-routing.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        HttpClientModule,\n        DataTablesRoutingModule,\n        DataTableModule,\n        CardModule,\n        GridModule,\n        DataTableModule,\n        FormModule,\n    ],\n  declarations: [DataTablesComponent, DataFilterPipe],\n})\nexport class DataTablesInitModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\nexport interface IUserData {\n  name: string;\n  email: string;\n  regDate: string;\n  city: string;\n  age: number;\n}\n\nexport interface ITableData extends Array<IUserData> {\n  \n}\n\n@Injectable()\nexport class DataTablesService {\n  dataUrl = 'assets/data-tables.json';\n\n  constructor(private http: HttpClient) {}\n\n  getData() {\n    return this.http.get<ITableData>(this.dataUrl).pipe(\n      retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError) // then handle the error\n    );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n      );\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n","import { Component } from '@angular/core';\nimport { ITableData, DataTablesService } from './data-tables.service';\n\n@Component({\n  selector: 'app-data-tables',\n  templateUrl: './data-tables.component.html',\n  styleUrls: ['./data-tables.component.scss'],\n  providers: [DataTablesService],\n})\nexport class DataTablesComponent {\n  error: any;\n  public data: ITableData;\n  public filterQuery = '';\n\n  constructor(private dataTableService: DataTablesService) {\n    this.dataTableService.getData().subscribe(\n      (data: ITableData) => {\n        setTimeout(() => {\n          this.data = [...data];\n        }, 1000);\n      }, // success path\n      (error) => (this.error = error) // error path\n    );\n  }\n\n  public toInt(num: string) {\n    return +num;\n  }\n\n  public sortByWordLength = (a: any) => {\n    return a.name.length;\n  }\n\n  public getDate(regDate: string) {\n    const date = new Date(regDate);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit',\n    });\n  }\n}\n","import * as _ from 'lodash';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dataFilter',\n})\nexport class DataFilterPipe implements PipeTransform {\n  transform(array: any[], query: string): any {\n    if (query) {\n      return _.filter(array, (row) => row.name.indexOf(query) > -1);\n    }\n    return array;\n  }\n}\n"],"sourceRoot":"webpack:///"}