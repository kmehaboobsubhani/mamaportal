{"version":3,"sources":["webpack:///src/app/views/dashboard/dashboard.component.scss","webpack:///src/app/views/dashboard/dashboard.module.ts","webpack:///src/app/views/dashboard/dashboard.component.html","webpack:///node_modules/ngx-bootstrap/buttons/fesm2015/ngx-bootstrap-buttons.js","webpack:///src/app/views/dashboard/dashboard-routing.module.ts","webpack:///src/app/views/dashboard/dashboard.component.ts"],"names":["DashboardModule","imports","forRoot","declarations","CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","useExisting","ButtonCheckboxDirective","multi","btnCheckboxTrue","btnCheckboxFalse","state","onChange","Function","prototype","onTouched","isDisabled","toggle","value","trueValue","falseValue","fn","ɵfac","ButtonCheckboxDirective_Factory","t","ɵdir","type","selectors","hostVars","hostBindings","ButtonCheckboxDirective_HostBindings","rf","ctx","ButtonCheckboxDirective_click_HostBindingHandler","onClick","inputs","features","propDecorators","args","ngDevMode","selector","providers","RADIO_CONTROL_VALUE_ACCESSOR","ButtonRadioDirective","el","cdr","renderer","group","role","_hasFocus","_value","_disabled","disabled","setDisabledState","undefined","controlOrGroupDisabled","isActive","btnRadio","canToggle","uncheckable","_onChange","event","toggleIfAllowed","preventDefault","nativeElement","focus","markForCheck","setAttribute","removeAttribute","ButtonRadioDirective_Factory","ButtonRadioGroupDirective","ButtonRadioDirective_HostBindings","ButtonRadioDirective_click_HostBindingHandler","ButtonRadioDirective_keydown_space_HostBindingHandler","$event","onSpacePressed","ButtonRadioDirective_focus_HostBindingHandler","onFocus","ButtonRadioDirective_blur_HostBindingHandler","onBlur","tabindex","hasDisabledClass","ctorParameters","decorators","RADIO_CONTROL_VALUE_ACCESSOR$1","radioButtons","forEach","buttons","activeRadio","getActiveOrFocusedRadio","firstEnabled","find","r","selectInDirection","direction","nextIndex","currentIndex","buttonRadioDirectives","step","calcIndex","length","toArray","currentActiveIndex","indexOf","i","button","hasFocus","ButtonRadioGroupDirective_Factory","contentQueries","ButtonRadioGroupDirective_ContentQueries","dirIndex","_t","ButtonRadioGroupDirective_HostBindings","ButtonRadioGroupDirective_focus_HostBindingHandler","ButtonRadioGroupDirective_blur_HostBindingHandler","ButtonRadioGroupDirective_keydown_ArrowRight_HostBindingHandler","selectNext","ButtonRadioGroupDirective_keydown_ArrowDown_HostBindingHandler","ButtonRadioGroupDirective_keydown_ArrowLeft_HostBindingHandler","selectPrevious","ButtonRadioGroupDirective_keydown_ArrowUp_HostBindingHandler","ButtonsModule","ngModule","ButtonsModule_Factory","ɵmod","ɵinj","ngJitMode","exports","routes","path","component","data","title","DashboardRoutingModule","forChild","DashboardComponent","chartsData","fb","service","commonData","radioModel","online","offline","mainChart","chart","brandBoxChart","barChart","doughnutChart","statusMachineChart","salesDetailsChart","soldItemsChart","transactionChart","empList","inputvalue","submitted","countries","name","createForm","getAllStatusOfMachines","merchantId","subscribe","MachineStatus","console","log","error","getSoldItemDetails","soldArrayLength","soldItems","dte","Date","setDate","getDate","currentDate","datePipe","lastThirtyDaysDate","transform","transaction","onAddTransactionDate","revenue","onAddRevenueDate","addItems","fromDate","toDate","spr","getTransactionCountByStatus","resp","transactionArrayLength","JSON","stringify","transactionFromDate","transactionTodate","transactionCount","status","country","revenueDate","getTotalMerchantRevenueByDate","revenueArrayLength","flag","merchantRevenue","active","inActive","inActiveCount","NaN","activeCount","onlinepercentage","offlinepercentage","arbarChartLabels","arbarChartType","arbarChartLegend","arbarChartData","arbarChartOptions","pieChartPlugins","pieColor","backgroundColor","bhujiaSev","pepsi","chips","sanitaryNapkinSmall","bhujiaSevPercentage","pepsiPercentage","chipsPercentage","sanitaryNapkinSmallPercentage","itemName","totalQuantity","bhujiaSevName","isbhujiaSev","pepsiName","ispepsi","chipsName","ischips","sanitaryNapkinSmallName","issanitaryNapkinSmall","doughnutChartLabels","doughnutChartType","doughnutChartLegend","doughnutChartData","doughnutChartOptions","isShown","ispieShown","transactionFailed","completed","dispenseFailed","orderCreated","paymentSuccess","completedPercentage","failedPercentage","transactionStatus","count","week1","DECEMBER2021","isHide","isPieHide","monthOrYear","scales","xAxes","barPercentage","JANUARY2022","FEBRUARY2022","MARCH2022","initCharts","dateRangeForm","required","contactForm","widgetChart","simpleForm","fromDates","toDates","controls","reset","template"],"mappings":"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","file":"views-dashboard-dashboard-module-es5.js","sourcesContent":["export default \":host .c-chart-brand {\\n  position: absolute;\\n  width: 100%;\\n  height: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0FBQUoiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICAuYy1jaGFydC1icmFuZCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwcHg7XG4gIH1cbn1cblxuIl19 */\";","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// import { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { CommonModule } from '@angular/common';\nimport {  ReactiveFormsModule } from '@angular/forms';\nimport {\n  CalloutModule,\n  CardModule,\n  GridModule,\n  ProgressModule,\n  ButtonModule,\n  DropdownModule,\n  ChartModule,\n  SharedModule,\n  WidgetModule\n} from '@coreui/angular';\n\nimport { IconModule } from '@coreui/icons-angular';\nimport { WidgetsModule } from '../widgets/widgets.module';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatDialogModule } from '@angular/material/dialog';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    DashboardRoutingModule,\n    // ChartsModule,\n    BsDropdownModule,\n    ButtonsModule.forRoot(),\n    CalloutModule,\n    CardModule,\n    GridModule,\n    IconModule,\n    ProgressModule,\n    ButtonModule,\n    DropdownModule,\n    ChartModule,\n    SharedModule,\n    WidgetModule,\n    WidgetsModule,\n    CommonModule,\n    \n  ],\n  declarations: [\n    DashboardComponent\n  ]\n})\nexport class DashboardModule { }\n","export default \"<div class=\\\"fade-in\\\">\\n  <c-card>\\n    <c-card-body>\\n      <c-row>\\n        <c-col sm=\\\"6\\\">\\n          <h1 class=\\\"card-title mb-0\\\">Machine Status</h1>\\n        <div class=\\\"chart-wrapper\\\">\\n          <canvas cNoZoneBaseChart class=\\\"chart\\\"\\n          [data]=\\\"statusMachineChart.arbarChartData\\\" \\n          [labels]=\\\"statusMachineChart.arbarChartLabels\\\" \\n          [chartType]=\\\"statusMachineChart.arbarChartType\\\"\\n          [options]=\\\"statusMachineChart.arbarChartOptions\\\"\\n          [plugins]=\\\"statusMachineChart.arbarChartPlugins\\\"\\n          [legend]=\\\"statusMachineChart.arbarChartLegend\\\"\\n          [colors]=\\\"statusMachineChart.pieColor\\\"\\n          [plugins]=\\\"statusMachineChart.pieChartPlugins\\\"> \\n        </canvas>\\n      </div>\\n      </c-col>\\n         <c-col sm=\\\"6\\\">\\n          <h1 class=\\\"card-title mb-0\\\">Sold Items</h1>\\n        <div class=\\\"chart-wrapper\\\">\\n          <canvas cNoZoneBaseChart class=\\\"chart\\\"\\n          [data]=\\\"soldItemsChart.doughnutChartData\\\" \\n          [labels]=\\\"soldItemsChart.doughnutChartLabels\\\" \\n          [chartType]=\\\"soldItemsChart.doughnutChartType\\\"\\n          [options]=\\\"soldItemsChart.doughnutChartOptions\\\"\\n          [plugins]=\\\"soldItemsChart.doughnutChartPlugins\\\"\\n          [legend]=\\\"soldItemsChart.doughnutChartLegend\\\"\\n          [colors]=\\\"soldItemsChart.pieColor\\\">\\n        </canvas>\\n      </div>\\n        </c-col>\\n      </c-row>\\n    </c-card-body>\\n    <c-card-footer>\\n      <c-row class=\\\"text-center\\\">\\n        <c-col sm=\\\"2\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\n          <div>{{active}} Online ({{onlinepercentage | number: '1.2-2'}}%)</div>\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\n            <c-progress-bar color=\\\"success\\\" [value]=onlinepercentage></c-progress-bar>\\n          </c-progress>\\n        </c-col>\\n        <c-col sm=\\\"2\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\n          <div>{{inActive}} Offline ({{offlinepercentage | number: '1.2-2'}}%)</div>\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\n            <c-progress-bar color=\\\"danger\\\" [value]=offlinepercentage></c-progress-bar>\\n          </c-progress>\\n        </c-col>\\n        <c-col sm=\\\"0.5\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\n          \\n        </c-col>\\n      <div *ngIf=\\\"isbhujiaSev\\\">\\n        <c-col sm=\\\"1.5\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\n          <div>{{bhujiaSev}} {{bhujiaSevName}} ({{bhujiaSevPercentage | number : '1.2-2'}}%)</div>\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\n            <c-progress-bar color=\\\"danger\\\" [value]=bhujiaSevPercentage></c-progress-bar>\\n          </c-progress>\\n        </c-col>\\n      </div>\\n\\n      <div *ngIf=\\\"ispepsi\\\">\\n        <c-col sm=\\\"1.5\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\n          <div>{{pepsi}} {{pepsiName}} ({{pepsiPercentage | number : '1.2-2'}}%)</div>\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\n            <c-progress-bar color=\\\"success\\\" [value]=pepsiPercentage></c-progress-bar>\\n          </c-progress>\\n        </c-col>\\n      </div>\\n\\n      <div *ngIf=\\\"ischips\\\">\\n        <c-col sm=\\\"1.5\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\n          <div>{{chips}} {{chipsName}} ({{chipsPercentage | number : '1.2-2'}}%)</div>\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\n            <c-progress-bar color=\\\"warning\\\" [value]=chipsPercentage></c-progress-bar>\\n          </c-progress>\\n        </c-col>\\n      </div> \\n\\n      <div *ngIf=\\\"issanitaryNapkinSmall\\\">\\n        <c-col sm=\\\"1.5\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\n          <div>{{sanitaryNapkinSmall}} {{sanitaryNapkinSmallName}} ({{sanitaryNapkinSmallPercentage | number : '1.2-2'}}%)</div>\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\n            <c-progress-bar color=\\\"info\\\" [value]=sanitaryNapkinSmallPercentage></c-progress-bar>\\n            <!-- <c-progress-bar color=\\\"secondary\\\" [value]=sanitaryNapkinSmallPercentage></c-progress-bar> -->\\n          </c-progress>\\n        </c-col>\\n      </div> \\n\\n      </c-row>\\n    </c-card-footer>\\n  </c-card>\\n \\n  <c-card>\\n    <c-card-body>\\n      <c-row>\\n         <c-col sm=\\\"4\\\">\\n          <h1 class=\\\"card-title mb-0\\\">Transaction Status</h1>\\n        </c-col> \\n        <c-col sm=\\\"8\\\" class=\\\"d-none d-md-block\\\">\\n          <form >\\n            <c-row>\\n              \\n            <c-form-group cCol md=\\\"4\\\">\\n              <label for=\\\"fname\\\">FromDate : </label>\\n              <input cInput\\n                     id=\\\"date-input\\\" \\n                     type=\\\"date\\\" \\n                     name=\\\"date-input\\\" \\n                     placeholder=\\\"fromDate\\\"\\n                     autocomplete=\\\"given-name\\\"\\n                     [(ngModel)]=\\\"fromDate\\\"\\n                     required\\n                     [autofocus]=\\\"true\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': (submitted || f.fromDate.touched) && f.fromDate.invalid, 'is-valid': f.toDate.touched && f.fromDate.valid  }\\\" />\\n              <div *ngIf=\\\"submitted && f['fromDate'].invalid\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f['fromDate'].errors.required\\\">FromDate is required</div>\\n              </div>\\n            </c-form-group>\\n\\n            <c-form-group cCol md=\\\"4\\\">\\n              <label for=\\\"fname\\\">ToDate : </label>\\n              <input cInput\\n                     id=\\\"date-input\\\" \\n                     type=\\\"date\\\" \\n                     name=\\\"date-input\\\" \\n                     placeholder=\\\"toDate\\\"\\n                     autocomplete=\\\"toDate\\\"\\n                     [(ngModel)]=\\\"toDate\\\"\\n                     required\\n                     [autofocus]=\\\"true\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': (submitted || f.toDate.touched) && f.toDate.invalid, 'is-valid': f.toDate.touched && f.toDate.valid  }\\\" />\\n              <div *ngIf=\\\"submitted && f['toDate'].invalid\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f['toDate'].errors.required\\\">ToDate is required</div>\\n              </div>\\n            </c-form-group>\\n            \\n            <c-form-group cCol md=\\\"4\\\">\\n            <button cButton color=\\\"primary\\\" class=\\\"mfe-1\\\" type=\\\"submit\\\" (click)=\\\"onAddTransactionDate(simpleForm.value)\\\">Submit</button>\\n            </c-form-group>\\n          </c-row>\\n        </form>\\n        </c-col>\\n      </c-row>\\n      <c-row>\\n         <c-col sm=\\\"7\\\">\\n        <div *ngIf=\\\"ispieShown\\\" class=\\\"chart-wrapper\\\">\\n          <canvas  cNoZoneBaseChart class=\\\"chart\\\"\\n          [data]=\\\"transactionChart.arbarChartData\\\" \\n          [labels]=\\\"transactionChart.arbarChartLabels\\\" \\n          [chartType]=\\\"transactionChart.arbarChartType\\\"\\n          [options]=\\\"transactionChart.arbarChartOptions\\\"\\n          [plugins]=\\\"transactionChart.arbarChartPlugins\\\"\\n          [legend]=\\\"transactionChart.arbarChartLegend\\\"\\n          [colors]=\\\"transactionChart.pieColor\\\"\\n          [plugins]=\\\"transactionChart.pieChartPlugins\\\">\\n        </canvas>\\n      </div>\\n      <div *ngIf=\\\"isShown\\\" id=\\\"divshow\\\" class=\\\"row container-fluid\\\" style=\\\"font-size: 33px;\\n             text-align: center;margin: 30px\\\">Data not Exist for the Selected Date Range</div>\\n        </c-col>\\n         <c-col sm=\\\"5\\\">\\n           <div style=\\\"margin: 20px;\\\">\\n            <h1 >Date Range Selected </h1>\\n            <h2 >fromDate : {{transactionFromDate}}</h2>\\n            <h2 >toDate : {{transactionTodate}} </h2>\\n            <h2 for=\\\"fname\\\">Success : {{completed}} </h2>\\n            <h2 for=\\\"fname\\\">Failed  : {{dispenseFailed}} </h2>\\n          </div> \\n        </c-col> \\n      </c-row>\\n    </c-card-body>\\n    <c-card-footer>\\n      <c-row class=\\\"text-center\\\">\\n        <c-col sm=\\\"12\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\n          <div>{{completed}} Success ({{completedPercentage | number : '1.2-2'}}%)</div>\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\n            <c-progress-bar color=\\\"success\\\" [value]=completedPercentage></c-progress-bar>\\n          </c-progress>\\n        </c-col>\\n        <c-col sm=\\\"12\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\n          <div>{{dispenseFailed}} Failed ({{failedPercentage | number : '1.2-2'}}%)</div>\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\n            <c-progress-bar color=\\\"danger\\\" [value]=failedPercentage></c-progress-bar>\\n          </c-progress>\\n        </c-col>\\n      </c-row>\\n    </c-card-footer>\\n  </c-card>\\n\\n\\n  <c-card>\\n    <c-card-body>\\n      <c-row>\\n        <c-col sm=\\\"4\\\">\\n          <h1 class=\\\"card-title mb-0\\\">Sales Detail</h1>\\n        </c-col> \\n        <c-col sm=\\\"8\\\" class=\\\"d-none d-md-block\\\">\\n        <form [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\"submit()\\\">\\n          <c-row> \\n            <c-form-group cCol md=\\\"4\\\">\\n            <select cSelect formControlName=\\\"country\\\">\\n              <option [ngValue]=\\\"null\\\" disabled>Select Month Or Year</option>\\n              <option *ngFor=\\\"let country of countries\\\" [ngValue]=\\\"country.value\\\">{{country.name}}</option>\\n            </select>\\n             </c-form-group>\\n            <c-form-group cCol md=\\\"4\\\">\\n              <button cButton color=\\\"primary\\\" class=\\\"mfe-1\\\" type=\\\"submit\\\" (click)=\\\"onAddRevenueDate(contactForm.value)\\\">Submit</button>\\n            </c-form-group>\\n          </c-row>\\n          </form>\\n        </c-col>\\n      </c-row>\\n      <c-row>\\n        <c-col sm=\\\"8\\\">\\n          <!-- <h4 class=\\\"card-title mb-0\\\">Sales Detail</h4> -->\\n        <div *ngIf=\\\"isPieHide\\\" class=\\\"chart-wrapper\\\">\\n          <canvas cNoZoneBaseChart class=\\\"chart\\\"\\n          [data]=\\\"salesDetailsChart.arbarChartData\\\" \\n          [labels]=\\\"salesDetailsChart.arbarChartLabels\\\" \\n          [chartType]=\\\"salesDetailsChart.arbarChartType\\\"\\n          [options]=\\\"salesDetailsChart.arbarChartOptions\\\"\\n          [plugins]=\\\"salesDetailsChart.arbarChartPlugins\\\"\\n          [legend]=\\\"salesDetailsChart.arbarChartLegend\\\"\\n          [colors]=\\\"salesDetailsChart.pieColor\\\"\\n          [plugins]=\\\"salesDetailsChart.pieChartPlugins\\\">\\n        </canvas>\\n      </div>\\n      <div *ngIf=\\\"isHide\\\" id=\\\"divhide\\\" class=\\\"row container-fluid\\\" style=\\\"font-size: 33px;\\n         text-align: center;margin: 30px\\\">Data not Exist for the Selected Item</div>\\n      </c-col>\\n      <c-col sm=\\\"4\\\">\\n        <div style=\\\"margin: 20px;\\\">\\n          <h1 >{{monthOrYear}} Data Selected </h1>\\n          <!-- <h2 >fromDate :{{revenueFromDate}}</h2>\\n          <h2 >toDate :{{revenueTodate}} </h2>\\n          <h2 >Total Revenue : {{totalRevenue}} ₹ </h2> -->\\n        </div>\\n      </c-col>\\n      </c-row>\\n    </c-card-body>\\n    <c-card-footer>\\n      <c-row class=\\\"text-center\\\">\\n        <c-col sm=\\\"12\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\n          <!-- <div class=\\\"text-muted\\\">Total Revenue</div> -->\\n          <div>{{totalRevenue}} Total Revenue ({{revenuePercentage | number : '1.2-2'}}%)</div>\\n         \\n        </c-col>\\n      </c-row>\\n    </c-card-footer>\\n  </c-card>         \\n</div>\\n\";","import { forwardRef, Directive, Input, HostBinding, HostListener, ElementRef, ChangeDetectorRef, Renderer2, Optional, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: config: activeClass - Class to apply to the checked buttons\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nconst CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => ButtonCheckboxDirective)),\n    multi: true\n};\n/**\n * Add checkbox functionality to any element\n */\nclass ButtonCheckboxDirective {\n    constructor() {\n        /**\n         * Truthy value, will be set to ngModel\n         */\n        this.btnCheckboxTrue = true;\n        /**\n         * Falsy value, will be set to ngModel\n         */\n        this.btnCheckboxFalse = false;\n        this.state = false;\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n    }\n    // view -> model\n    /**\n     * @return {?}\n     */\n    onClick() {\n        if (this.isDisabled) {\n            return;\n        }\n        this.toggle(!this.state);\n        this.onChange(this.value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.toggle(this.trueValue === this.value);\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    get trueValue() {\n        return typeof this.btnCheckboxTrue !== 'undefined'\n            ? this.btnCheckboxTrue\n            : true;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    get falseValue() {\n        return typeof this.btnCheckboxFalse !== 'undefined'\n            ? this.btnCheckboxFalse\n            : false;\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    toggle(state) {\n        this.state = state;\n        this.value = this.state ? this.trueValue : this.falseValue;\n    }\n    // ControlValueAccessor\n    // model -> view\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.state = this.trueValue === value;\n        this.value = value ? this.trueValue : this.falseValue;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.isDisabled = isDisabled;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n}\nButtonCheckboxDirective.ɵfac = function ButtonCheckboxDirective_Factory(t) { return new (t || ButtonCheckboxDirective)(); };\nButtonCheckboxDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ButtonCheckboxDirective, selectors: [[\"\", \"btnCheckbox\", \"\"]], hostVars: 3, hostBindings: function ButtonCheckboxDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ButtonCheckboxDirective_click_HostBindingHandler() { return ctx.onClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-pressed\", ctx.state);\n        ɵngcc0.ɵɵclassProp(\"active\", ctx.state);\n    } }, inputs: { btnCheckboxTrue: \"btnCheckboxTrue\", btnCheckboxFalse: \"btnCheckboxFalse\" }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_CONTROL_VALUE_ACCESSOR])] });\nButtonCheckboxDirective.propDecorators = {\n    btnCheckboxTrue: [{ type: Input }],\n    btnCheckboxFalse: [{ type: Input }],\n    state: [{ type: HostBinding, args: ['class.active',] }, { type: HostBinding, args: ['attr.aria-pressed',] }],\n    onClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonCheckboxDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[btnCheckbox]',\n                providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n            }]\n    }], function () { return []; }, { btnCheckboxTrue: [{\n            type: Input\n        }], btnCheckboxFalse: [{\n            type: Input\n        }], state: [{\n            type: HostBinding,\n            args: ['class.active']\n        }, {\n            type: HostBinding,\n            args: ['attr.aria-pressed']\n        }], \n    // view -> model\n    /**\n     * @return {?}\n     */\n    onClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Truthy value, will be set to ngModel\n     * @type {?}\n     */\n    ButtonCheckboxDirective.prototype.btnCheckboxTrue;\n    /**\n     * Falsy value, will be set to ngModel\n     * @type {?}\n     */\n    ButtonCheckboxDirective.prototype.btnCheckboxFalse;\n    /** @type {?} */\n    ButtonCheckboxDirective.prototype.state;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ButtonCheckboxDirective.prototype.value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ButtonCheckboxDirective.prototype.isDisabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ButtonCheckboxDirective.prototype.onChange;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ButtonCheckboxDirective.prototype.onTouched;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst RADIO_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => ButtonRadioDirective)),\n    multi: true\n};\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\nclass ButtonRadioDirective {\n    /**\n     * @param {?} el\n     * @param {?} cdr\n     * @param {?} renderer\n     * @param {?} group\n     */\n    constructor(el, cdr, renderer, group) {\n        this.el = el;\n        this.cdr = cdr;\n        this.renderer = renderer;\n        this.group = group;\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.role = 'radio';\n        this._hasFocus = false;\n    }\n    /**\n     * Current value of radio component or group\n     * @return {?}\n     */\n    get value() {\n        return this.group ? this.group.value : this._value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (this.group) {\n            this.group.value = value;\n            return;\n        }\n        this._value = value;\n    }\n    /**\n     * If `true` — radio button is disabled\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) {\n        this.setDisabledState(disabled);\n    }\n    /**\n     * @return {?}\n     */\n    get controlOrGroupDisabled() {\n        return this.disabled || (this.group && this.group.disabled) ? true : undefined;\n    }\n    /**\n     * @return {?}\n     */\n    get hasDisabledClass() {\n        // Although the radio is disabled the active radio should still stand out.\n        // The disabled class will prevent this so don't add it on the active radio\n        return this.controlOrGroupDisabled && !this.isActive;\n    }\n    /**\n     * @return {?}\n     */\n    get isActive() {\n        return this.btnRadio === this.value;\n    }\n    /**\n     * @return {?}\n     */\n    get tabindex() {\n        if (this.controlOrGroupDisabled) {\n            // Disabled radio buttons should not receive focus\n            return undefined;\n        }\n        else if (this.isActive || this.group == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get hasFocus() {\n        return this._hasFocus;\n    }\n    /**\n     * @return {?}\n     */\n    toggleIfAllowed() {\n        if (!this.canToggle()) {\n            return;\n        }\n        this.value = this.uncheckable && this.btnRadio === this.value ? undefined : this.btnRadio;\n        this._onChange(this.value);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onSpacePressed(event) {\n        this.toggleIfAllowed();\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.el.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    onFocus() {\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    onBlur() {\n        this._hasFocus = false;\n        this.onTouched();\n    }\n    /**\n     * @return {?}\n     */\n    canToggle() {\n        return !this.controlOrGroupDisabled && (this.uncheckable || this.btnRadio !== this.value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.uncheckable = typeof this.uncheckable !== 'undefined';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onChange(value) {\n        if (this.group) {\n            this.group.value = value;\n            return;\n        }\n        this.onTouched();\n        this.onChange(value);\n    }\n    // ControlValueAccessor\n    // model -> view\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this.cdr.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this._disabled = disabled;\n        if (disabled) {\n            this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\n            return;\n        }\n        this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n    }\n}\nButtonRadioDirective.ɵfac = function ButtonRadioDirective_Factory(t) { return new (t || ButtonRadioDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => ButtonRadioGroupDirective)), 8)); };\nButtonRadioDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ButtonRadioDirective, selectors: [[\"\", \"btnRadio\", \"\"]], hostVars: 8, hostBindings: function ButtonRadioDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ButtonRadioDirective_click_HostBindingHandler() { return ctx.toggleIfAllowed(); })(\"keydown.space\", function ButtonRadioDirective_keydown_space_HostBindingHandler($event) { return ctx.onSpacePressed($event); })(\"focus\", function ButtonRadioDirective_focus_HostBindingHandler() { return ctx.onFocus(); })(\"blur\", function ButtonRadioDirective_blur_HostBindingHandler() { return ctx.onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"aria-disabled\", ctx.controlOrGroupDisabled)(\"aria-checked\", ctx.isActive)(\"tabindex\", ctx.tabindex);\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.hasDisabledClass)(\"active\", ctx.isActive);\n    } }, inputs: { value: \"value\", disabled: \"disabled\", uncheckable: \"uncheckable\", btnRadio: \"btnRadio\" }, features: [ɵngcc0.ɵɵProvidersFeature([RADIO_CONTROL_VALUE_ACCESSOR])] });\n/** @nocollapse */\nButtonRadioDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: ButtonRadioGroupDirective, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => ButtonRadioGroupDirective)),] }] }\n];\nButtonRadioDirective.propDecorators = {\n    btnRadio: [{ type: Input }],\n    uncheckable: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    controlOrGroupDisabled: [{ type: HostBinding, args: ['attr.aria-disabled',] }],\n    hasDisabledClass: [{ type: HostBinding, args: ['class.disabled',] }],\n    isActive: [{ type: HostBinding, args: ['class.active',] }, { type: HostBinding, args: ['attr.aria-checked',] }],\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    tabindex: [{ type: HostBinding, args: ['attr.tabindex',] }],\n    toggleIfAllowed: [{ type: HostListener, args: ['click',] }],\n    onSpacePressed: [{ type: HostListener, args: ['keydown.space', ['$event'],] }],\n    onFocus: [{ type: HostListener, args: ['focus',] }],\n    onBlur: [{ type: HostListener, args: ['blur',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonRadioDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[btnRadio]',\n                providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ButtonRadioGroupDirective, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => ButtonRadioGroupDirective))]\n            }] }]; }, { role: [{\n            type: HostBinding,\n            args: ['attr.role']\n        }], value: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], controlOrGroupDisabled: [{\n            type: HostBinding,\n            args: ['attr.aria-disabled']\n        }], hasDisabledClass: [{\n            type: HostBinding,\n            args: ['class.disabled']\n        }], isActive: [{\n            type: HostBinding,\n            args: ['class.active']\n        }, {\n            type: HostBinding,\n            args: ['attr.aria-checked']\n        }], tabindex: [{\n            type: HostBinding,\n            args: ['attr.tabindex']\n        }], \n    /**\n     * @return {?}\n     */\n    toggleIfAllowed: [{\n            type: HostListener,\n            args: ['click']\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onSpacePressed: [{\n            type: HostListener,\n            args: ['keydown.space', ['$event']]\n        }], \n    /**\n     * @return {?}\n     */\n    onFocus: [{\n            type: HostListener,\n            args: ['focus']\n        }], \n    /**\n     * @return {?}\n     */\n    onBlur: [{\n            type: HostListener,\n            args: ['blur']\n        }], uncheckable: [{\n            type: Input\n        }], btnRadio: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    ButtonRadioDirective.prototype.onChange;\n    /** @type {?} */\n    ButtonRadioDirective.prototype.onTouched;\n    /**\n     * Radio button value, will be set to `ngModel`\n     * @type {?}\n     */\n    ButtonRadioDirective.prototype.btnRadio;\n    /**\n     * If `true` — radio button can be unchecked\n     * @type {?}\n     */\n    ButtonRadioDirective.prototype.uncheckable;\n    /** @type {?} */\n    ButtonRadioDirective.prototype.role;\n    /**\n     * @type {?}\n     * @private\n     */\n    ButtonRadioDirective.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    ButtonRadioDirective.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    ButtonRadioDirective.prototype._hasFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    ButtonRadioDirective.prototype.el;\n    /**\n     * @type {?}\n     * @private\n     */\n    ButtonRadioDirective.prototype.cdr;\n    /**\n     * @type {?}\n     * @private\n     */\n    ButtonRadioDirective.prototype.renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    ButtonRadioDirective.prototype.group;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst RADIO_CONTROL_VALUE_ACCESSOR$1 = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => ButtonRadioGroupDirective)),\n    multi: true\n};\n/**\n * A group of radio buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\nclass ButtonRadioGroupDirective {\n    /**\n     * @param {?} cdr\n     */\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.role = 'radiogroup';\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this._value = value;\n        this.onChange(value);\n    }\n    /**\n     * @return {?}\n     */\n    get tabindex() {\n        if (this._disabled) {\n            return null;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._value = value;\n        this.cdr.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        if (this.radioButtons) {\n            this._disabled = disabled;\n            this.radioButtons.forEach((/**\n             * @param {?} buttons\n             * @return {?}\n             */\n            buttons => {\n                buttons.setDisabledState(disabled);\n            }));\n            this.cdr.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onFocus() {\n        if (this._disabled) {\n            return;\n        }\n        /** @type {?} */\n        const activeRadio = this.getActiveOrFocusedRadio();\n        if (activeRadio) {\n            activeRadio.focus();\n        }\n        else {\n            /** @type {?} */\n            const firstEnabled = this.radioButtons.find((/**\n             * @param {?} r\n             * @return {?}\n             */\n            r => !r.disabled));\n            if (firstEnabled) {\n                firstEnabled.focus();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onBlur() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    selectNext(event) {\n        this.selectInDirection('next');\n        event.preventDefault();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    selectPrevious(event) {\n        this.selectInDirection('previous');\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    selectInDirection(direction) {\n        if (this._disabled) {\n            return;\n        }\n        /**\n         * @param {?} currentIndex\n         * @param {?} buttonRadioDirectives\n         * @return {?}\n         */\n        function nextIndex(currentIndex, buttonRadioDirectives) {\n            /** @type {?} */\n            const step = direction === 'next' ? 1 : -1;\n            /** @type {?} */\n            let calcIndex = (currentIndex + step) % buttonRadioDirectives.length;\n            if (calcIndex < 0) {\n                calcIndex = buttonRadioDirectives.length - 1;\n            }\n            return calcIndex;\n        }\n        /** @type {?} */\n        const activeRadio = this.getActiveOrFocusedRadio();\n        if (activeRadio) {\n            /** @type {?} */\n            const buttonRadioDirectives = this.radioButtons.toArray();\n            /** @type {?} */\n            const currentActiveIndex = buttonRadioDirectives.indexOf(activeRadio);\n            for (let i = nextIndex(currentActiveIndex, buttonRadioDirectives); i !== currentActiveIndex; i = nextIndex(i, buttonRadioDirectives)) {\n                if (buttonRadioDirectives[i].canToggle()) {\n                    buttonRadioDirectives[i].toggleIfAllowed();\n                    buttonRadioDirectives[i].focus();\n                    break;\n                }\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getActiveOrFocusedRadio() {\n        return this.radioButtons.find((/**\n         * @param {?} button\n         * @return {?}\n         */\n        button => button.isActive)) || this.radioButtons.find((/**\n         * @param {?} button\n         * @return {?}\n         */\n        button => button.hasFocus));\n    }\n}\nButtonRadioGroupDirective.ɵfac = function ButtonRadioGroupDirective_Factory(t) { return new (t || ButtonRadioGroupDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nButtonRadioGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ButtonRadioGroupDirective, selectors: [[\"\", \"btnRadioGroup\", \"\"]], contentQueries: function ButtonRadioGroupDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ButtonRadioDirective, 0);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.radioButtons = _t);\n    } }, hostVars: 2, hostBindings: function ButtonRadioGroupDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function ButtonRadioGroupDirective_focus_HostBindingHandler() { return ctx.onFocus(); })(\"blur\", function ButtonRadioGroupDirective_blur_HostBindingHandler() { return ctx.onBlur(); })(\"keydown.ArrowRight\", function ButtonRadioGroupDirective_keydown_ArrowRight_HostBindingHandler($event) { return ctx.selectNext($event); })(\"keydown.ArrowDown\", function ButtonRadioGroupDirective_keydown_ArrowDown_HostBindingHandler($event) { return ctx.selectNext($event); })(\"keydown.ArrowLeft\", function ButtonRadioGroupDirective_keydown_ArrowLeft_HostBindingHandler($event) { return ctx.selectPrevious($event); })(\"keydown.ArrowUp\", function ButtonRadioGroupDirective_keydown_ArrowUp_HostBindingHandler($event) { return ctx.selectPrevious($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.tabindex);\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([RADIO_CONTROL_VALUE_ACCESSOR$1])] });\n/** @nocollapse */\nButtonRadioGroupDirective.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nButtonRadioGroupDirective.propDecorators = {\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    radioButtons: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => ButtonRadioDirective)),] }],\n    tabindex: [{ type: HostBinding, args: ['attr.tabindex',] }],\n    onFocus: [{ type: HostListener, args: ['focus',] }],\n    onBlur: [{ type: HostListener, args: ['blur',] }],\n    selectNext: [{ type: HostListener, args: ['keydown.ArrowRight', ['$event'],] }, { type: HostListener, args: ['keydown.ArrowDown', ['$event'],] }],\n    selectPrevious: [{ type: HostListener, args: ['keydown.ArrowLeft', ['$event'],] }, { type: HostListener, args: ['keydown.ArrowUp', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonRadioGroupDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[btnRadioGroup]',\n                providers: [RADIO_CONTROL_VALUE_ACCESSOR$1]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { role: [{\n            type: HostBinding,\n            args: ['attr.role']\n        }], tabindex: [{\n            type: HostBinding,\n            args: ['attr.tabindex']\n        }], \n    /**\n     * @return {?}\n     */\n    onFocus: [{\n            type: HostListener,\n            args: ['focus']\n        }], \n    /**\n     * @return {?}\n     */\n    onBlur: [{\n            type: HostListener,\n            args: ['blur']\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    selectNext: [{\n            type: HostListener,\n            args: ['keydown.ArrowRight', ['$event']]\n        }, {\n            type: HostListener,\n            args: ['keydown.ArrowDown', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    selectPrevious: [{\n            type: HostListener,\n            args: ['keydown.ArrowLeft', ['$event']]\n        }, {\n            type: HostListener,\n            args: ['keydown.ArrowUp', ['$event']]\n        }], radioButtons: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => ButtonRadioDirective))]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    ButtonRadioGroupDirective.prototype.onChange;\n    /** @type {?} */\n    ButtonRadioGroupDirective.prototype.onTouched;\n    /** @type {?} */\n    ButtonRadioGroupDirective.prototype.role;\n    /** @type {?} */\n    ButtonRadioGroupDirective.prototype.radioButtons;\n    /**\n     * @type {?}\n     * @private\n     */\n    ButtonRadioGroupDirective.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    ButtonRadioGroupDirective.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    ButtonRadioGroupDirective.prototype.cdr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ButtonsModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return { ngModule: ButtonsModule, providers: [] };\n    }\n}\nButtonsModule.ɵfac = function ButtonsModule_Factory(t) { return new (t || ButtonsModule)(); };\nButtonsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ButtonsModule });\nButtonsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ButtonsModule, { declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective], exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective],\n                exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective, ButtonsModule, CHECKBOX_CONTROL_VALUE_ACCESSOR as ɵa, RADIO_CONTROL_VALUE_ACCESSOR$1 as ɵb, RADIO_CONTROL_VALUE_ACCESSOR as ɵc };\n\n//# sourceMappingURL=ngx-bootstrap-buttons.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    data: {\n      title: 'Dashboard',\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n","import { Component,OnChanges,OnDestroy,OnInit,SimpleChanges } from '@angular/core';\nimport { DashboardChartsData, IChartProps } from './dashboard-charts-data';\nimport { ITableData } from './dashboard';\nimport { CommonDataService } from '../../Common/common-data.service';\nimport { DataService } from '../../service/data.service';\nimport { FormGroup,FormBuilder,Validators,FormControl,AbstractControl,FormGroupName } from '@angular/forms';\nimport {DatePipe,formatDate} from '@angular/common';\n@Component({\n  templateUrl: 'dashboard.component.html',\n  styleUrls: ['dashboard.component.scss'],\n})\n\nexport class DashboardComponent implements OnInit {\n  public radioModel = 'Month';\n  error: any;\n  public online: any = {};\n  public offline: any = {};\n  public data: ITableData;\n  public mainChart: IChartProps = {};\n  public chart: Array<IChartProps> = [];\n  public brandBoxChart: IChartProps = {};\n  public barChart: any = {};\n  public doughnutChart: IChartProps = {};\n  public statusMachineChart: any = {};\n  public salesDetailsChart: any = {};\n  public soldItemsChart: any = {};\n  public transactionChart: any = {};\n  public active: number;\n  public inActive:number;\n  public empList: Array<ITableData> = [];\n  public jsons: any;\n  public itemName:  ITableData[] \n  public totalQuantity:  ITableData[]\n  public fromDate:string ;\n  public toDate:string ;\n  public fromDates:string ;\n  public toDates:string ;\n  public dateRangeForm: FormGroup;\n  public inputvalue:number= 39;\n  public simpleForm: FormGroup;\n  public submitted = false;\n  public formErrors: any;\n  public totalRevenue: number ;\n  public orderCreated : number ;\n  public paymentSuccess : number ;\n  public completed : number ;\n  public dispenseFailed : number ;\n  public transactionFailed : number ;\n  public completedPercentage: number ;\n  public failedPercentage: number ;\n  public revenuePercentage: number ;\n  public onlinepercentage: number ;\n  public offlinepercentage: number ;\n  public transactionArrayLength: number ;\n  public revenueArrayLength: number ;\n  public soldArrayLength: number ;\n  public bhujiaSev : number ;\n  public pepsi : number ;\n  public chips : number ;\n  public sanitaryNapkinSmall : number ;\n\n  public bhujiaSevName : string ;\n  public pepsiName : string ;\n  public chipsName : string ;\n  public sanitaryNapkinSmallName : string ;\n\n  public bhujiaSevPercentage : number ;\n  public pepsiPercentage : number ;\n  public chipsPercentage : number ;\n  public sanitaryNapkinSmallPercentage : number ;\n  public transactionFromDate : string;\n  public transactionTodate: string;\n  public revenueFromDate : string;\n  public revenueTodate: string;\n  public flag: string;\n  public monthOrYear: string;\n  public isShown: boolean  ;\n  public ispieShown: boolean ;\n  public isHide: boolean  ;\n  public isPieHide: boolean  ;\n  public contactForm:FormGroup;\n  public selectedOption: string;\n  public printedOption: string;\n\n  public isbhujiaSev: boolean ;\n  public ispepsi: boolean ;\n  public ischips: boolean ;\n  public issanitaryNapkinSmall: boolean ;\n\n  countries = [\n    { value: \"m\", name: \"Month\" },\n    { value: \"Y\", name: \"Year\" }\n  ];\n\nconstructor(private chartsData: DashboardChartsData, private fb: FormBuilder, private service: DataService, private commonData: CommonDataService,) \n  {\n    this.createForm();\n    this.service.getAllStatusOfMachines(this.commonData.merchantId).subscribe(\n      (data: ITableData) => {\n        this.data = data; \n        this.MachineStatus(data)\n        console.log(data);\n      }, \n      (error) => (this.error = error) \n    );\n    \n    this.service.getSoldItemDetails(this.commonData.merchantId).subscribe(\n      (data: any[]) => {\n        this.soldArrayLength = data.length;\n        this.soldItems(data)\n        console.log(data);\n      }, \n      (error) => (this.error = error) \n    );\n\n\n    let dte = new Date();\n    dte.setDate(dte.getDate() - 30);\n    let currentDate = formatDate(new Date(), 'dd-MM-yyyy', 'en');\n    var datePipe =  new DatePipe(\"en-US\");\n    let lastThirtyDaysDate = datePipe.transform(dte, 'dd-MM-yyyy');\n\n    let transaction  =  {\n      \"fromDate\": lastThirtyDaysDate,\n      \"merchantId\": this.commonData.merchantId,\n      \"toDate\"  : currentDate,      \n    }\n    this.onAddTransactionDate(transaction);\n\n    let revenue = {\n      \"flag\":\"m\",\n      \"merchantId\": this.commonData.merchantId,   \n    }\n    this.onAddRevenueDate(revenue);\n}\n\nonAddTransactionDate(addItems : any={}){\n  if(addItems.fromDate == null || addItems.fromDate == '' && addItems.toDate == null || addItems.toDate == '' )\n  {\n    var datePipe =  new DatePipe(\"en-US\");\n    this.fromDate = datePipe.transform(this.fromDate, 'dd-MM-yyyy');\n    this.toDate = datePipe.transform(this.toDate, 'dd-MM-yyyy');\n    let spr = {\n      \"fromDate\": this.fromDate +\" 00:00:00\",\n      \"merchantId\": this.commonData.merchantId,\n      \"toDate\": this.toDate+\" 23:59:59\",     \n    }\n    this.service.getTransactionCountByStatus(spr).subscribe((resp: any) => {\n      this.transactionArrayLength = resp.length;\n      console.log(\"getTransactionCountByStatus Reponse:::\" + JSON.stringify(resp));\n      this.transactionFromDate = spr.fromDate;\n      this.transactionTodate = spr.toDate;\n      this.transactionCount(resp);\n      if (resp && resp.status == 200) {      \n        console.log(resp);\n        console.log('resp length'+resp.length);\n      }\n      \n    });\n  }\n  else{\n    var datePipe =  new DatePipe(\"en-US\");\n    this.fromDate = datePipe.transform(this.fromDate, 'dd-MM-yyyy');\n    this.toDate = datePipe.transform(this.toDate, 'dd-MM-yyyy');\n    let spr = {\n      \"fromDate\": addItems.fromDate +\" 00:00:00\",\n      \"merchantId\": this.commonData.merchantId,\n      \"toDate\": addItems.toDate+\" 23:59:59\",     \n    }\n\n    this.service.getTransactionCountByStatus(spr).subscribe((resp: any) => {\n      this.transactionArrayLength = resp.length;\n      console.log(\"getTransactionCountByStatus Reponse:::\" + JSON.stringify(resp));\n      this.transactionFromDate = spr.fromDate;\n      this.transactionTodate = spr.toDate;\n      this.transactionCount(resp);\n      if (resp && resp.status == 200) {      \n        console.log(resp);\n        console.log('resp length'+resp.length);\n      }     \n    });\n  }       \n}\n\nonAddRevenueDate(addItems : any={}){\n  if(addItems.country == null || addItems.country == '')\n  {\n  let revenueDate = {\n    \"flag\": \"m\",\n    \"merchantId\": this.commonData.merchantId,\n  }\n  this.service.getTotalMerchantRevenueByDate(revenueDate).subscribe((resp: any) => {\n    console.log(\"TotalMerchantRevenueByDate Reponse:::\" + JSON.stringify(resp));\n    this.revenueArrayLength = resp.length;\n    this.flag = revenueDate.flag\n    this.merchantRevenue(resp);\n    if (resp && resp.status == 200) {\n      console.log(resp);\n    }      \n  });\n}\nelse{\n\n  let revenueDate = {\n    \"flag\": addItems.country,\n    \"merchantId\": this.commonData.merchantId,    \n  }\n\n  this.service.getTotalMerchantRevenueByDate(revenueDate).subscribe((resp: any) => {\n    console.log(\"TotalMerchantRevenueByDate Reponse:::\" + JSON.stringify(resp));\n    this.revenueArrayLength = resp.length;\n    this.flag = revenueDate.flag\n    this.merchantRevenue(resp);\n    if (resp && resp.status == 200) {\n      console.log(resp);\n    }      \n  });\n}\n  \n}\n \nMachineStatus(data: ITableData): void {\n  debugger;\n  this.active  = 0 ;\n  this.inActive = 0 ;\n  if(data.inActiveCount == null || data.inActiveCount == 0 || data.inActiveCount == NaN){\n    data.inActiveCount = 0\n  }\n  \nthis.active =  data.activeCount;\nthis.inActive = data.inActiveCount;\nthis.onlinepercentage = (data.activeCount) /(data.activeCount + data.inActiveCount)*100 ;\nthis.offlinepercentage = (data.inActiveCount)/(data.activeCount + data.inActiveCount)*100; \nthis.statusMachineChart.arbarChartLabels = [['Online'], ['Offline']];\nthis.statusMachineChart.arbarChartType = 'pie';\nthis.statusMachineChart.arbarChartLegend = true;\nthis.statusMachineChart.arbarChartData = [data.activeCount, data.inActiveCount];\nthis.statusMachineChart.arbarChartOptions = {}\nthis.statusMachineChart.pieChartPlugins  = [];\nthis.statusMachineChart.pieColor  = [\n  {\n    backgroundColor: [\n      'rgba(50,205,50)',\n      'rgba(255,69,0)',\n    ]\n  }\n];\n}\n\nsoldItems(data: any[]): void {\n  this.bhujiaSev = 0 ;\n  this.pepsi = 0 ;\n  this.chips = 0 ;\n  this.sanitaryNapkinSmall = 0 ;\n  this.bhujiaSevPercentage = 0;\n  this.pepsiPercentage = 0;\n  this.chipsPercentage = 0;\n  this.sanitaryNapkinSmallPercentage = 0;\n\n for (let i = 0; i < this.soldArrayLength; i++) {\n  if(data[i].itemName == \"Bhujia Sev\"){\n    this.bhujiaSev = data[i].totalQuantity;\n    this.bhujiaSevName =data[i].itemName;\n    this.isbhujiaSev = true;\n\n  }\n  else if(data[i].itemName == \"Pepsi\")\n  {\n    this.pepsi = data[i].totalQuantity ;\n    this.pepsiName = data[i].itemName;\n    this.ispepsi = true;\n\n  }\n  else if(data[i].itemName == \"chips\")\n  {\n    this.chips = data[i].totalQuantity;\n    this.chipsName = data[i].itemName;\n    this.ischips = true;\n  }\n  else\n  {\n    this.sanitaryNapkinSmall = data[i].totalQuantity ;\n    this.sanitaryNapkinSmallName = data[i].itemName;\n    this.issanitaryNapkinSmall = true;\n  }\n }\n this.bhujiaSevPercentage = (this.bhujiaSev) /(this.bhujiaSev + this.pepsi + this.chips + this.sanitaryNapkinSmall )*100 ;\n this.pepsiPercentage = (this.pepsi) /(this.bhujiaSev + this.pepsi + this.chips + this.sanitaryNapkinSmall)*100 ;\n this.chipsPercentage = (this.chips) /(this.bhujiaSev + this.pepsi + this.chips + this.sanitaryNapkinSmall)*100 ;\n this.sanitaryNapkinSmallPercentage =(this.sanitaryNapkinSmall) / (this.bhujiaSev + this.pepsi + this.chips + this.sanitaryNapkinSmall)*100 ;\n\n  this.soldItemsChart.doughnutChartLabels = [[this.bhujiaSevName],[this.pepsiName],[this.chipsName],[this.sanitaryNapkinSmallName]];\n  this.soldItemsChart.doughnutChartType = 'doughnut';\n  this.soldItemsChart.doughnutChartLegend = true;\n  this.soldItemsChart.doughnutChartData =  [this.bhujiaSev,this.pepsi,this.chips,this.sanitaryNapkinSmall];\n  this.soldItemsChart.doughnutChartOptions = {}\n  this.soldItemsChart.pieColor  = [\n    {\n      backgroundColor: [\n        ['rgba(242,77,65,255)'],\n        ['rgba(49,182,77,255)'],\n        ['rgba(252,203,86,255)'],\n        ['rgba(104,223,237,255)']\n      ]\n    }\n  ];\n}\n\ntransactionCount(data: ITableData): void {\nif(this.transactionArrayLength == 0 || this.transactionArrayLength == null){\n  this.isShown = true;\n  this.ispieShown = false;\n}\nelse{\n  this.isShown =  false;\n  this.ispieShown = true;\n}\n    this.transactionFailed = 0;\n    this.completed = 0;\n    this.dispenseFailed = 0;\n    this.orderCreated = 0;\n    this.paymentSuccess = 0;\n    this.completedPercentage = 0;\n    this.failedPercentage = 0;\n\n    for (let i = 0; i < this.transactionArrayLength; i++) {\n    if(data[i].transactionStatus == \"COMPLETED\"){\n      this.completed = data[i].count;\n    }\n    else if(data[i].transactionStatus == \"DISPENSE FAILED\")\n    {\n      this.dispenseFailed = data[i].count ;\n    }\n    else if(data[i].transactionStatus == \"ORDER CREATED\")\n    {\n      this.orderCreated = data[i].count;\n    }\n    else if(data[i].transactionStatus == \"PAYMENT SUCCESS\")\n    {\n      this.paymentSuccess = data[i].count;\n    }\n    else\n    {\n      this.transactionFailed = data[i].count ;\n    }\n    }\n  if((this.dispenseFailed + this.completed) != 0){\n      this.completedPercentage = ((this.completed)/(this.dispenseFailed + this.completed))*100;\n      this.failedPercentage =  ((this.dispenseFailed)/(this.dispenseFailed + this.completed))*100;\n\n  }\n  else{\n    this.completedPercentage = 0;\n    this.failedPercentage =  0;\n  }\n      \n  this.transactionChart.arbarChartLabels = ['Success','Failed'];\n  this.transactionChart.arbarChartType = 'pie';\n  this.transactionChart.arbarChartLegend = true;\n  this.transactionChart.arbarChartData = [this.completed,this.dispenseFailed];\n  this.transactionChart.arbarChartOptions = {\n  }\n  this.transactionChart.pieChartPlugins  = [];\n  this.transactionChart.pieColor  = [\n    {\n      backgroundColor: [\n        'rgba(34,139,34)',\n        'rgba(255,0,0)',\n        \n      ]\n    }\n  ]\n\n\n}\n\nmerchantRevenue(data: ITableData): void {\nif(data['totalRevenueData'].week1 == 0 && this.flag == 'm' || data['totalRevenueData'].week1 == null && this.flag == 'm' || data['totalRevenueData'].DECEMBER2021 == 0 &&  this.flag == 'Y' || data['totalRevenueData'].DECEMBER2021 == null && this.flag == 'Y'){\n  this.isHide = true;\n  this.isPieHide = false;\n}\nelse{\n  this.isHide =  false;\n  this.isPieHide = true;\n}\n\n    // if(data.totalRevenue == null ||data.totalRevenue == 0 ){\n    //   this.totalRevenue = 0;\n    //   this.revenuePercentage = 0;\n    // }\n    // else{\n    //   this.totalRevenue = data.totalRevenue;\n    //   this.revenuePercentage =  (data.totalRevenue / (data.totalRevenue + 0))*100;\n    // }\n    if(this.flag == 'm'){\n      this.monthOrYear = \"Month\";\n      this.salesDetailsChart.arbarChartLabels = ['week1','week2','week3','week4'];\n      this.salesDetailsChart.arbarChartType = 'bar';\n      this.salesDetailsChart.arbarChartLegend = true;\n      this.salesDetailsChart.arbarChartData = [data['totalRevenueData']['week1'],data['totalRevenueData']['week2'],data['totalRevenueData']['week3'],data['totalRevenueData']['week4']];\n      this.salesDetailsChart.arbarChartOptions = {\n\n          scales: {\n              xAxes: [{\n                  barPercentage: 0.4\n              }]\n          }\n      \n      }\n      this.salesDetailsChart.pieChartPlugins  = [];\n      this.salesDetailsChart.pieColor  = [\n        {\n          backgroundColor: [\n            'rgba(255,161,181,255)',\n            'rgba(134,199,243,255)',\n            'rgba(255,225,153,255)',\n            'rgb(204,211,217)',\n            'rgba(255,161,181,255)',\n            \n          ]\n        }\n        ];       \n    }\n    else{\n      this.monthOrYear = \"Year\";\n      this.salesDetailsChart.arbarChartLabels = ['DECEMBER2021','JANUARY2022','FEBRUARY2022','MARCH2022',];\n      this.salesDetailsChart.arbarChartType = 'bar';\n      this.salesDetailsChart.arbarChartLegend = true;\n      this.salesDetailsChart.arbarChartData = [data['totalRevenueData'].DECEMBER2021,data['totalRevenueData'].JANUARY2022,data['totalRevenueData'].FEBRUARY2022,data['totalRevenueData'].MARCH2022,];\n      this.salesDetailsChart.arbarChartOptions = {\n        scales: {\n          xAxes: [{\n              barPercentage: 0.4\n          }]\n      }\n      }\n      this.salesDetailsChart.pieChartPlugins  = [];\n      this.salesDetailsChart.pieColor  = [\n        {\n          backgroundColor: [\n            'rgba(255,161,181,255)',\n            'rgba(134,199,243,255)',\n            'rgba(255,225,153,255)',\n            'rgb(204,211,217)',\n            'rgba(255,161,181,255)',\n            \n          ]\n        }\n      ];\n    }\n}\n \nngOnInit(): void {\n  this.initCharts();\n  this.dateRangeForm = this.fb.group({\n    fromDate: new FormControl('', Validators.required),\n    toDate: new FormControl('', Validators.required)\n  });\n\n  this.contactForm = this.fb.group({\n    country: [null]\n  });\n}\n\ninitCharts(): void {\n  this.mainChart = this.chartsData.mainChart;\n  this.chart = this.chartsData.widgetChart;\n  this.brandBoxChart = this.chartsData.brandBoxChart;\n  this.barChart      = this.chartsData.barChart;\n}\n\ncreateForm() {\n  this.simpleForm = this.fb.group(\n    {\n      fromDate: ['', [Validators.required]],\n      toDate:['', [Validators.required]],\n      fromDates: ['', [Validators.required]],\n      toDates:['', [Validators.required]],\n      flag:['', [Validators.required]],\n    },    \n  );\n}\n\nget f() {\n  return this.simpleForm.controls;\n}\n\nonReset() {\n  this.submitted = false;\n  this.simpleForm.reset();\n}\n\nonValidate() {\n  this.submitted = true;\n  return this.simpleForm.status === 'VALID';\n}\n\nsubmit(){\n  console.log(this.contactForm.value);\n}\n  \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  //   this.barChart.arbarChartLabels = ['Success','Failed','Order Created','Payment Success','Transaction Failed'];\n  //   this.barChart.arbarChartType = 'bar';\n  //   this.barChart.arbarChartLegend = false;\n  //   this.barChart.arbarChartData = [this.completed,this.dispenseFailed,this.orderCreated,this.paymentSuccess,this.transactionFailed];\n    \n  //   this.barChart.arbarChartOptions = {\n  //     scales: {\n  //         xAxes: [{\n  //             barPercentage: 0.7\n  //         }]\n  //     }\n  // }\n  //   this.barChart.pieChartPlugins  = [];\n  //   this.barChart.pieColor  = [\n  //     {\n  //       backgroundColor: [\n  //         'rgba(37,150,190,255)',\n  //         'rgba(147,217,217,255)',\n  //         'rgb(153,153,255)',\n  //         'rgba(255,161,181,255)',\n  //         'rgba(134,199,243,255)'\n  //       ]\n  //     }\n  //   ]"]}