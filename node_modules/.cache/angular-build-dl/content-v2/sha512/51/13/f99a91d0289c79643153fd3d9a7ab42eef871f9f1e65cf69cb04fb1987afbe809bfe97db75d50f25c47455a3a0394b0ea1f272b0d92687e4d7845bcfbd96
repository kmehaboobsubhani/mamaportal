{"version":3,"sources":["./src/app/views/inventory/addItems/addItems-routing.module.ts","./src/app/views/inventory/addItems/validation-forms.service.ts","./src/app/views/inventory/addItems/addItems.module.ts","./src/app/views/inventory/addItems/addItems.component.ts","./src/app/views/inventory/addItems/addItems.component.css","./src/app/views/inventory/addItems/addItems.component.html"],"names":[],"mappings":"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","file":"views-inventory-addItems-addItems-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddItemsComponent } from './addItems.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddItemsComponent,\r\n    data: {\r\n      title: 'Add Items',\r\n    },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddItemsRoutingModule {}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationFormsService {\n\n  errorMessages: any;\n\n  formRules = {\n    nonEmpty: '^[a-zA-Z0-9]+([_ -]?[a-zA-Z0-9])*$',\n    usernameMin: 5,\n    passwordMin: 6,\n    passwordPattern: '(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}'\n  };\n\n  formErrors = {\n    firstName: '',\n    lastName: '',\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    accept: false,\n  };\n\n  constructor() {\n    this.errorMessages = {\n      firstName: {\n        required: 'First name is required',\n      },\n      lastName: {\n        required: 'Last name is required',\n      },\n      username: {\n        required: 'Username is required',\n        minLength: `'Username must be ${this.formRules.usernameMin} characters or more`,\n        pattern: 'Must contain letters and/or numbers, no trailing spaces'\n      },\n      email: {\n        required: 'required',\n        email: 'Invalid email address',\n      },\n      password: {\n        required: 'Password is required',\n        pattern: 'Password must contain: numbers, uppercase and lowercase letters',\n        minLength: `Password must be at least ${this.formRules.passwordMin} characters`\n      },\n      confirmPassword: {\n        required: 'Password confirmation is required',\n        passwordMismatch: 'Passwords must match'\n      },\n      accept: {\n        requiredTrue: 'You have to accept our Terms and Conditions'\n      },\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DataTableModule } from '@pascalhonegger/ng-datatable';\r\nimport { AddItemsComponent } from './addItems.component';\r\nimport { AddItemsRoutingModule } from './addItems-routing.module';\r\n\r\nimport { BadgeModule, ButtonModule, CardModule, FormModule, GridModule, SwitchModule, TabsetModule } from '@coreui/angular';\r\nimport { IconModule } from '@coreui/icons-angular';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ValidationFormsRoutingModule } from '../../forms/validation-forms/validation-forms-routing.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        AddItemsRoutingModule,\r\n        DataTableModule,\r\n        CardModule,\r\n        GridModule,\r\n        DataTableModule,\r\n        FormModule,\r\n        CommonModule,\r\n        AddItemsRoutingModule,\r\n        IconModule,\r\n        SwitchModule,\r\n        PaginationModule,\r\n        FormsModule,\r\n        TabsetModule,\r\n        BadgeModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        ValidationFormsRoutingModule,\r\n        GridModule,\r\n        CardModule,\r\n        ButtonModule,\r\n        BadgeModule,\r\n        FormModule,\r\n    ],\r\n  declarations: [AddItemsComponent],\r\n})\r\nexport class AddItemsInitModule {}\r\n","  import {\r\n    Component,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges,\r\n  } from '@angular/core';\r\n  import {\r\n    FormGroup,\r\n    FormBuilder,\r\n    Validators,\r\n    FormControl,\r\n    AbstractControl,\r\n    FormGroupName,\r\n  } from '@angular/forms';\r\n  import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n  import { ValidatorFn, ValidationErrors } from '@angular/forms';\r\n  import { ValidationFormsService } from './validation-forms.service';\r\n  import { CommonDataService } from '../../../Common/common-data.service';\r\n  import { DataService } from '../../../service/data.service';\r\n  import { Router } from '@angular/router';\r\n  import { AddItems } from './addItem';\r\n  /** passwords must match - custom validator */\r\n  export const confirmPasswordValidator: ValidatorFn = (\r\n    control: FormGroup\r\n  ): ValidationErrors | null => {\r\n    const password = control.get('password');\r\n    const confirm = control.get('confirmPassword');\r\n    return password && confirm && password.value === confirm.value\r\n      ? null\r\n      : { passwordMismatch: true };\r\n  };\r\n  \r\n  @Component({\r\n    selector: 'app-tabs',\r\n    templateUrl: './addItems.component.html',\r\n    styleUrls: ['./addItems.component.css'],\r\n    providers: [ValidationFormsService],\r\n  })\r\n\r\n  export class AddItemsComponent implements OnDestroy, OnInit {\r\n    addItems:any = {};\r\n    entryForm: FormGroup;\r\n    private _setTab: number;\r\n    get setTab() {\r\n      return this._setTab;\r\n    }\r\n    set setTab(value: number) {\r\n      this._setTab = value || 0;\r\n    }\r\n    private interval;\r\n  \r\n    private _lorem: string[] = [\r\n        ];\r\n    public get lorem() {\r\n      return [...this._lorem];\r\n    }\r\n  \r\n    private _tabs: any[] = [\r\n      { header: 'Merchant Info', panel: this.lorem[0], icon: 'cil-user' },\r\n      { header: 'Payment Info', panel: this.lorem[1], icon: 'cil-mobile' },\r\n      { header: 'Payment Gateway', panel: this.lorem[1], icon: 'cil-credit-card' },\r\n      \r\n      //{ header: 'Certificates', panel: this.lorem[3], icon: 'cil-envelope-closed' },\r\n    ];\r\n  \r\n    public get tabs() {\r\n      // const tabs = this._tabs.map((item) => Object.assign(Object.create(null), item));\r\n      // console.log('tabs:', tabs);\r\n      // return tabs;\r\n      return this._tabs;\r\n    }\r\n  \r\n    public get tabs2() {\r\n      // const tabs = this._tabs.map((item) => Object.assign(Object.create(null), item));\r\n      // console.log('tabs:', tabs);\r\n      // return tabs;\r\n      return this._tabs.filter((tab) => !tab.disabled);\r\n    }\r\n  \r\n    simpleForm: FormGroup;\r\n    submitted = false;\r\n    formErrors: any;\r\n  \r\n    constructor(private fb: FormBuilder, public vf: ValidationFormsService, private service: DataService, private commonData: CommonDataService,private router: Router, ) {\r\n      this.formErrors = this.vf.errorMessages;\r\n      this.createForm();\r\n    }\r\n  \r\n    ngOnInit() {\r\n  \r\n    }\r\n  \r\n    ngOnDestroy(): void {\r\n      // clearInterval(this.interval);\r\n    }\r\n  \r\n  \r\n  \r\n    onTabChange(e) {\r\n      console.log('onTabChange', e);\r\n    }\r\n  \r\n    createForm() {\r\n      this.simpleForm = this.fb.group(\r\n        {         \r\n          active : ['', [Validators.required]],\r\n          category : ['', [Validators.required]],\r\n          costPrice : ['', [Validators.required]],\r\n          description : ['', [Validators.required]],\r\n          discount : ['', [Validators.required]],\r\n          gst : ['', [Validators.required]],\r\n          itemId: ['', [Validators.required]],\r\n          merchantId : ['', [Validators.required]],\r\n          name : ['', [Validators.required]],\r\n          sellPrice : ['', [Validators.required]],\r\n          threshold : ['', [Validators.required]],\r\n        },\r\n      );\r\n    }\r\n  \r\n    // convenience getter for easy access to form fields\r\n    get f() {\r\n      return this.simpleForm.controls;\r\n    }\r\n  \r\n    onReset() {\r\n      this.submitted = false;\r\n      this.simpleForm.reset();\r\n    }\r\n  \r\n    onValidate() {\r\n      this.submitted = true;\r\n  \r\n      // stop here if form is invalid\r\n      return this.simpleForm.status === 'VALID';\r\n    }\r\n  \r\n    onAddItems(addItems : AddItems){\r\n      debugger;\r\n      this.service.AddItems(addItems).subscribe((resp: any) => {\r\n        console.log(\"login Reponse:::\" + JSON.stringify(resp));\r\n        if(resp && resp.statusCode == 200) {\r\n            console.log(\"Sucess\")\r\n            alert('SUCCESS!');\r\n        }    \r\n      });\r\n    }\r\n  \r\n    onSubmit() {\r\n      debugger;\r\n      //console.warn(this.onValidate(), this.simpleForm.value);\r\n      if (this.onValidate()) {\r\n        console.warn(this.simpleForm.value);\r\n        alert('SUCCESS!');\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n  ","export default \"::ng-deep .card-body {\\r\\n    flex: 1 1 auto;\\r\\n    min-height: 1px;\\r\\n    padding: 1.25rem;\\r\\n    margin-bottom: 280px;\\r\\n  }\\r\\n  \\r\\n  ::ng-deep .nav-tabs-boxed .tab-content {\\r\\n    padding: 0.75rem 1.25rem;\\r\\n    border: 1px solid;\\r\\n    border-radius: 0 0.25rem 0.25rem 0.25rem;\\r\\n    color: #768192;\\r\\n    background-color: #fff;\\r\\n    border-color: #d8dbe0;\\r\\n  }\\r\\n  \\r\\n  ::ng-deep .card-style {\\r\\n    border: none;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZEl0ZW1zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixvQkFBb0I7RUFDdEI7O0VBRUE7SUFDRSx3QkFBd0I7SUFDeEIsaUJBQWlCO0lBQ2pCLHdDQUF3QztJQUN4QyxjQUFjO0lBQ2Qsc0JBQXNCO0lBQ3RCLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLFlBQVk7RUFDZCIsImZpbGUiOiJhZGRJdGVtcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIC5jYXJkLWJvZHkge1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbiAgICBtaW4taGVpZ2h0OiAxcHg7XHJcbiAgICBwYWRkaW5nOiAxLjI1cmVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjgwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIDo6bmctZGVlcCAubmF2LXRhYnMtYm94ZWQgLnRhYi1jb250ZW50IHtcclxuICAgIHBhZGRpbmc6IDAuNzVyZW0gMS4yNXJlbTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMCAwLjI1cmVtIDAuMjVyZW0gMC4yNXJlbTtcclxuICAgIGNvbG9yOiAjNzY4MTkyO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlci1jb2xvcjogI2Q4ZGJlMDtcclxuICB9XHJcbiAgXHJcbiAgOjpuZy1kZWVwIC5jYXJkLXN0eWxlIHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICB9Il19 */\";","export default \"<div class=\\\"container-fluid\\\">\\r\\n  <form [formGroup]=\\\"entryForm\\\" novalidate>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"float-left\\\">\\r\\n          <h3 class=\\\"text-info\\\">Add Item</h3>\\r\\n        </div>\\r\\n        <div class=\\\"float-right\\\">\\r\\n          <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/items']\\\"><i class=\\\"fa fa-arrow-left\\\"></i> Back to Item List</a>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n\\r\\n        <ng-container>\\r\\n          <c-col md=\\\"12\\\">\\r\\n            <form [formGroup]=\\\"simpleForm\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\" class=\\\"needs-validation\\\">\\r\\n              <c-row>\\r\\n                <c-form-group cCol md=\\\"4\\\">\\r\\n                  <h6 class=\\\"col-form-label\\\" for=\\\"name\\\">Name :</h6>\\r\\n                  <input cInput id=\\\"name\\\" formControlName=\\\"name\\\" placeholder=\\\"Name\\\" autocomplete=\\\"given-name\\\" required\\r\\n                    [autofocus]=\\\"true\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': (submitted || f.name.touched) && f.name.invalid, 'is-valid': f.category.touched && f.name.valid  }\\\" />\\r\\n                  <div *ngIf=\\\"submitted && f['name'].invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f['name'].errors.required\\\">Name is required</div>\\r\\n                  </div>\\r\\n                </c-form-group>\\r\\n                <c-form-group cCol md=\\\"4\\\">\\r\\n                  <h6 class=\\\"col-form-label\\\" for=\\\"category\\\">category :</h6>\\r\\n                  <input cInput id=\\\"category\\\" formControlName=\\\"category\\\" placeholder=\\\"category\\\" autocomplete=\\\"given-name\\\" required\\r\\n                    [ngClass]=\\\"{ 'is-invalid': (submitted || f.category.touched) && f.category.errors, 'is-valid': f.description.touched && !f.category.errors }\\\" />\\r\\n                  <div *ngIf=\\\"submitted && f['category'].errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f['category'].errors.required\\\">category is required</div>\\r\\n                  </div>\\r\\n                </c-form-group>\\r\\n                <c-form-group cCol md=\\\"4\\\">\\r\\n                  <h6 class=\\\"col-form-label\\\" for=\\\"description\\\">Description :</h6>\\r\\n                  <input cInput id=\\\"description\\\" formControlName=\\\"description\\\" placeholder=\\\"description\\\"\\r\\n                    autocomplete=\\\"family-name\\\" required\\r\\n                    [ngClass]=\\\"{ 'is-invalid':  (submitted || f.description.touched) && f.description.invalid, 'is-valid': f.itemId.touched && f.description.valid }\\\" />\\r\\n                  <div *ngIf=\\\"submitted && f['description'].invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f['description'].errors.required\\\">Description is required</div>\\r\\n                  </div>\\r\\n                </c-form-group>\\r\\n              </c-row>\\r\\n              <c-row>\\r\\n                <c-form-group cCol md=\\\"6\\\">\\r\\n                  <h6 class=\\\"col-form-label\\\" for=\\\"itemId\\\">ItemId :</h6>\\r\\n                  <input cInput id=\\\"itemId\\\" formControlName=\\\"itemId\\\" placeholder=\\\"item Id\\\" autocomplete=\\\"given-name\\\"\\r\\n                    required [autofocus]=\\\"true\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': (submitted || f.itemId.touched) && f.itemId.invalid, 'is-valid': f.merchantId.touched && f.itemId.valid  }\\\" />\\r\\n                  <div *ngIf=\\\"submitted && f['itemId'].invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f['itemId'].errors.required\\\">ItemId is required</div>\\r\\n                  </div>\\r\\n                </c-form-group>\\r\\n                <c-form-group cCol md=\\\"6\\\">\\r\\n                  <h6 class=\\\"col-form-label\\\" for=\\\"merchantId\\\">MerchantId :</h6>\\r\\n                  <input cInput id=\\\"merchantId\\\" formControlName=\\\"merchantId\\\" placeholder=\\\"merchantId\\\"\\r\\n                    autocomplete=\\\"given-name\\\" required [autofocus]=\\\"true\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': (submitted || f.merchantId.touched) && f.merchantId.invalid, 'is-valid': f.gst.touched && f.merchantId.valid  }\\\" />\\r\\n                  <div *ngIf=\\\"submitted && f['merchantId'].invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f['merchantId'].errors.required\\\">merchantId is required</div>\\r\\n                  </div>\\r\\n                </c-form-group>\\r\\n\\r\\n              </c-row>\\r\\n              <c-row>\\r\\n                <c-form-group cCol md=\\\"6\\\">\\r\\n                  <h6 class=\\\"col-form-label\\\" for=\\\"gst\\\">Gst Number :</h6>\\r\\n                  <input cInput id=\\\"gst\\\" formControlName=\\\"gst\\\" placeholder=\\\"gstNumber\\\" autocomplete=\\\"given-name\\\"\\r\\n                    required [autofocus]=\\\"true\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': (submitted || f.gst.touched) && f.gst.invalid, 'is-valid': f.discount.touched && f.gst.valid  }\\\" />\\r\\n                  <div *ngIf=\\\"submitted && f['gst'].invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f['gst'].errors.required\\\">Gst Number is required</div>\\r\\n                  </div>\\r\\n                </c-form-group>\\r\\n                <c-form-group cCol md=\\\"6\\\">\\r\\n                  <h6 class=\\\"col-form-label\\\" for=\\\"discount\\\">Discount :</h6>\\r\\n                  <input cInput id=\\\"discount\\\" formControlName=\\\"discount\\\" placeholder=\\\"discount\\\"\\r\\n                    autocomplete=\\\"given-name\\\" required [autofocus]=\\\"true\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': (submitted || f.discount.touched) && f.discount.invalid, 'is-valid': f.costPrice.touched && f.discount.valid  }\\\" />\\r\\n                  <div *ngIf=\\\"submitted && f['discount'].invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f['discount'].errors.required\\\">Discount is required</div>\\r\\n                  </div>\\r\\n                </c-form-group>\\r\\n              </c-row>\\r\\n              <c-row>\\r\\n                <c-form-group cCol md=\\\"4\\\">\\r\\n                  <h6 class=\\\"col-form-label\\\" for=\\\"costPrice\\\">costPrice :</h6>\\r\\n                  <input cInput id=\\\"costPrice\\\" formControlName=\\\"costPrice\\\" placeholder=\\\"costPrice\\\"\\r\\n                    autocomplete=\\\"given-name\\\" required [autofocus]=\\\"true\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': (submitted || f.costPrice.touched) && f.costPrice.invalid, 'is-valid': f.sellPrice.touched && f.costPrice.valid  }\\\" />\\r\\n                  <div *ngIf=\\\"submitted && f['costPrice'].invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f['costPrice'].errors.required\\\">costPrice is required</div>\\r\\n                  </div>\\r\\n                </c-form-group>\\r\\n\\r\\n                <c-form-group cCol md=\\\"4\\\">\\r\\n                  <h6 class=\\\"col-form-label\\\" for=\\\"sellPrice\\\">sellPrice :</h6>\\r\\n                  <input cInput id=\\\"sellPrice\\\" formControlName=\\\"sellPrice\\\" placeholder=\\\"sellPrice\\\"\\r\\n                    autocomplete=\\\"given-name\\\" required [autofocus]=\\\"true\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': (submitted || f.sellPrice.touched) && f.sellPrice.invalid, 'is-valid': f.threshold.touched && f.sellPrice.valid  }\\\" />\\r\\n                  <div *ngIf=\\\"submitted && f['sellPrice'].invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f['sellPrice'].errors.required\\\">sellPrice is required</div>\\r\\n                  </div>\\r\\n                </c-form-group>\\r\\n\\r\\n                <c-form-group cCol md=\\\"4\\\">\\r\\n                  <h6 class=\\\"col-form-label\\\" for=\\\"threshold\\\">threshold :</h6>\\r\\n                  <input cInput id=\\\"threshold\\\" formControlName=\\\"threshold\\\" placeholder=\\\"threshold\\\"\\r\\n                    autocomplete=\\\"given-name\\\" required [autofocus]=\\\"true\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': (submitted || f.threshold.touched) && f.threshold.invalid, 'is-valid': f.active.touched && f.threshold.valid  }\\\" />\\r\\n                  <div *ngIf=\\\"submitted && f['threshold'].invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f['threshold'].errors.required\\\">threshold is required</div>\\r\\n                  </div>\\r\\n                </c-form-group>\\r\\n              </c-row>\\r\\n              <c-row>\\r\\n\\r\\n                <c-form-group cCol md=\\\"4\\\">\\r\\n                  <h6 class=\\\"col-form-label\\\" for=\\\"active\\\">active :</h6>\\r\\n                  <input cInput id=\\\"active\\\" formControlName=\\\"active\\\" placeholder=\\\"active\\\"\\r\\n                    autocomplete=\\\"given-name\\\" required [autofocus]=\\\"true\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': (submitted || f.active.touched) && f.active.invalid, 'is-valid': f.active.touched && f.active.valid  }\\\" />\\r\\n                  <div *ngIf=\\\"submitted && f['active'].invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f['active'].errors.required\\\">active is required</div>\\r\\n                  </div>\\r\\n                </c-form-group>\\r\\n              </c-row>\\r\\n\\r\\n              <c-form-group>\\r\\n                <button cButton color=\\\"primary\\\" class=\\\"mfe-1\\\" type=\\\"submit\\\" (click)=\\\"onAddItems(simpleForm.value)\\\"\\r\\n                   >Submit</button>\\r\\n                <button cButton color=\\\"success\\\" class=\\\"mfe-1\\\"  (click)=\\\"onValidate()\\\"\\r\\n                  >Validate</button>\\r\\n                <button cButton color=\\\"danger\\\" type=\\\"reset\\\" (click)=\\\"onReset()\\\" [tabindex]=\\\"'0'\\\">Clear</button>\\r\\n              </c-form-group>\\r\\n            </form>\\r\\n          </c-col>\\r\\n        </ng-container>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\";"],"sourceRoot":"webpack:///"}