{"version":3,"sources":["./src/app/views/dashboard/dashboard.component.scss","./src/app/views/dashboard/dashboard.module.ts","./src/app/views/dashboard/dashboard.component.html","./node_modules/ngx-bootstrap/buttons/fesm2015/ngx-bootstrap-buttons.js","./src/app/views/dashboard/dashboard-routing.module.ts","./src/app/views/dashboard/dashboard.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,sFAAuB,uBAAuB,gBAAgB,kBAAkB,GAAG,6CAA6C,uaAAua,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7gB;AACI;AAC7C,6CAA6C;AACa;AACJ;AAEK;AACS;AACrB;AACO;AAW7B;AAE0B;AACO;IAoC7C,eAAe,SAAf,eAAe;CAAI;AAAnB,eAAe;IA1B3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,0DAAW;YACX,kEAAmB;YACnB,gFAAsB;YACtB,gBAAgB;YAChB,uEAAgB;YAChB,mEAAa,CAAC,OAAO,EAAE;YACvB,6DAAa;YACb,0DAAU;YACV,0DAAU;YACV,gEAAU;YACV,8DAAc;YACd,4DAAY;YACZ,8DAAc;YACd,2DAAW;YACX,4DAAY;YACZ,4DAAY;YACZ,sEAAa;YACb,4DAAY;SAEb;QACD,YAAY,EAAE;YACZ,uEAAkB;SACnB;KACF,CAAC;GACW,eAAe,CAAI;AAAJ;;;;;;;;;;;;;AC3D5B;AAAe,yrDAA0nD,QAAQ,WAAW,oCAAoC,8RAA8R,UAAU,YAAY,qCAAqC,0aAA0a,WAAW,GAAG,eAAe,IAAI,wCAAwC,uVAAuV,OAAO,GAAG,WAAW,IAAI,oCAAoC,oVAAoV,OAAO,GAAG,WAAW,IAAI,oCAAoC,mWAAmW,qBAAqB,GAAG,yBAAyB,IAAI,kDAAkD,ssCAAssC,2HAA2H,8vBAA8vB,qHAAqH,wzCAAwzC,oCAAoC,yJAAyJ,mFAAmF,qBAAqB,qCAAqC,mBAAmB,oDAAoD,WAAW,oDAAoD,gBAAgB,6OAA6O,WAAW,YAAY,wCAAwC,kSAAkS,gBAAgB,WAAW,qCAAqC,q1BAAq1B,cAAc,qsCAAqsC,gCAAgC,2IAA2I,wBAAwB,aAAa,wDAAwD,iBAAiB,kCAAkC,eAAe,2CAA2C,cAAc,iTAAiT,cAAc,kBAAkB,sCAAsC,0HAA0H,E;;;;;;;;;;;;ACAjvW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+K;AAC5H;;AAEnD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AAC2B;AACxC;AACA,aAAa,gEAAiB;AAC9B;AACA,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4EAA4E,6CAA6C;AACzH,+BAA+B,+DAAwB,EAAE,yJAAyJ;AAClN,QAAQ,wDAAiB,uEAAuE,sBAAsB,EAAE;AACxH,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,2EAA2E,aAAa,gEAAyB,sCAAsC;AACzK;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,aAAa,OAAO,yDAAW,2BAA2B,GAAG,OAAO,yDAAW,gCAAgC;AAC/G,eAAe,OAAO,0DAAY,oBAAoB;AACtD;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAiCV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B;AACA,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA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AAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,8EAA8E,0BAA0B;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;A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","file":"views-dashboard-dashboard-module-es2015.js","sourcesContent":["export default \":host .c-chart-brand {\\n  position: absolute;\\n  width: 100%;\\n  height: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0FBQUoiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIC5jLWNoYXJ0LWJyYW5kIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ== */\";","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n// import { ChartsModule } from 'ng2-charts';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport {  ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  CalloutModule,\r\n  CardModule,\r\n  GridModule,\r\n  ProgressModule,\r\n  ButtonModule,\r\n  DropdownModule,\r\n  ChartModule,\r\n  SharedModule,\r\n  WidgetModule\r\n} from '@coreui/angular';\r\n\r\nimport { IconModule } from '@coreui/icons-angular';\r\nimport { WidgetsModule } from '../widgets/widgets.module';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatDialogModule } from '@angular/material/dialog';\r\nimport {MatSelectModule} from '@angular/material/select';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DashboardRoutingModule,\r\n    // ChartsModule,\r\n    BsDropdownModule,\r\n    ButtonsModule.forRoot(),\r\n    CalloutModule,\r\n    CardModule,\r\n    GridModule,\r\n    IconModule,\r\n    ProgressModule,\r\n    ButtonModule,\r\n    DropdownModule,\r\n    ChartModule,\r\n    SharedModule,\r\n    WidgetModule,\r\n    WidgetsModule,\r\n    CommonModule,\r\n    \r\n  ],\r\n  declarations: [\r\n    DashboardComponent\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","export default \"<div class=\\\"fade-in\\\">\\r\\n  <c-card>\\r\\n    <c-card-body>\\r\\n      <c-row>\\r\\n        <c-col sm=\\\"6\\\">\\r\\n          <h1 class=\\\"card-title mb-0\\\">Machine Status</h1>\\r\\n        <div class=\\\"chart-wrapper\\\">\\r\\n          <canvas cNoZoneBaseChart class=\\\"chart\\\"\\r\\n          [data]=\\\"statusMachineChart.arbarChartData\\\" \\r\\n          [labels]=\\\"statusMachineChart.arbarChartLabels\\\" \\r\\n          [chartType]=\\\"statusMachineChart.arbarChartType\\\"\\r\\n          [options]=\\\"statusMachineChart.arbarChartOptions\\\"\\r\\n          [plugins]=\\\"statusMachineChart.arbarChartPlugins\\\"\\r\\n          [legend]=\\\"statusMachineChart.arbarChartLegend\\\"\\r\\n          [colors]=\\\"statusMachineChart.pieColor\\\"\\r\\n          [plugins]=\\\"statusMachineChart.pieChartPlugins\\\"> \\r\\n        </canvas>\\r\\n      </div>\\r\\n      </c-col>\\r\\n         <c-col sm=\\\"6\\\">\\r\\n          <h1 class=\\\"card-title mb-0\\\">Sold Items</h1>\\r\\n        <div class=\\\"chart-wrapper\\\">\\r\\n          <canvas cNoZoneBaseChart class=\\\"chart\\\"\\r\\n          [data]=\\\"soldItemsChart.doughnutChartData\\\" \\r\\n          [labels]=\\\"soldItemsChart.doughnutChartLabels\\\" \\r\\n          [chartType]=\\\"soldItemsChart.doughnutChartType\\\"\\r\\n          [options]=\\\"soldItemsChart.doughnutChartOptions\\\"\\r\\n          [plugins]=\\\"soldItemsChart.doughnutChartPlugins\\\"\\r\\n          [legend]=\\\"soldItemsChart.doughnutChartLegend\\\"\\r\\n          [colors]=\\\"soldItemsChart.pieColor\\\">\\r\\n        </canvas>\\r\\n      </div>\\r\\n        </c-col>\\r\\n      </c-row>\\r\\n    </c-card-body>\\r\\n    <c-card-footer>\\r\\n      <c-row class=\\\"text-center\\\">\\r\\n        <c-col sm=\\\"2\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\r\\n          <div>{{active}} Online ({{onlinepercentage | number: '1.2-2'}}%)</div>\\r\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\r\\n            <c-progress-bar color=\\\"success\\\" [value]=onlinepercentage></c-progress-bar>\\r\\n          </c-progress>\\r\\n        </c-col>\\r\\n        <c-col sm=\\\"2\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\r\\n          <div>{{inActive}} Offline ({{offlinepercentage | number: '1.2-2'}}%)</div>\\r\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\r\\n            <c-progress-bar color=\\\"danger\\\" [value]=offlinepercentage></c-progress-bar>\\r\\n          </c-progress>\\r\\n        </c-col>\\r\\n        <c-col sm=\\\"0.5\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\r\\n          \\r\\n        </c-col>\\r\\n      <div *ngIf=\\\"isbhujiaSev\\\">\\r\\n        <c-col sm=\\\"1.5\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\r\\n          <div>{{bhujiaSev}} {{bhujiaSevName}} ({{bhujiaSevPercentage | number : '1.2-2'}}%)</div>\\r\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\r\\n            <c-progress-bar color=\\\"danger\\\" [value]=bhujiaSevPercentage></c-progress-bar>\\r\\n          </c-progress>\\r\\n        </c-col>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"ispepsi\\\">\\r\\n        <c-col sm=\\\"1.5\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\r\\n          <div>{{pepsi}} {{pepsiName}} ({{pepsiPercentage | number : '1.2-2'}}%)</div>\\r\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\r\\n            <c-progress-bar color=\\\"success\\\" [value]=pepsiPercentage></c-progress-bar>\\r\\n          </c-progress>\\r\\n        </c-col>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"ischips\\\">\\r\\n        <c-col sm=\\\"1.5\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\r\\n          <div>{{chips}} {{chipsName}} ({{chipsPercentage | number : '1.2-2'}}%)</div>\\r\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\r\\n            <c-progress-bar color=\\\"warning\\\" [value]=chipsPercentage></c-progress-bar>\\r\\n          </c-progress>\\r\\n        </c-col>\\r\\n      </div> \\r\\n\\r\\n      <div *ngIf=\\\"issanitaryNapkinSmall\\\">\\r\\n        <c-col sm=\\\"1.5\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\r\\n          <div>{{sanitaryNapkinSmall}} {{sanitaryNapkinSmallName}} ({{sanitaryNapkinSmallPercentage | number : '1.2-2'}}%)</div>\\r\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\r\\n            <c-progress-bar color=\\\"info\\\" [value]=sanitaryNapkinSmallPercentage></c-progress-bar>\\r\\n            <!-- <c-progress-bar color=\\\"secondary\\\" [value]=sanitaryNapkinSmallPercentage></c-progress-bar> -->\\r\\n          </c-progress>\\r\\n        </c-col>\\r\\n      </div> \\r\\n\\r\\n      </c-row>\\r\\n    </c-card-footer>\\r\\n  </c-card>\\r\\n \\r\\n  <c-card>\\r\\n    <c-card-body>\\r\\n      <c-row>\\r\\n         <c-col sm=\\\"4\\\">\\r\\n          <h1 class=\\\"card-title mb-0\\\">Transaction Status</h1>\\r\\n        </c-col> \\r\\n        <c-col sm=\\\"8\\\" class=\\\"d-none d-md-block\\\">\\r\\n          <form >\\r\\n            <c-row>\\r\\n              \\r\\n            <c-form-group cCol md=\\\"4\\\">\\r\\n              <label for=\\\"fname\\\">FromDate : </label>\\r\\n              <input cInput\\r\\n                     id=\\\"date-input\\\" \\r\\n                     type=\\\"date\\\" \\r\\n                     name=\\\"date-input\\\" \\r\\n                     placeholder=\\\"fromDate\\\"\\r\\n                     autocomplete=\\\"given-name\\\"\\r\\n                     [(ngModel)]=\\\"fromDate\\\"\\r\\n                     required\\r\\n                     [autofocus]=\\\"true\\\"\\r\\n                     [ngClass]=\\\"{ 'is-invalid': (submitted || f.fromDate.touched) && f.fromDate.invalid, 'is-valid': f.toDate.touched && f.fromDate.valid  }\\\" />\\r\\n              <div *ngIf=\\\"submitted && f['fromDate'].invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"f['fromDate'].errors.required\\\">FromDate is required</div>\\r\\n              </div>\\r\\n            </c-form-group>\\r\\n\\r\\n            <c-form-group cCol md=\\\"4\\\">\\r\\n              <label for=\\\"fname\\\">ToDate : </label>\\r\\n              <input cInput\\r\\n                     id=\\\"date-input\\\" \\r\\n                     type=\\\"date\\\" \\r\\n                     name=\\\"date-input\\\" \\r\\n                     placeholder=\\\"toDate\\\"\\r\\n                     autocomplete=\\\"toDate\\\"\\r\\n                     [(ngModel)]=\\\"toDate\\\"\\r\\n                     required\\r\\n                     [autofocus]=\\\"true\\\"\\r\\n                     [ngClass]=\\\"{ 'is-invalid': (submitted || f.toDate.touched) && f.toDate.invalid, 'is-valid': f.toDate.touched && f.toDate.valid  }\\\" />\\r\\n              <div *ngIf=\\\"submitted && f['toDate'].invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"f['toDate'].errors.required\\\">ToDate is required</div>\\r\\n              </div>\\r\\n            </c-form-group>\\r\\n            \\r\\n            <c-form-group cCol md=\\\"4\\\">\\r\\n            <button cButton color=\\\"primary\\\" class=\\\"mfe-1\\\" type=\\\"submit\\\" (click)=\\\"onAddTransactionDate(simpleForm.value)\\\">Submit</button>\\r\\n            </c-form-group>\\r\\n          </c-row>\\r\\n        </form>\\r\\n        </c-col>\\r\\n      </c-row>\\r\\n      <c-row>\\r\\n         <c-col sm=\\\"7\\\">\\r\\n        <div *ngIf=\\\"ispieShown\\\" class=\\\"chart-wrapper\\\">\\r\\n          <canvas  cNoZoneBaseChart class=\\\"chart\\\"\\r\\n          [data]=\\\"transactionChart.arbarChartData\\\" \\r\\n          [labels]=\\\"transactionChart.arbarChartLabels\\\" \\r\\n          [chartType]=\\\"transactionChart.arbarChartType\\\"\\r\\n          [options]=\\\"transactionChart.arbarChartOptions\\\"\\r\\n          [plugins]=\\\"transactionChart.arbarChartPlugins\\\"\\r\\n          [legend]=\\\"transactionChart.arbarChartLegend\\\"\\r\\n          [colors]=\\\"transactionChart.pieColor\\\"\\r\\n          [plugins]=\\\"transactionChart.pieChartPlugins\\\">\\r\\n        </canvas>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isShown\\\" id=\\\"divshow\\\" class=\\\"row container-fluid\\\" style=\\\"font-size: 33px;\\r\\n             text-align: center;margin: 30px\\\">Data not Exist for the Selected Date Range</div>\\r\\n        </c-col>\\r\\n         <c-col sm=\\\"5\\\">\\r\\n           <div style=\\\"margin: 20px;\\\">\\r\\n            <h1 >Date Range Selected </h1>\\r\\n            <h2 >fromDate : {{transactionFromDate}}</h2>\\r\\n            <h2 >toDate : {{transactionTodate}} </h2>\\r\\n            <h2 for=\\\"fname\\\">Success : {{completed}} </h2>\\r\\n            <h2 for=\\\"fname\\\">Failed  : {{dispenseFailed}} </h2>\\r\\n          </div> \\r\\n        </c-col> \\r\\n      </c-row>\\r\\n    </c-card-body>\\r\\n    <c-card-footer>\\r\\n      <c-row class=\\\"text-center\\\">\\r\\n        <c-col sm=\\\"12\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\r\\n          <div>{{completed}} Success ({{completedPercentage | number : '1.2-2'}}%)</div>\\r\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\r\\n            <c-progress-bar color=\\\"success\\\" [value]=completedPercentage></c-progress-bar>\\r\\n          </c-progress>\\r\\n        </c-col>\\r\\n        <c-col sm=\\\"12\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\r\\n          <div>{{dispenseFailed}} Failed ({{failedPercentage | number : '1.2-2'}}%)</div>\\r\\n          <c-progress size=\\\"xs\\\" class=\\\"mt-2\\\">\\r\\n            <c-progress-bar color=\\\"danger\\\" [value]=failedPercentage></c-progress-bar>\\r\\n          </c-progress>\\r\\n        </c-col>\\r\\n      </c-row>\\r\\n    </c-card-footer>\\r\\n  </c-card>\\r\\n\\r\\n\\r\\n  <c-card>\\r\\n    <c-card-body>\\r\\n      <c-row>\\r\\n        <c-col sm=\\\"4\\\">\\r\\n          <h1 class=\\\"card-title mb-0\\\">Sales Detail</h1>\\r\\n        </c-col> \\r\\n        <c-col sm=\\\"8\\\" class=\\\"d-none d-md-block\\\">\\r\\n        <form [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n          <c-row> \\r\\n            <c-form-group cCol md=\\\"4\\\">\\r\\n            <select cSelect formControlName=\\\"country\\\">\\r\\n              <option [ngValue]=\\\"null\\\" disabled>Select Month Or Year</option>\\r\\n              <option *ngFor=\\\"let country of countries\\\" [ngValue]=\\\"country.value\\\">{{country.name}}</option>\\r\\n            </select>\\r\\n             </c-form-group>\\r\\n            <c-form-group cCol md=\\\"4\\\">\\r\\n              <button cButton color=\\\"primary\\\" class=\\\"mfe-1\\\" type=\\\"submit\\\" (click)=\\\"onAddRevenueDate(contactForm.value)\\\">Submit</button>\\r\\n            </c-form-group>\\r\\n          </c-row>\\r\\n          </form>\\r\\n        </c-col>\\r\\n      </c-row>\\r\\n      <c-row>\\r\\n        <c-col sm=\\\"8\\\">\\r\\n          <!-- <h4 class=\\\"card-title mb-0\\\">Sales Detail</h4> -->\\r\\n        <div *ngIf=\\\"isPieHide\\\" class=\\\"chart-wrapper\\\">\\r\\n          <canvas cNoZoneBaseChart class=\\\"chart\\\"\\r\\n          [data]=\\\"salesDetailsChart.arbarChartData\\\" \\r\\n          [labels]=\\\"salesDetailsChart.arbarChartLabels\\\" \\r\\n          [chartType]=\\\"salesDetailsChart.arbarChartType\\\"\\r\\n          [options]=\\\"salesDetailsChart.arbarChartOptions\\\"\\r\\n          [plugins]=\\\"salesDetailsChart.arbarChartPlugins\\\"\\r\\n          [legend]=\\\"salesDetailsChart.arbarChartLegend\\\"\\r\\n          [colors]=\\\"salesDetailsChart.pieColor\\\"\\r\\n          [plugins]=\\\"salesDetailsChart.pieChartPlugins\\\">\\r\\n        </canvas>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isHide\\\" id=\\\"divhide\\\" class=\\\"row container-fluid\\\" style=\\\"font-size: 33px;\\r\\n         text-align: center;margin: 30px\\\">Data not Exist for the Selected Item</div>\\r\\n      </c-col>\\r\\n      <c-col sm=\\\"4\\\">\\r\\n        <div style=\\\"margin: 20px;\\\">\\r\\n          <h1 >{{monthOrYear}} Data Selected </h1>\\r\\n          <!-- <h2 >fromDate :{{revenueFromDate}}</h2>\\r\\n          <h2 >toDate :{{revenueTodate}} </h2>\\r\\n          <h2 >Total Revenue : {{totalRevenue}} ₹ </h2> -->\\r\\n        </div>\\r\\n      </c-col>\\r\\n      </c-row>\\r\\n    </c-card-body>\\r\\n    <c-card-footer>\\r\\n      <c-row class=\\\"text-center\\\">\\r\\n        <c-col sm=\\\"12\\\" [md]=\\\"true\\\" class=\\\"mb-sm-2 mb-0\\\">\\r\\n          <!-- <div class=\\\"text-muted\\\">Total Revenue</div> -->\\r\\n          <div>{{totalRevenue}} Total Revenue ({{revenuePercentage | number : '1.2-2'}}%)</div>\\r\\n         \\r\\n        </c-col>\\r\\n      </c-row>\\r\\n    </c-card-footer>\\r\\n  </c-card>         \\r\\n</div>\\r\\n\";","import { forwardRef, Directive, Input, HostBinding, HostListener, ElementRef, ChangeDetectorRef, Renderer2, Optional, Inject, ContentChildren, NgModule } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// TODO: config: activeClass - Class to apply to the checked buttons\r\n/** @type {?} */\r\nimport * as ɵngcc0 from '@angular/core';\r\nconst CHECKBOX_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    /* tslint:disable-next-line: no-use-before-declare */\r\n    useExisting: forwardRef((/**\r\n     * @return {?}\r\n     */\r\n    () => ButtonCheckboxDirective)),\r\n    multi: true\r\n};\r\n/**\r\n * Add checkbox functionality to any element\r\n */\r\nclass ButtonCheckboxDirective {\r\n    constructor() {\r\n        /**\r\n         * Truthy value, will be set to ngModel\r\n         */\r\n        this.btnCheckboxTrue = true;\r\n        /**\r\n         * Falsy value, will be set to ngModel\r\n         */\r\n        this.btnCheckboxFalse = false;\r\n        this.state = false;\r\n        this.onChange = Function.prototype;\r\n        this.onTouched = Function.prototype;\r\n    }\r\n    // view -> model\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick() {\r\n        if (this.isDisabled) {\r\n            return;\r\n        }\r\n        this.toggle(!this.state);\r\n        this.onChange(this.value);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.toggle(this.trueValue === this.value);\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    get trueValue() {\r\n        return typeof this.btnCheckboxTrue !== 'undefined'\r\n            ? this.btnCheckboxTrue\r\n            : true;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    get falseValue() {\r\n        return typeof this.btnCheckboxFalse !== 'undefined'\r\n            ? this.btnCheckboxFalse\r\n            : false;\r\n    }\r\n    /**\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    toggle(state) {\r\n        this.state = state;\r\n        this.value = this.state ? this.trueValue : this.falseValue;\r\n    }\r\n    // ControlValueAccessor\r\n    // model -> view\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    writeValue(value) {\r\n        this.state = this.trueValue === value;\r\n        this.value = value ? this.trueValue : this.falseValue;\r\n    }\r\n    /**\r\n     * @param {?} isDisabled\r\n     * @return {?}\r\n     */\r\n    setDisabledState(isDisabled) {\r\n        this.isDisabled = isDisabled;\r\n    }\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    registerOnChange(fn) {\r\n        this.onChange = fn;\r\n    }\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    registerOnTouched(fn) {\r\n        this.onTouched = fn;\r\n    }\r\n}\r\nButtonCheckboxDirective.ɵfac = function ButtonCheckboxDirective_Factory(t) { return new (t || ButtonCheckboxDirective)(); };\r\nButtonCheckboxDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ButtonCheckboxDirective, selectors: [[\"\", \"btnCheckbox\", \"\"]], hostVars: 3, hostBindings: function ButtonCheckboxDirective_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"click\", function ButtonCheckboxDirective_click_HostBindingHandler() { return ctx.onClick(); });\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"aria-pressed\", ctx.state);\r\n        ɵngcc0.ɵɵclassProp(\"active\", ctx.state);\r\n    } }, inputs: { btnCheckboxTrue: \"btnCheckboxTrue\", btnCheckboxFalse: \"btnCheckboxFalse\" }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_CONTROL_VALUE_ACCESSOR])] });\r\nButtonCheckboxDirective.propDecorators = {\r\n    btnCheckboxTrue: [{ type: Input }],\r\n    btnCheckboxFalse: [{ type: Input }],\r\n    state: [{ type: HostBinding, args: ['class.active',] }, { type: HostBinding, args: ['attr.aria-pressed',] }],\r\n    onClick: [{ type: HostListener, args: ['click',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonCheckboxDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[btnCheckbox]',\r\n                providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\r\n            }]\r\n    }], function () { return []; }, { btnCheckboxTrue: [{\r\n            type: Input\r\n        }], btnCheckboxFalse: [{\r\n            type: Input\r\n        }], state: [{\r\n            type: HostBinding,\r\n            args: ['class.active']\r\n        }, {\r\n            type: HostBinding,\r\n            args: ['attr.aria-pressed']\r\n        }], \r\n    // view -> model\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick: [{\r\n            type: HostListener,\r\n            args: ['click']\r\n        }] }); })();\r\nif (false) {\r\n    /**\r\n     * Truthy value, will be set to ngModel\r\n     * @type {?}\r\n     */\r\n    ButtonCheckboxDirective.prototype.btnCheckboxTrue;\r\n    /**\r\n     * Falsy value, will be set to ngModel\r\n     * @type {?}\r\n     */\r\n    ButtonCheckboxDirective.prototype.btnCheckboxFalse;\r\n    /** @type {?} */\r\n    ButtonCheckboxDirective.prototype.state;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    ButtonCheckboxDirective.prototype.value;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    ButtonCheckboxDirective.prototype.isDisabled;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    ButtonCheckboxDirective.prototype.onChange;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    ButtonCheckboxDirective.prototype.onTouched;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst RADIO_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    /* tslint:disable-next-line: no-use-before-declare */\r\n    useExisting: forwardRef((/**\r\n     * @return {?}\r\n     */\r\n    () => ButtonRadioDirective)),\r\n    multi: true\r\n};\r\n/**\r\n * Create radio buttons or groups of buttons.\r\n * A value of a selected button is bound to a variable specified via ngModel.\r\n */\r\nclass ButtonRadioDirective {\r\n    /**\r\n     * @param {?} el\r\n     * @param {?} cdr\r\n     * @param {?} renderer\r\n     * @param {?} group\r\n     */\r\n    constructor(el, cdr, renderer, group) {\r\n        this.el = el;\r\n        this.cdr = cdr;\r\n        this.renderer = renderer;\r\n        this.group = group;\r\n        this.onChange = Function.prototype;\r\n        this.onTouched = Function.prototype;\r\n        this.role = 'radio';\r\n        this._hasFocus = false;\r\n    }\r\n    /**\r\n     * Current value of radio component or group\r\n     * @return {?}\r\n     */\r\n    get value() {\r\n        return this.group ? this.group.value : this._value;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set value(value) {\r\n        if (this.group) {\r\n            this.group.value = value;\r\n            return;\r\n        }\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * If `true` — radio button is disabled\r\n     * @return {?}\r\n     */\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    /**\r\n     * @param {?} disabled\r\n     * @return {?}\r\n     */\r\n    set disabled(disabled) {\r\n        this.setDisabledState(disabled);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get controlOrGroupDisabled() {\r\n        return this.disabled || (this.group && this.group.disabled) ? true : undefined;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get hasDisabledClass() {\r\n        // Although the radio is disabled the active radio should still stand out.\r\n        // The disabled class will prevent this so don't add it on the active radio\r\n        return this.controlOrGroupDisabled && !this.isActive;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isActive() {\r\n        return this.btnRadio === this.value;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get tabindex() {\r\n        if (this.controlOrGroupDisabled) {\r\n            // Disabled radio buttons should not receive focus\r\n            return undefined;\r\n        }\r\n        else if (this.isActive || this.group == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get hasFocus() {\r\n        return this._hasFocus;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    toggleIfAllowed() {\r\n        if (!this.canToggle()) {\r\n            return;\r\n        }\r\n        this.value = this.uncheckable && this.btnRadio === this.value ? undefined : this.btnRadio;\r\n        this._onChange(this.value);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onSpacePressed(event) {\r\n        this.toggleIfAllowed();\r\n        event.preventDefault();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    focus() {\r\n        this.el.nativeElement.focus();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onFocus() {\r\n        this._hasFocus = true;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onBlur() {\r\n        this._hasFocus = false;\r\n        this.onTouched();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    canToggle() {\r\n        return !this.controlOrGroupDisabled && (this.uncheckable || this.btnRadio !== this.value);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.uncheckable = typeof this.uncheckable !== 'undefined';\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    _onChange(value) {\r\n        if (this.group) {\r\n            this.group.value = value;\r\n            return;\r\n        }\r\n        this.onTouched();\r\n        this.onChange(value);\r\n    }\r\n    // ControlValueAccessor\r\n    // model -> view\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    writeValue(value) {\r\n        this.value = value;\r\n        this.cdr.markForCheck();\r\n    }\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    registerOnChange(fn) {\r\n        this.onChange = fn;\r\n    }\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    registerOnTouched(fn) {\r\n        this.onTouched = fn;\r\n    }\r\n    /**\r\n     * @param {?} disabled\r\n     * @return {?}\r\n     */\r\n    setDisabledState(disabled) {\r\n        this._disabled = disabled;\r\n        if (disabled) {\r\n            this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\r\n            return;\r\n        }\r\n        this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\r\n    }\r\n}\r\nButtonRadioDirective.ɵfac = function ButtonRadioDirective_Factory(t) { return new (t || ButtonRadioDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\r\n                 * @return {?}\r\n                 */() => ButtonRadioGroupDirective)), 8)); };\r\nButtonRadioDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ButtonRadioDirective, selectors: [[\"\", \"btnRadio\", \"\"]], hostVars: 8, hostBindings: function ButtonRadioDirective_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"click\", function ButtonRadioDirective_click_HostBindingHandler() { return ctx.toggleIfAllowed(); })(\"keydown.space\", function ButtonRadioDirective_keydown_space_HostBindingHandler($event) { return ctx.onSpacePressed($event); })(\"focus\", function ButtonRadioDirective_focus_HostBindingHandler() { return ctx.onFocus(); })(\"blur\", function ButtonRadioDirective_blur_HostBindingHandler() { return ctx.onBlur(); });\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"aria-disabled\", ctx.controlOrGroupDisabled)(\"aria-checked\", ctx.isActive)(\"tabindex\", ctx.tabindex);\r\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.hasDisabledClass)(\"active\", ctx.isActive);\r\n    } }, inputs: { value: \"value\", disabled: \"disabled\", uncheckable: \"uncheckable\", btnRadio: \"btnRadio\" }, features: [ɵngcc0.ɵɵProvidersFeature([RADIO_CONTROL_VALUE_ACCESSOR])] });\r\n/** @nocollapse */\r\nButtonRadioDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: Renderer2 },\r\n    { type: ButtonRadioGroupDirective, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => ButtonRadioGroupDirective)),] }] }\r\n];\r\nButtonRadioDirective.propDecorators = {\r\n    btnRadio: [{ type: Input }],\r\n    uncheckable: [{ type: Input }],\r\n    value: [{ type: Input }],\r\n    disabled: [{ type: Input }],\r\n    controlOrGroupDisabled: [{ type: HostBinding, args: ['attr.aria-disabled',] }],\r\n    hasDisabledClass: [{ type: HostBinding, args: ['class.disabled',] }],\r\n    isActive: [{ type: HostBinding, args: ['class.active',] }, { type: HostBinding, args: ['attr.aria-checked',] }],\r\n    role: [{ type: HostBinding, args: ['attr.role',] }],\r\n    tabindex: [{ type: HostBinding, args: ['attr.tabindex',] }],\r\n    toggleIfAllowed: [{ type: HostListener, args: ['click',] }],\r\n    onSpacePressed: [{ type: HostListener, args: ['keydown.space', ['$event'],] }],\r\n    onFocus: [{ type: HostListener, args: ['focus',] }],\r\n    onBlur: [{ type: HostListener, args: ['blur',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonRadioDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[btnRadio]',\r\n                providers: [RADIO_CONTROL_VALUE_ACCESSOR]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ButtonRadioGroupDirective, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [forwardRef(( /**\r\n                                     * @return {?}\r\n                                     */() => ButtonRadioGroupDirective))]\r\n            }] }]; }, { role: [{\r\n            type: HostBinding,\r\n            args: ['attr.role']\r\n        }], value: [{\r\n            type: Input\r\n        }], disabled: [{\r\n            type: Input\r\n        }], controlOrGroupDisabled: [{\r\n            type: HostBinding,\r\n            args: ['attr.aria-disabled']\r\n        }], hasDisabledClass: [{\r\n            type: HostBinding,\r\n            args: ['class.disabled']\r\n        }], isActive: [{\r\n            type: HostBinding,\r\n            args: ['class.active']\r\n        }, {\r\n            type: HostBinding,\r\n            args: ['attr.aria-checked']\r\n        }], tabindex: [{\r\n            type: HostBinding,\r\n            args: ['attr.tabindex']\r\n        }], \r\n    /**\r\n     * @return {?}\r\n     */\r\n    toggleIfAllowed: [{\r\n            type: HostListener,\r\n            args: ['click']\r\n        }], \r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onSpacePressed: [{\r\n            type: HostListener,\r\n            args: ['keydown.space', ['$event']]\r\n        }], \r\n    /**\r\n     * @return {?}\r\n     */\r\n    onFocus: [{\r\n            type: HostListener,\r\n            args: ['focus']\r\n        }], \r\n    /**\r\n     * @return {?}\r\n     */\r\n    onBlur: [{\r\n            type: HostListener,\r\n            args: ['blur']\r\n        }], uncheckable: [{\r\n            type: Input\r\n        }], btnRadio: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    ButtonRadioDirective.prototype.onChange;\r\n    /** @type {?} */\r\n    ButtonRadioDirective.prototype.onTouched;\r\n    /**\r\n     * Radio button value, will be set to `ngModel`\r\n     * @type {?}\r\n     */\r\n    ButtonRadioDirective.prototype.btnRadio;\r\n    /**\r\n     * If `true` — radio button can be unchecked\r\n     * @type {?}\r\n     */\r\n    ButtonRadioDirective.prototype.uncheckable;\r\n    /** @type {?} */\r\n    ButtonRadioDirective.prototype.role;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ButtonRadioDirective.prototype._value;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ButtonRadioDirective.prototype._disabled;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ButtonRadioDirective.prototype._hasFocus;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ButtonRadioDirective.prototype.el;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ButtonRadioDirective.prototype.cdr;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ButtonRadioDirective.prototype.renderer;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ButtonRadioDirective.prototype.group;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst RADIO_CONTROL_VALUE_ACCESSOR$1 = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    /* tslint:disable-next-line: no-use-before-declare */\r\n    useExisting: forwardRef((/**\r\n     * @return {?}\r\n     */\r\n    () => ButtonRadioGroupDirective)),\r\n    multi: true\r\n};\r\n/**\r\n * A group of radio buttons.\r\n * A value of a selected button is bound to a variable specified via ngModel.\r\n */\r\nclass ButtonRadioGroupDirective {\r\n    /**\r\n     * @param {?} cdr\r\n     */\r\n    constructor(cdr) {\r\n        this.cdr = cdr;\r\n        this.onChange = Function.prototype;\r\n        this.onTouched = Function.prototype;\r\n        this.role = 'radiogroup';\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set value(value) {\r\n        this._value = value;\r\n        this.onChange(value);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get tabindex() {\r\n        if (this._disabled) {\r\n            return null;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    writeValue(value) {\r\n        this._value = value;\r\n        this.cdr.markForCheck();\r\n    }\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    registerOnChange(fn) {\r\n        this.onChange = fn;\r\n    }\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    registerOnTouched(fn) {\r\n        this.onTouched = fn;\r\n    }\r\n    /**\r\n     * @param {?} disabled\r\n     * @return {?}\r\n     */\r\n    setDisabledState(disabled) {\r\n        if (this.radioButtons) {\r\n            this._disabled = disabled;\r\n            this.radioButtons.forEach((/**\r\n             * @param {?} buttons\r\n             * @return {?}\r\n             */\r\n            buttons => {\r\n                buttons.setDisabledState(disabled);\r\n            }));\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onFocus() {\r\n        if (this._disabled) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const activeRadio = this.getActiveOrFocusedRadio();\r\n        if (activeRadio) {\r\n            activeRadio.focus();\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            const firstEnabled = this.radioButtons.find((/**\r\n             * @param {?} r\r\n             * @return {?}\r\n             */\r\n            r => !r.disabled));\r\n            if (firstEnabled) {\r\n                firstEnabled.focus();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onBlur() {\r\n        if (this.onTouched) {\r\n            this.onTouched();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    selectNext(event) {\r\n        this.selectInDirection('next');\r\n        event.preventDefault();\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    selectPrevious(event) {\r\n        this.selectInDirection('previous');\r\n        event.preventDefault();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} direction\r\n     * @return {?}\r\n     */\r\n    selectInDirection(direction) {\r\n        if (this._disabled) {\r\n            return;\r\n        }\r\n        /**\r\n         * @param {?} currentIndex\r\n         * @param {?} buttonRadioDirectives\r\n         * @return {?}\r\n         */\r\n        function nextIndex(currentIndex, buttonRadioDirectives) {\r\n            /** @type {?} */\r\n            const step = direction === 'next' ? 1 : -1;\r\n            /** @type {?} */\r\n            let calcIndex = (currentIndex + step) % buttonRadioDirectives.length;\r\n            if (calcIndex < 0) {\r\n                calcIndex = buttonRadioDirectives.length - 1;\r\n            }\r\n            return calcIndex;\r\n        }\r\n        /** @type {?} */\r\n        const activeRadio = this.getActiveOrFocusedRadio();\r\n        if (activeRadio) {\r\n            /** @type {?} */\r\n            const buttonRadioDirectives = this.radioButtons.toArray();\r\n            /** @type {?} */\r\n            const currentActiveIndex = buttonRadioDirectives.indexOf(activeRadio);\r\n            for (let i = nextIndex(currentActiveIndex, buttonRadioDirectives); i !== currentActiveIndex; i = nextIndex(i, buttonRadioDirectives)) {\r\n                if (buttonRadioDirectives[i].canToggle()) {\r\n                    buttonRadioDirectives[i].toggleIfAllowed();\r\n                    buttonRadioDirectives[i].focus();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    getActiveOrFocusedRadio() {\r\n        return this.radioButtons.find((/**\r\n         * @param {?} button\r\n         * @return {?}\r\n         */\r\n        button => button.isActive)) || this.radioButtons.find((/**\r\n         * @param {?} button\r\n         * @return {?}\r\n         */\r\n        button => button.hasFocus));\r\n    }\r\n}\r\nButtonRadioGroupDirective.ɵfac = function ButtonRadioGroupDirective_Factory(t) { return new (t || ButtonRadioGroupDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\r\nButtonRadioGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ButtonRadioGroupDirective, selectors: [[\"\", \"btnRadioGroup\", \"\"]], contentQueries: function ButtonRadioGroupDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ButtonRadioDirective, 0);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.radioButtons = _t);\r\n    } }, hostVars: 2, hostBindings: function ButtonRadioGroupDirective_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"focus\", function ButtonRadioGroupDirective_focus_HostBindingHandler() { return ctx.onFocus(); })(\"blur\", function ButtonRadioGroupDirective_blur_HostBindingHandler() { return ctx.onBlur(); })(\"keydown.ArrowRight\", function ButtonRadioGroupDirective_keydown_ArrowRight_HostBindingHandler($event) { return ctx.selectNext($event); })(\"keydown.ArrowDown\", function ButtonRadioGroupDirective_keydown_ArrowDown_HostBindingHandler($event) { return ctx.selectNext($event); })(\"keydown.ArrowLeft\", function ButtonRadioGroupDirective_keydown_ArrowLeft_HostBindingHandler($event) { return ctx.selectPrevious($event); })(\"keydown.ArrowUp\", function ButtonRadioGroupDirective_keydown_ArrowUp_HostBindingHandler($event) { return ctx.selectPrevious($event); });\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.tabindex);\r\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([RADIO_CONTROL_VALUE_ACCESSOR$1])] });\r\n/** @nocollapse */\r\nButtonRadioGroupDirective.ctorParameters = () => [\r\n    { type: ChangeDetectorRef }\r\n];\r\nButtonRadioGroupDirective.propDecorators = {\r\n    role: [{ type: HostBinding, args: ['attr.role',] }],\r\n    radioButtons: [{ type: ContentChildren, args: [forwardRef((/**\r\n                 * @return {?}\r\n                 */\r\n                () => ButtonRadioDirective)),] }],\r\n    tabindex: [{ type: HostBinding, args: ['attr.tabindex',] }],\r\n    onFocus: [{ type: HostListener, args: ['focus',] }],\r\n    onBlur: [{ type: HostListener, args: ['blur',] }],\r\n    selectNext: [{ type: HostListener, args: ['keydown.ArrowRight', ['$event'],] }, { type: HostListener, args: ['keydown.ArrowDown', ['$event'],] }],\r\n    selectPrevious: [{ type: HostListener, args: ['keydown.ArrowLeft', ['$event'],] }, { type: HostListener, args: ['keydown.ArrowUp', ['$event'],] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonRadioGroupDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[btnRadioGroup]',\r\n                providers: [RADIO_CONTROL_VALUE_ACCESSOR$1]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { role: [{\r\n            type: HostBinding,\r\n            args: ['attr.role']\r\n        }], tabindex: [{\r\n            type: HostBinding,\r\n            args: ['attr.tabindex']\r\n        }], \r\n    /**\r\n     * @return {?}\r\n     */\r\n    onFocus: [{\r\n            type: HostListener,\r\n            args: ['focus']\r\n        }], \r\n    /**\r\n     * @return {?}\r\n     */\r\n    onBlur: [{\r\n            type: HostListener,\r\n            args: ['blur']\r\n        }], \r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    selectNext: [{\r\n            type: HostListener,\r\n            args: ['keydown.ArrowRight', ['$event']]\r\n        }, {\r\n            type: HostListener,\r\n            args: ['keydown.ArrowDown', ['$event']]\r\n        }], \r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    selectPrevious: [{\r\n            type: HostListener,\r\n            args: ['keydown.ArrowLeft', ['$event']]\r\n        }, {\r\n            type: HostListener,\r\n            args: ['keydown.ArrowUp', ['$event']]\r\n        }], radioButtons: [{\r\n            type: ContentChildren,\r\n            args: [forwardRef(( /**\r\n                             * @return {?}\r\n                             */() => ButtonRadioDirective))]\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    ButtonRadioGroupDirective.prototype.onChange;\r\n    /** @type {?} */\r\n    ButtonRadioGroupDirective.prototype.onTouched;\r\n    /** @type {?} */\r\n    ButtonRadioGroupDirective.prototype.role;\r\n    /** @type {?} */\r\n    ButtonRadioGroupDirective.prototype.radioButtons;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ButtonRadioGroupDirective.prototype._value;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ButtonRadioGroupDirective.prototype._disabled;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ButtonRadioGroupDirective.prototype.cdr;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass ButtonsModule {\r\n    /**\r\n     * @return {?}\r\n     */\r\n    static forRoot() {\r\n        return { ngModule: ButtonsModule, providers: [] };\r\n    }\r\n}\r\nButtonsModule.ɵfac = function ButtonsModule_Factory(t) { return new (t || ButtonsModule)(); };\r\nButtonsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ButtonsModule });\r\nButtonsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ButtonsModule, { declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective], exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective] }); })();\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonsModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective],\r\n                exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective, ButtonsModule, CHECKBOX_CONTROL_VALUE_ACCESSOR as ɵa, RADIO_CONTROL_VALUE_ACCESSOR$1 as ɵb, RADIO_CONTROL_VALUE_ACCESSOR as ɵc };\r\n\r\n//# sourceMappingURL=ngx-bootstrap-buttons.js.map","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    data: {\r\n      title: 'Dashboard',\r\n    },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import { Component,OnChanges,OnDestroy,OnInit,SimpleChanges } from '@angular/core';\r\nimport { DashboardChartsData, IChartProps } from './dashboard-charts-data';\r\nimport { ITableData } from './dashboard';\r\nimport { CommonDataService } from '../../Common/common-data.service';\r\nimport { DataService } from '../../service/data.service';\r\nimport { FormGroup,FormBuilder,Validators,FormControl,AbstractControl,FormGroupName } from '@angular/forms';\r\nimport {DatePipe,formatDate} from '@angular/common';\r\n@Component({\r\n  templateUrl: 'dashboard.component.html',\r\n  styleUrls: ['dashboard.component.scss'],\r\n})\r\n\r\nexport class DashboardComponent implements OnInit {\r\n  public radioModel = 'Month';\r\n  error: any;\r\n  public online: any = {};\r\n  public offline: any = {};\r\n  public data: ITableData;\r\n  public mainChart: IChartProps = {};\r\n  public chart: Array<IChartProps> = [];\r\n  public brandBoxChart: IChartProps = {};\r\n  public barChart: any = {};\r\n  public doughnutChart: IChartProps = {};\r\n  public statusMachineChart: any = {};\r\n  public salesDetailsChart: any = {};\r\n  public soldItemsChart: any = {};\r\n  public transactionChart: any = {};\r\n  public active: number;\r\n  public inActive:number;\r\n  public empList: Array<ITableData> = [];\r\n  public jsons: any;\r\n  public itemName:  ITableData[] \r\n  public totalQuantity:  ITableData[]\r\n  public fromDate:string ;\r\n  public toDate:string ;\r\n  public fromDates:string ;\r\n  public toDates:string ;\r\n  public dateRangeForm: FormGroup;\r\n  public inputvalue:number= 39;\r\n  public simpleForm: FormGroup;\r\n  public submitted = false;\r\n  public formErrors: any;\r\n  public totalRevenue: number ;\r\n  public orderCreated : number ;\r\n  public paymentSuccess : number ;\r\n  public completed : number ;\r\n  public dispenseFailed : number ;\r\n  public transactionFailed : number ;\r\n  public completedPercentage: number ;\r\n  public failedPercentage: number ;\r\n  public revenuePercentage: number ;\r\n  public onlinepercentage: number ;\r\n  public offlinepercentage: number ;\r\n  public transactionArrayLength: number ;\r\n  public revenueArrayLength: number ;\r\n  public soldArrayLength: number ;\r\n  public bhujiaSev : number ;\r\n  public pepsi : number ;\r\n  public chips : number ;\r\n  public sanitaryNapkinSmall : number ;\r\n\r\n  public bhujiaSevName : string ;\r\n  public pepsiName : string ;\r\n  public chipsName : string ;\r\n  public sanitaryNapkinSmallName : string ;\r\n\r\n  public bhujiaSevPercentage : number ;\r\n  public pepsiPercentage : number ;\r\n  public chipsPercentage : number ;\r\n  public sanitaryNapkinSmallPercentage : number ;\r\n  public transactionFromDate : string;\r\n  public transactionTodate: string;\r\n  public revenueFromDate : string;\r\n  public revenueTodate: string;\r\n  public flag: string;\r\n  public monthOrYear: string;\r\n  public isShown: boolean  ;\r\n  public ispieShown: boolean ;\r\n  public isHide: boolean  ;\r\n  public isPieHide: boolean  ;\r\n  public contactForm:FormGroup;\r\n  public selectedOption: string;\r\n  public printedOption: string;\r\n\r\n  public isbhujiaSev: boolean ;\r\n  public ispepsi: boolean ;\r\n  public ischips: boolean ;\r\n  public issanitaryNapkinSmall: boolean ;\r\n\r\n  countries = [\r\n    { value: \"m\", name: \"Month\" },\r\n    { value: \"Y\", name: \"Year\" }\r\n  ];\r\n\r\nconstructor(private chartsData: DashboardChartsData, private fb: FormBuilder, private service: DataService, private commonData: CommonDataService,) \r\n  {\r\n    this.createForm();\r\n    this.service.getAllStatusOfMachines(this.commonData.merchantId).subscribe(\r\n      (data: ITableData) => {\r\n        this.data = data; \r\n        this.MachineStatus(data)\r\n        console.log(data);\r\n      }, \r\n      (error) => (this.error = error) \r\n    );\r\n    \r\n    this.service.getSoldItemDetails(this.commonData.merchantId).subscribe(\r\n      (data: any[]) => {\r\n        this.soldArrayLength = data.length;\r\n        this.soldItems(data)\r\n        console.log(data);\r\n      }, \r\n      (error) => (this.error = error) \r\n    );\r\n\r\n\r\n    let dte = new Date();\r\n    dte.setDate(dte.getDate() - 30);\r\n    let currentDate = formatDate(new Date(), 'dd-MM-yyyy', 'en');\r\n    var datePipe =  new DatePipe(\"en-US\");\r\n    let lastThirtyDaysDate = datePipe.transform(dte, 'dd-MM-yyyy');\r\n\r\n    let transaction  =  {\r\n      \"fromDate\": lastThirtyDaysDate,\r\n      \"merchantId\": this.commonData.merchantId,\r\n      \"toDate\"  : currentDate,      \r\n    }\r\n    this.onAddTransactionDate(transaction);\r\n\r\n    let revenue = {\r\n      \"flag\":\"m\",\r\n      \"merchantId\": this.commonData.merchantId,   \r\n    }\r\n    this.onAddRevenueDate(revenue);\r\n}\r\n\r\nonAddTransactionDate(addItems : any={}){\r\n  if(addItems.fromDate == null || addItems.fromDate == '' && addItems.toDate == null || addItems.toDate == '' )\r\n  {\r\n    var datePipe =  new DatePipe(\"en-US\");\r\n    this.fromDate = datePipe.transform(this.fromDate, 'dd-MM-yyyy');\r\n    this.toDate = datePipe.transform(this.toDate, 'dd-MM-yyyy');\r\n    let spr = {\r\n      \"fromDate\": this.fromDate +\" 00:00:00\",\r\n      \"merchantId\": this.commonData.merchantId,\r\n      \"toDate\": this.toDate+\" 23:59:59\",     \r\n    }\r\n    this.service.getTransactionCountByStatus(spr).subscribe((resp: any) => {\r\n      this.transactionArrayLength = resp.length;\r\n      console.log(\"getTransactionCountByStatus Reponse:::\" + JSON.stringify(resp));\r\n      this.transactionFromDate = spr.fromDate;\r\n      this.transactionTodate = spr.toDate;\r\n      this.transactionCount(resp);\r\n      if (resp && resp.status == 200) {      \r\n        console.log(resp);\r\n        console.log('resp length'+resp.length);\r\n      }\r\n      \r\n    });\r\n  }\r\n  else{\r\n    var datePipe =  new DatePipe(\"en-US\");\r\n    this.fromDate = datePipe.transform(this.fromDate, 'dd-MM-yyyy');\r\n    this.toDate = datePipe.transform(this.toDate, 'dd-MM-yyyy');\r\n    let spr = {\r\n      \"fromDate\": addItems.fromDate +\" 00:00:00\",\r\n      \"merchantId\": this.commonData.merchantId,\r\n      \"toDate\": addItems.toDate+\" 23:59:59\",     \r\n    }\r\n\r\n    this.service.getTransactionCountByStatus(spr).subscribe((resp: any) => {\r\n      this.transactionArrayLength = resp.length;\r\n      console.log(\"getTransactionCountByStatus Reponse:::\" + JSON.stringify(resp));\r\n      this.transactionFromDate = spr.fromDate;\r\n      this.transactionTodate = spr.toDate;\r\n      this.transactionCount(resp);\r\n      if (resp && resp.status == 200) {      \r\n        console.log(resp);\r\n        console.log('resp length'+resp.length);\r\n      }     \r\n    });\r\n  }       \r\n}\r\n\r\nonAddRevenueDate(addItems : any={}){\r\n  if(addItems.country == null || addItems.country == '')\r\n  {\r\n  let revenueDate = {\r\n    \"flag\": \"m\",\r\n    \"merchantId\": this.commonData.merchantId,\r\n  }\r\n  this.service.getTotalMerchantRevenueByDate(revenueDate).subscribe((resp: any) => {\r\n    console.log(\"TotalMerchantRevenueByDate Reponse:::\" + JSON.stringify(resp));\r\n    this.revenueArrayLength = resp.length;\r\n    this.flag = revenueDate.flag\r\n    this.merchantRevenue(resp);\r\n    if (resp && resp.status == 200) {\r\n      console.log(resp);\r\n    }      \r\n  });\r\n}\r\nelse{\r\n\r\n  let revenueDate = {\r\n    \"flag\": addItems.country,\r\n    \"merchantId\": this.commonData.merchantId,    \r\n  }\r\n\r\n  this.service.getTotalMerchantRevenueByDate(revenueDate).subscribe((resp: any) => {\r\n    console.log(\"TotalMerchantRevenueByDate Reponse:::\" + JSON.stringify(resp));\r\n    this.revenueArrayLength = resp.length;\r\n    this.flag = revenueDate.flag\r\n    this.merchantRevenue(resp);\r\n    if (resp && resp.status == 200) {\r\n      console.log(resp);\r\n    }      \r\n  });\r\n}\r\n  \r\n}\r\n \r\nMachineStatus(data: ITableData): void {\r\n  debugger;\r\n  this.active  = 0 ;\r\n  this.inActive = 0 ;\r\n  if(data.inActiveCount == null || data.inActiveCount == 0 || data.inActiveCount == NaN){\r\n    data.inActiveCount = 0\r\n  }\r\n  \r\nthis.active =  data.activeCount;\r\nthis.inActive = data.inActiveCount;\r\nthis.onlinepercentage = (data.activeCount) /(data.activeCount + data.inActiveCount)*100 ;\r\nthis.offlinepercentage = (data.inActiveCount)/(data.activeCount + data.inActiveCount)*100; \r\nthis.statusMachineChart.arbarChartLabels = [['Online'], ['Offline']];\r\nthis.statusMachineChart.arbarChartType = 'pie';\r\nthis.statusMachineChart.arbarChartLegend = true;\r\nthis.statusMachineChart.arbarChartData = [data.activeCount, data.inActiveCount];\r\nthis.statusMachineChart.arbarChartOptions = {}\r\nthis.statusMachineChart.pieChartPlugins  = [];\r\nthis.statusMachineChart.pieColor  = [\r\n  {\r\n    backgroundColor: [\r\n      'rgba(50,205,50)',\r\n      'rgba(255,69,0)',\r\n    ]\r\n  }\r\n];\r\n}\r\n\r\nsoldItems(data: any[]): void {\r\n  this.bhujiaSev = 0 ;\r\n  this.pepsi = 0 ;\r\n  this.chips = 0 ;\r\n  this.sanitaryNapkinSmall = 0 ;\r\n  this.bhujiaSevPercentage = 0;\r\n  this.pepsiPercentage = 0;\r\n  this.chipsPercentage = 0;\r\n  this.sanitaryNapkinSmallPercentage = 0;\r\n\r\n for (let i = 0; i < this.soldArrayLength; i++) {\r\n  if(data[i].itemName == \"Bhujia Sev\"){\r\n    this.bhujiaSev = data[i].totalQuantity;\r\n    this.bhujiaSevName =data[i].itemName;\r\n    this.isbhujiaSev = true;\r\n\r\n  }\r\n  else if(data[i].itemName == \"Pepsi\")\r\n  {\r\n    this.pepsi = data[i].totalQuantity ;\r\n    this.pepsiName = data[i].itemName;\r\n    this.ispepsi = true;\r\n\r\n  }\r\n  else if(data[i].itemName == \"chips\")\r\n  {\r\n    this.chips = data[i].totalQuantity;\r\n    this.chipsName = data[i].itemName;\r\n    this.ischips = true;\r\n  }\r\n  else\r\n  {\r\n    this.sanitaryNapkinSmall = data[i].totalQuantity ;\r\n    this.sanitaryNapkinSmallName = data[i].itemName;\r\n    this.issanitaryNapkinSmall = true;\r\n  }\r\n }\r\n this.bhujiaSevPercentage = (this.bhujiaSev) /(this.bhujiaSev + this.pepsi + this.chips + this.sanitaryNapkinSmall )*100 ;\r\n this.pepsiPercentage = (this.pepsi) /(this.bhujiaSev + this.pepsi + this.chips + this.sanitaryNapkinSmall)*100 ;\r\n this.chipsPercentage = (this.chips) /(this.bhujiaSev + this.pepsi + this.chips + this.sanitaryNapkinSmall)*100 ;\r\n this.sanitaryNapkinSmallPercentage =(this.sanitaryNapkinSmall) / (this.bhujiaSev + this.pepsi + this.chips + this.sanitaryNapkinSmall)*100 ;\r\n\r\n  this.soldItemsChart.doughnutChartLabels = [[this.bhujiaSevName],[this.pepsiName],[this.chipsName],[this.sanitaryNapkinSmallName]];\r\n  this.soldItemsChart.doughnutChartType = 'doughnut';\r\n  this.soldItemsChart.doughnutChartLegend = true;\r\n  this.soldItemsChart.doughnutChartData =  [this.bhujiaSev,this.pepsi,this.chips,this.sanitaryNapkinSmall];\r\n  this.soldItemsChart.doughnutChartOptions = {}\r\n  this.soldItemsChart.pieColor  = [\r\n    {\r\n      backgroundColor: [\r\n        ['rgba(242,77,65,255)'],\r\n        ['rgba(49,182,77,255)'],\r\n        ['rgba(252,203,86,255)'],\r\n        ['rgba(104,223,237,255)']\r\n      ]\r\n    }\r\n  ];\r\n}\r\n\r\ntransactionCount(data: ITableData): void {\r\nif(this.transactionArrayLength == 0 || this.transactionArrayLength == null){\r\n  this.isShown = true;\r\n  this.ispieShown = false;\r\n}\r\nelse{\r\n  this.isShown =  false;\r\n  this.ispieShown = true;\r\n}\r\n    this.transactionFailed = 0;\r\n    this.completed = 0;\r\n    this.dispenseFailed = 0;\r\n    this.orderCreated = 0;\r\n    this.paymentSuccess = 0;\r\n    this.completedPercentage = 0;\r\n    this.failedPercentage = 0;\r\n\r\n    for (let i = 0; i < this.transactionArrayLength; i++) {\r\n    if(data[i].transactionStatus == \"COMPLETED\"){\r\n      this.completed = data[i].count;\r\n    }\r\n    else if(data[i].transactionStatus == \"DISPENSE FAILED\")\r\n    {\r\n      this.dispenseFailed = data[i].count ;\r\n    }\r\n    else if(data[i].transactionStatus == \"ORDER CREATED\")\r\n    {\r\n      this.orderCreated = data[i].count;\r\n    }\r\n    else if(data[i].transactionStatus == \"PAYMENT SUCCESS\")\r\n    {\r\n      this.paymentSuccess = data[i].count;\r\n    }\r\n    else\r\n    {\r\n      this.transactionFailed = data[i].count ;\r\n    }\r\n    }\r\n  if((this.dispenseFailed + this.completed) != 0){\r\n      this.completedPercentage = ((this.completed)/(this.dispenseFailed + this.completed))*100;\r\n      this.failedPercentage =  ((this.dispenseFailed)/(this.dispenseFailed + this.completed))*100;\r\n\r\n  }\r\n  else{\r\n    this.completedPercentage = 0;\r\n    this.failedPercentage =  0;\r\n  }\r\n      \r\n  this.transactionChart.arbarChartLabels = ['Success','Failed'];\r\n  this.transactionChart.arbarChartType = 'pie';\r\n  this.transactionChart.arbarChartLegend = true;\r\n  this.transactionChart.arbarChartData = [this.completed,this.dispenseFailed];\r\n  this.transactionChart.arbarChartOptions = {\r\n  }\r\n  this.transactionChart.pieChartPlugins  = [];\r\n  this.transactionChart.pieColor  = [\r\n    {\r\n      backgroundColor: [\r\n        'rgba(34,139,34)',\r\n        'rgba(255,0,0)',\r\n        \r\n      ]\r\n    }\r\n  ]\r\n\r\n\r\n}\r\n\r\nmerchantRevenue(data: ITableData): void {\r\nif(data['totalRevenueData'].week1 == 0 && this.flag == 'm' || data['totalRevenueData'].week1 == null && this.flag == 'm' || data['totalRevenueData'].DECEMBER2021 == 0 &&  this.flag == 'Y' || data['totalRevenueData'].DECEMBER2021 == null && this.flag == 'Y'){\r\n  this.isHide = true;\r\n  this.isPieHide = false;\r\n}\r\nelse{\r\n  this.isHide =  false;\r\n  this.isPieHide = true;\r\n}\r\n\r\n    // if(data.totalRevenue == null ||data.totalRevenue == 0 ){\r\n    //   this.totalRevenue = 0;\r\n    //   this.revenuePercentage = 0;\r\n    // }\r\n    // else{\r\n    //   this.totalRevenue = data.totalRevenue;\r\n    //   this.revenuePercentage =  (data.totalRevenue / (data.totalRevenue + 0))*100;\r\n    // }\r\n    if(this.flag == 'm'){\r\n      this.monthOrYear = \"Month\";\r\n      this.salesDetailsChart.arbarChartLabels = ['week1','week2','week3','week4'];\r\n      this.salesDetailsChart.arbarChartType = 'bar';\r\n      this.salesDetailsChart.arbarChartLegend = true;\r\n      this.salesDetailsChart.arbarChartData = [data['totalRevenueData']['week1'],data['totalRevenueData']['week2'],data['totalRevenueData']['week3'],data['totalRevenueData']['week4']];\r\n      this.salesDetailsChart.arbarChartOptions = {\r\n\r\n          scales: {\r\n              xAxes: [{\r\n                  barPercentage: 0.4\r\n              }]\r\n          }\r\n      \r\n      }\r\n      this.salesDetailsChart.pieChartPlugins  = [];\r\n      this.salesDetailsChart.pieColor  = [\r\n        {\r\n          backgroundColor: [\r\n            'rgba(255,161,181,255)',\r\n            'rgba(134,199,243,255)',\r\n            'rgba(255,225,153,255)',\r\n            'rgb(204,211,217)',\r\n            'rgba(255,161,181,255)',\r\n            \r\n          ]\r\n        }\r\n        ];       \r\n    }\r\n    else{\r\n      this.monthOrYear = \"Year\";\r\n      this.salesDetailsChart.arbarChartLabels = ['DECEMBER2021','JANUARY2022','FEBRUARY2022','MARCH2022',];\r\n      this.salesDetailsChart.arbarChartType = 'bar';\r\n      this.salesDetailsChart.arbarChartLegend = true;\r\n      this.salesDetailsChart.arbarChartData = [data['totalRevenueData'].DECEMBER2021,data['totalRevenueData'].JANUARY2022,data['totalRevenueData'].FEBRUARY2022,data['totalRevenueData'].MARCH2022,];\r\n      this.salesDetailsChart.arbarChartOptions = {\r\n        scales: {\r\n          xAxes: [{\r\n              barPercentage: 0.4\r\n          }]\r\n      }\r\n      }\r\n      this.salesDetailsChart.pieChartPlugins  = [];\r\n      this.salesDetailsChart.pieColor  = [\r\n        {\r\n          backgroundColor: [\r\n            'rgba(255,161,181,255)',\r\n            'rgba(134,199,243,255)',\r\n            'rgba(255,225,153,255)',\r\n            'rgb(204,211,217)',\r\n            'rgba(255,161,181,255)',\r\n            \r\n          ]\r\n        }\r\n      ];\r\n    }\r\n}\r\n \r\nngOnInit(): void {\r\n  this.initCharts();\r\n  this.dateRangeForm = this.fb.group({\r\n    fromDate: new FormControl('', Validators.required),\r\n    toDate: new FormControl('', Validators.required)\r\n  });\r\n\r\n  this.contactForm = this.fb.group({\r\n    country: [null]\r\n  });\r\n}\r\n\r\ninitCharts(): void {\r\n  this.mainChart = this.chartsData.mainChart;\r\n  this.chart = this.chartsData.widgetChart;\r\n  this.brandBoxChart = this.chartsData.brandBoxChart;\r\n  this.barChart      = this.chartsData.barChart;\r\n}\r\n\r\ncreateForm() {\r\n  this.simpleForm = this.fb.group(\r\n    {\r\n      fromDate: ['', [Validators.required]],\r\n      toDate:['', [Validators.required]],\r\n      fromDates: ['', [Validators.required]],\r\n      toDates:['', [Validators.required]],\r\n      flag:['', [Validators.required]],\r\n    },    \r\n  );\r\n}\r\n\r\nget f() {\r\n  return this.simpleForm.controls;\r\n}\r\n\r\nonReset() {\r\n  this.submitted = false;\r\n  this.simpleForm.reset();\r\n}\r\n\r\nonValidate() {\r\n  this.submitted = true;\r\n  return this.simpleForm.status === 'VALID';\r\n}\r\n\r\nsubmit(){\r\n  console.log(this.contactForm.value);\r\n}\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //   this.barChart.arbarChartLabels = ['Success','Failed','Order Created','Payment Success','Transaction Failed'];\r\n  //   this.barChart.arbarChartType = 'bar';\r\n  //   this.barChart.arbarChartLegend = false;\r\n  //   this.barChart.arbarChartData = [this.completed,this.dispenseFailed,this.orderCreated,this.paymentSuccess,this.transactionFailed];\r\n    \r\n  //   this.barChart.arbarChartOptions = {\r\n  //     scales: {\r\n  //         xAxes: [{\r\n  //             barPercentage: 0.7\r\n  //         }]\r\n  //     }\r\n  // }\r\n  //   this.barChart.pieChartPlugins  = [];\r\n  //   this.barChart.pieColor  = [\r\n  //     {\r\n  //       backgroundColor: [\r\n  //         'rgba(37,150,190,255)',\r\n  //         'rgba(147,217,217,255)',\r\n  //         'rgb(153,153,255)',\r\n  //         'rgba(255,161,181,255)',\r\n  //         'rgba(134,199,243,255)'\r\n  //       ]\r\n  //     }\r\n  //   ]"],"sourceRoot":"webpack:///"}