{"version":3,"sources":["./src/app/views/tables/data-tables/data-tables.component.scss","./src/app/views/tables/data-tables/data-tables-routing.module.ts","./src/app/views/tables/data-tables/data-tables.component.html","./src/app/views/tables/data-tables/data-tables.module.ts","./src/app/views/tables/data-tables/data-tables.service.ts","./src/app/views/tables/data-tables/data-tables.component.ts","./src/app/views/tables/data-tables/data-tables-filter.pipe.ts"],"names":[],"mappings":"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","file":"data-tables-data-tables-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXRhLXRhYmxlcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DataTablesComponent } from './data-tables.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DataTablesComponent,\r\n    data: {\r\n      title: 'Data Table',\r\n    },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DataTablesRoutingModule {}\r\n","export default \"<div class=\\\"fade-in\\\">\\r\\n  <c-card>\\r\\n    <c-card-header>\\r\\n      DataTable\\r\\n      <c-card-header-actions>\\r\\n        <a\\r\\n          href=\\\"https://github.com/mariuszfoltak/angular2-datatable\\\"\\r\\n          target=\\\"_blank\\\"\\r\\n          class=\\\"card-header-action\\\"\\r\\n        >\\r\\n          <small class=\\\"text-muted\\\">docs</small>\\r\\n        </a>\\r\\n      </c-card-header-actions>\\r\\n    </c-card-header>\\r\\n    <c-card-body>\\r\\n      <c-row class=\\\"mb-3\\\">\\r\\n        <c-col md=\\\"4\\\" class=\\\"offset-md-8\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\r\\n            </div>\\r\\n            <input cInput\\r\\n\\r\\n              [(ngModel)]=\\\"filterQuery\\\"\\r\\n              placeholder=\\\"Search by name\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </c-col>\\r\\n      </c-row>\\r\\n      <table\\r\\n        class=\\\"table table-striped table-hover table-responsive-lg\\\"\\r\\n        [mfData]=\\\"data | dataFilter: filterQuery\\\"\\r\\n        #mf=\\\"mfDataTable\\\"\\r\\n        [mfRowsOnPage]=\\\"10\\\"\\r\\n      >\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th style=\\\"width: 20%;\\\">\\r\\n              <mfDefaultSorter by=\\\"name\\\" #sortName>\\r\\n                Name\\r\\n                <span\\r\\n                  *ngIf=\\\"sortName.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortName.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n            <th style=\\\"width: 35%;\\\">\\r\\n              <mfDefaultSorter by=\\\"email\\\" #sortEmail>\\r\\n                Email\\r\\n                <span\\r\\n                  *ngIf=\\\"sortEmail.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortEmail.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n            <th style=\\\"width: 10%;\\\">\\r\\n              <mfDefaultSorter by=\\\"age\\\" #sortAge>\\r\\n                Age\\r\\n                <span\\r\\n                  *ngIf=\\\"sortAge.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortAge.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n            <th style=\\\"width: 20%;\\\">\\r\\n              <mfDefaultSorter by=\\\"city\\\" #sortCity>\\r\\n                City\\r\\n                <span\\r\\n                  *ngIf=\\\"sortCity.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortCity.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n            <th style=\\\"width: 10%;\\\">\\r\\n              <mfDefaultSorter by=\\\"regDate\\\" #sortRegDate>\\r\\n                Registered\\r\\n                <span\\r\\n                  *ngIf=\\\"sortRegDate.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortRegDate.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of mf.data\\\">\\r\\n            <td>{{ item.name }}</td>\\r\\n            <td>{{ item.email }}</td>\\r\\n            <td class=\\\"text-left\\\">{{ item.age }}</td>\\r\\n            <td>{{ item.city | uppercase }}</td>\\r\\n            <td>{{ item.regDate | date }}</td>\\r\\n<!--            <td>{{ getDate(item.regDate) }}</td>-->\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n          <tr>\\r\\n            <td colspan=\\\"5\\\">\\r\\n              <mfBootstrapPaginator\\r\\n                [rowsOnPageSet]=\\\"[5, 10, 15]\\\"\\r\\n              ></mfBootstrapPaginator>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tfoot>\\r\\n      </table>\\r\\n    </c-card-body>\\r\\n  </c-card>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// DataTable\r\nimport { DataTableModule } from '@pascalhonegger/ng-datatable';\r\n\r\nimport { CardModule, FormModule, GridModule } from '@coreui/angular';\r\n\r\nimport { DataTablesComponent } from './data-tables.component';\r\nimport { DataFilterPipe } from './data-tables-filter.pipe';\r\n\r\n// Routing\r\nimport { DataTablesRoutingModule } from './data-tables-routing.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        DataTablesRoutingModule,\r\n        DataTableModule,\r\n        CardModule,\r\n        GridModule,\r\n        DataTableModule,\r\n        FormModule,\r\n    ],\r\n  declarations: [DataTablesComponent, DataFilterPipe],\r\n})\r\nexport class DataTablesInitModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\nexport interface IUserData {\r\n  name: string;\r\n  email: string;\r\n  regDate: string;\r\n  city: string;\r\n  age: number;\r\n}\r\n\r\nexport interface ITableData extends Array<IUserData> {\r\n  \r\n}\r\n\r\n@Injectable()\r\nexport class DataTablesService {\r\n  dataUrl = 'assets/data-tables.json';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData() {\r\n    return this.http.get<ITableData>(this.dataUrl).pipe(\r\n      retry(3), // retry a failed request up to 3 times\r\n      catchError(this.handleError) // then handle the error\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\r\n      );\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError('Something bad happened; please try again later.');\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ITableData, DataTablesService } from './data-tables.service';\r\n\r\n@Component({\r\n  selector: 'app-data-tables',\r\n  templateUrl: './data-tables.component.html',\r\n  styleUrls: ['./data-tables.component.scss'],\r\n  providers: [DataTablesService],\r\n})\r\nexport class DataTablesComponent {\r\n  error: any;\r\n  public data: ITableData;\r\n  public filterQuery = '';\r\n\r\n  constructor(private dataTableService: DataTablesService) {\r\n    this.dataTableService.getData().subscribe(\r\n      (data: ITableData) => {\r\n        setTimeout(() => {\r\n          this.data = [...data];\r\n        }, 1000);\r\n      }, // success path\r\n      (error) => (this.error = error) // error path\r\n    );\r\n  }\r\n\r\n  public toInt(num: string) {\r\n    return +num;\r\n  }\r\n\r\n  public sortByWordLength = (a: any) => {\r\n    return a.name.length;\r\n  }\r\n\r\n  public getDate(regDate: string) {\r\n    const date = new Date(regDate);\r\n    return date.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: '2-digit',\r\n    });\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dataFilter',\r\n})\r\nexport class DataFilterPipe implements PipeTransform {\r\n  transform(array: any[], query: string): any {\r\n    if (query) {\r\n      return _.filter(array, (row) => row.name.indexOf(query) > -1);\r\n    }\r\n    return array;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}