{"version":3,"sources":["webpack:///src/app/views/tables/data-tables/data-tables.component.scss","webpack:///src/app/views/tables/data-tables/data-tables-routing.module.ts","webpack:///src/app/views/tables/data-tables/data-tables.component.html","webpack:///src/app/views/tables/data-tables/data-tables.module.ts","webpack:///src/app/views/tables/data-tables/data-tables.service.ts","webpack:///src/app/views/tables/data-tables/data-tables.component.ts","webpack:///src/app/views/tables/data-tables/data-tables-filter.pipe.ts"],"names":["routes","path","component","data","title","DataTablesRoutingModule","imports","forChild","exports","DataTablesInitModule","declarations","DataTablesService","http","dataUrl","get","pipe","handleError","error","ErrorEvent","console","message","status","DataTablesComponent","dataTableService","filterQuery","sortByWordLength","a","name","length","getData","subscribe","setTimeout","num","regDate","date","Date","toLocaleDateString","year","month","day","selector","template","providers","DataFilterPipe","array","query","row","indexOf"],"mappings":"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","file":"data-tables-data-tables-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXRhLXRhYmxlcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DataTablesComponent } from './data-tables.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DataTablesComponent,\n    data: {\n      title: 'Data Table',\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DataTablesRoutingModule {}\n","export default \"<div class=\\\"fade-in\\\">\\n  <c-card>\\n    <c-card-header>\\n      DataTable\\n      <c-card-header-actions>\\n        <a\\n          href=\\\"https://github.com/mariuszfoltak/angular2-datatable\\\"\\n          target=\\\"_blank\\\"\\n          class=\\\"card-header-action\\\"\\n        >\\n          <small class=\\\"text-muted\\\">docs</small>\\n        </a>\\n      </c-card-header-actions>\\n    </c-card-header>\\n    <c-card-body>\\n      <c-row class=\\\"mb-3\\\">\\n        <c-col md=\\\"4\\\" class=\\\"offset-md-8\\\">\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n            </div>\\n            <input cInput\\n\\n              [(ngModel)]=\\\"filterQuery\\\"\\n              placeholder=\\\"Search by name\\\"\\n            />\\n          </div>\\n        </c-col>\\n      </c-row>\\n      <table\\n        class=\\\"table table-striped table-hover table-responsive-lg\\\"\\n        [mfData]=\\\"data | dataFilter: filterQuery\\\"\\n        #mf=\\\"mfDataTable\\\"\\n        [mfRowsOnPage]=\\\"10\\\"\\n      >\\n        <thead>\\n          <tr>\\n            <th style=\\\"width: 20%;\\\">\\n              <mfDefaultSorter by=\\\"name\\\" #sortName>\\n                Name\\n                <span\\n                  *ngIf=\\\"sortName.isSortedByMeAsc\\\"\\n                  class=\\\"cil-arrow-top\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n                <span\\n                  *ngIf=\\\"sortName.isSortedByMeDesc\\\"\\n                  class=\\\"cil-arrow-bottom\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n              </mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 35%;\\\">\\n              <mfDefaultSorter by=\\\"email\\\" #sortEmail>\\n                Email\\n                <span\\n                  *ngIf=\\\"sortEmail.isSortedByMeAsc\\\"\\n                  class=\\\"cil-arrow-top\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n                <span\\n                  *ngIf=\\\"sortEmail.isSortedByMeDesc\\\"\\n                  class=\\\"cil-arrow-bottom\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n              </mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%;\\\">\\n              <mfDefaultSorter by=\\\"age\\\" #sortAge>\\n                Age\\n                <span\\n                  *ngIf=\\\"sortAge.isSortedByMeAsc\\\"\\n                  class=\\\"cil-arrow-top\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n                <span\\n                  *ngIf=\\\"sortAge.isSortedByMeDesc\\\"\\n                  class=\\\"cil-arrow-bottom\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n              </mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 20%;\\\">\\n              <mfDefaultSorter by=\\\"city\\\" #sortCity>\\n                City\\n                <span\\n                  *ngIf=\\\"sortCity.isSortedByMeAsc\\\"\\n                  class=\\\"cil-arrow-top\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n                <span\\n                  *ngIf=\\\"sortCity.isSortedByMeDesc\\\"\\n                  class=\\\"cil-arrow-bottom\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n              </mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%;\\\">\\n              <mfDefaultSorter by=\\\"regDate\\\" #sortRegDate>\\n                Registered\\n                <span\\n                  *ngIf=\\\"sortRegDate.isSortedByMeAsc\\\"\\n                  class=\\\"cil-arrow-top\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n                <span\\n                  *ngIf=\\\"sortRegDate.isSortedByMeDesc\\\"\\n                  class=\\\"cil-arrow-bottom\\\"\\n                  aria-hidden=\\\"true\\\"\\n                ></span>\\n              </mfDefaultSorter>\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of mf.data\\\">\\n            <td>{{ item.name }}</td>\\n            <td>{{ item.email }}</td>\\n            <td class=\\\"text-left\\\">{{ item.age }}</td>\\n            <td>{{ item.city | uppercase }}</td>\\n            <td>{{ item.regDate | date }}</td>\\n<!--            <td>{{ getDate(item.regDate) }}</td>-->\\n          </tr>\\n        </tbody>\\n        <tfoot>\\n          <tr>\\n            <td colspan=\\\"5\\\">\\n              <mfBootstrapPaginator\\n                [rowsOnPageSet]=\\\"[5, 10, 15]\\\"\\n              ></mfBootstrapPaginator>\\n            </td>\\n          </tr>\\n        </tfoot>\\n      </table>\\n    </c-card-body>\\n  </c-card>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n// DataTable\nimport { DataTableModule } from '@pascalhonegger/ng-datatable';\n\nimport { CardModule, FormModule, GridModule } from '@coreui/angular';\n\nimport { DataTablesComponent } from './data-tables.component';\nimport { DataFilterPipe } from './data-tables-filter.pipe';\n\n// Routing\nimport { DataTablesRoutingModule } from './data-tables-routing.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        HttpClientModule,\n        DataTablesRoutingModule,\n        DataTableModule,\n        CardModule,\n        GridModule,\n        DataTableModule,\n        FormModule,\n    ],\n  declarations: [DataTablesComponent, DataFilterPipe],\n})\nexport class DataTablesInitModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\nexport interface IUserData {\n  name: string;\n  email: string;\n  regDate: string;\n  city: string;\n  age: number;\n}\n\nexport interface ITableData extends Array<IUserData> {\n  \n}\n\n@Injectable()\nexport class DataTablesService {\n  dataUrl = 'assets/data-tables.json';\n\n  constructor(private http: HttpClient) {}\n\n  getData() {\n    return this.http.get<ITableData>(this.dataUrl).pipe(\n      retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError) // then handle the error\n    );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n      );\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n","import { Component } from '@angular/core';\nimport { ITableData, DataTablesService } from './data-tables.service';\n\n@Component({\n  selector: 'app-data-tables',\n  templateUrl: './data-tables.component.html',\n  styleUrls: ['./data-tables.component.scss'],\n  providers: [DataTablesService],\n})\nexport class DataTablesComponent {\n  error: any;\n  public data: ITableData;\n  public filterQuery = '';\n\n  constructor(private dataTableService: DataTablesService) {\n    this.dataTableService.getData().subscribe(\n      (data: ITableData) => {\n        setTimeout(() => {\n          this.data = [...data];\n        }, 1000);\n      }, // success path\n      (error) => (this.error = error) // error path\n    );\n  }\n\n  public toInt(num: string) {\n    return +num;\n  }\n\n  public sortByWordLength = (a: any) => {\n    return a.name.length;\n  }\n\n  public getDate(regDate: string) {\n    const date = new Date(regDate);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit',\n    });\n  }\n}\n","import * as _ from 'lodash';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dataFilter',\n})\nexport class DataFilterPipe implements PipeTransform {\n  transform(array: any[], query: string): any {\n    if (query) {\n      return _.filter(array, (row) => row.name.indexOf(query) > -1);\n    }\n    return array;\n  }\n}\n"]}