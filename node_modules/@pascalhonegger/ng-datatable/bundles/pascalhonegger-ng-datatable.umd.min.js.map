{"version":3,"sources":["../../../projects/ng-datatable/src/lib/BootstrapPaginator.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ng-datatable/src/lib/DataTable.ts","../../../projects/ng-datatable/src/lib/Paginator.ts","../../../projects/ng-datatable/src/lib/DefaultSorter.ts","../../../projects/ng-datatable/src/lib/DataTableModule.ts"],"names":["BootstrapPaginator","this","rowsOnPageSet","minRowsOnPage","prototype","ngOnChanges","changes","reduce","previous","current","Component","args","selector","template","Input","Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","DataTable","differs","inputData","sortBy","sortOrder","sortByChange","EventEmitter","sortOrderChange","rowsOnPage","activePage","mustRecalculateData","onSortChange","ReplaySubject","onPageChange","diff","find","getSort","setSort","indexOf","emit","getPage","dataLength","setPage","calculateNewActivePage","previousRowsOnPage","currentRowsOnPage","firstRowOnPage","Math","ceil","recalculatePage","lastPage","previousValue","currentValue","console","warn","ngDoCheck","fillData","offset","data","arguments","concat","__spread","sort","sorter","slice","caseInsensitiveIteratee","row","String","_b","split","_c","sortByProperty","toLowerCase","compare","left","right","_this","order","Array","isArray","iteratees_1","map","entry","iteratees_2","iteratees_2_1","iteratee","comparison","iteratee_1","Directive","exportAs","IterableDiffers","Output","Paginator","injectMfTable","onPageChangeSubscriber","event","mfTable","inputMfTable","subscribe","pageNumber","setRowsOnPage","decorators","type","Optional","DefaultSorter","isSortedByMeAsc","isSortedByMeDesc","ngOnInit","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import {Component, Input, OnChanges} from \"@angular/core\";\r\nimport {DataTable} from \"./DataTable\";\r\n\r\n@Component({\r\n    selector: \"mfBootstrapPaginator\",\r\n    template: `\r\n    <mfPaginator #p [mfTable]=\"mfTable\">\r\n        <ul class=\"pagination\" *ngIf=\"p.dataLength > p.rowsOnPage\">\r\n            <li class=\"page-item\" [class.disabled]=\"p.activePage <= 1\" (click)=\"p.setPage(1)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">&laquo;</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage > 4 && p.activePage + 1 > p.lastPage\" (click)=\"p.setPage(p.activePage - 4)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage-4}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage > 3 && p.activePage + 2 > p.lastPage\" (click)=\"p.setPage(p.activePage - 3)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage-3}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage > 2\" (click)=\"p.setPage(p.activePage - 2)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage-2}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage > 1\" (click)=\"p.setPage(p.activePage - 1)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage-1}}</a>\r\n            </li>\r\n            <li class=\"page-item active\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage + 1 <= p.lastPage\" (click)=\"p.setPage(p.activePage + 1)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage+1}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage + 2 <= p.lastPage\" (click)=\"p.setPage(p.activePage + 2)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage+2}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage + 3 <= p.lastPage && p.activePage < 3\" (click)=\"p.setPage(p.activePage + 3)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage+3}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage + 4 <= p.lastPage && p.activePage < 2\" (click)=\"p.setPage(p.activePage + 4)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage+4}}</a>\r\n            </li>\r\n            <li class=\"page-item\" [class.disabled]=\"p.activePage >= p.lastPage\" (click)=\"p.setPage(p.lastPage)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">&raquo;</a>\r\n            </li>\r\n        </ul>\r\n        <ul class=\"pagination pull-right float-sm-right\" *ngIf=\"p.dataLength > minRowsOnPage\">\r\n            <li class=\"page-item\" *ngFor=\"let rows of rowsOnPageSet\" [class.active]=\"p.rowsOnPage===rows\" (click)=\"p.setRowsOnPage(rows)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{rows}}</a>\r\n            </li>\r\n        </ul>\r\n    </mfPaginator>\r\n    `\r\n})\r\nexport class BootstrapPaginator implements OnChanges {\r\n    @Input(\"rowsOnPageSet\") rowsOnPageSet = [];\r\n    @Input(\"mfTable\") mfTable: DataTable;\r\n\r\n    minRowsOnPage = 0;\r\n\r\n    ngOnChanges(changes: any): any {\r\n        if (changes.rowsOnPageSet) {\r\n            this.minRowsOnPage = this.rowsOnPageSet.reduce((previous, current) => current < previous ? current : previous);\r\n        }\r\n    }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {\r\n    Directive, Input, EventEmitter, SimpleChange, OnChanges, DoCheck, IterableDiffers,\r\n    IterableDiffer, Output\r\n} from \"@angular/core\";\r\nimport { ReplaySubject } from \"rxjs\";\r\n\r\nexport interface SortEvent {\r\n    sortBy: string | string[] | Function | Function[];\r\n    sortOrder: string;\r\n}\r\n\r\nexport interface PageEvent {\r\n    activePage: number;\r\n    rowsOnPage: number;\r\n    dataLength: number;\r\n}\r\n\r\nexport interface DataEvent {\r\n    length: number;\r\n}\r\n\r\n@Directive({\r\n    selector: \"table[mfData]\",\r\n    exportAs: \"mfDataTable\"\r\n})\r\nexport class DataTable implements OnChanges, DoCheck {\r\n\r\n    private diff: IterableDiffer<any>;\r\n    @Input(\"mfData\") public inputData: any[] = [];\r\n\r\n    @Input(\"mfSortBy\") public sortBy: string | string[] | Function | Function[] = \"\";\r\n    @Input(\"mfSortOrder\") public sortOrder: \"asc\" | \"desc\" = \"asc\";\r\n    @Output(\"mfSortByChange\") public sortByChange = new EventEmitter<string | string[]>();\r\n    @Output(\"mfSortOrderChange\") public sortOrderChange = new EventEmitter<string>();\r\n\r\n    @Input(\"mfRowsOnPage\") public rowsOnPage = 1000;\r\n    @Input(\"mfActivePage\") public activePage = 1;\r\n\r\n    private mustRecalculateData = false;\r\n\r\n    public data: any[];\r\n\r\n    public onSortChange = new ReplaySubject<SortEvent>(1);\r\n    public onPageChange = new EventEmitter<PageEvent>();\r\n\r\n    public constructor(private differs: IterableDiffers) {\r\n        this.diff = differs.find([]).create(null);\r\n    }\r\n\r\n    public getSort(): SortEvent {\r\n        return { sortBy: this.sortBy, sortOrder: this.sortOrder };\r\n    }\r\n\r\n    public setSort(sortBy: string | string[], sortOrder: \"asc\" | \"desc\"): void {\r\n        if (this.sortBy !== sortBy || this.sortOrder !== sortOrder) {\r\n            this.sortBy = sortBy;\r\n            this.sortOrder = [\"asc\", \"desc\"].indexOf(sortOrder) >= 0 ? sortOrder : \"asc\";\r\n            this.mustRecalculateData = true;\r\n            this.onSortChange.next({ sortBy: this.sortBy, sortOrder: this.sortOrder });\r\n            this.sortByChange.emit(this.sortBy);\r\n            this.sortOrderChange.emit(this.sortOrder);\r\n        }\r\n    }\r\n\r\n    public getPage(): PageEvent {\r\n        return { activePage: this.activePage, rowsOnPage: this.rowsOnPage, dataLength: this.inputData.length };\r\n    }\r\n\r\n    public setPage(activePage: number, rowsOnPage: number): void {\r\n        if (this.rowsOnPage !== rowsOnPage || this.activePage !== activePage) {\r\n            this.activePage = this.activePage !== activePage ? activePage : this.calculateNewActivePage(this.rowsOnPage, rowsOnPage);\r\n            this.rowsOnPage = rowsOnPage;\r\n            this.mustRecalculateData = true;\r\n            this.onPageChange.emit({\r\n                activePage: this.activePage,\r\n                rowsOnPage: this.rowsOnPage,\r\n                dataLength: this.inputData ? this.inputData.length : 0\r\n            });\r\n        }\r\n    }\r\n\r\n    private calculateNewActivePage(previousRowsOnPage: number, currentRowsOnPage: number): number {\r\n        const firstRowOnPage = (this.activePage - 1) * previousRowsOnPage + 1;\r\n        const newActivePage = Math.ceil(firstRowOnPage / currentRowsOnPage);\r\n        return newActivePage;\r\n    }\r\n\r\n    private recalculatePage() {\r\n        const lastPage = Math.ceil(this.inputData.length / this.rowsOnPage);\r\n        this.activePage = lastPage < this.activePage ? lastPage : this.activePage;\r\n        this.activePage = this.activePage || 1;\r\n\r\n        this.onPageChange.emit({\r\n            activePage: this.activePage,\r\n            rowsOnPage: this.rowsOnPage,\r\n            dataLength: this.inputData.length\r\n        });\r\n    }\r\n\r\n    public ngOnChanges(changes: { [key: string]: SimpleChange }): any {\r\n        if (changes.rowsOnPage) {\r\n            this.rowsOnPage = changes.rowsOnPage.previousValue;\r\n            this.setPage(this.activePage, changes.rowsOnPage.currentValue);\r\n            this.mustRecalculateData = true;\r\n        }\r\n        if (changes.sortBy || changes.sortOrder) {\r\n            if ([\"asc\", \"desc\"].indexOf(this.sortOrder) < 0) {\r\n                console.warn(\"ng-datatable: value for input mfSortOrder must be one of ['asc', 'desc'], but is:\", this.sortOrder);\r\n                this.sortOrder = \"asc\";\r\n            }\r\n            if (this.sortBy) {\r\n                this.onSortChange.next({ sortBy: this.sortBy, sortOrder: this.sortOrder });\r\n            }\r\n            this.mustRecalculateData = true;\r\n        }\r\n        if (changes.inputData) {\r\n            this.inputData = changes.inputData.currentValue || [];\r\n            this.recalculatePage();\r\n            this.mustRecalculateData = true;\r\n        }\r\n    }\r\n\r\n    public ngDoCheck(): any {\r\n        const changes = this.diff.diff(this.inputData);\r\n        if (changes) {\r\n            this.recalculatePage();\r\n            this.mustRecalculateData = true;\r\n        }\r\n        if (this.mustRecalculateData) {\r\n            this.fillData();\r\n            this.mustRecalculateData = false;\r\n        }\r\n    }\r\n\r\n    private fillData(): void {\r\n        // this.activePage = this.activePage;\r\n        // this.rowsOnPage = this.rowsOnPage;\r\n\r\n        const offset = (this.activePage - 1) * this.rowsOnPage;\r\n        // let data = this.inputData;\r\n        // const sortBy = this.sortBy;\r\n        // if (typeof sortBy === \"string\" || sortBy instanceof String) {\r\n        //     data = orderBy(data, this.caseInsensitiveIteratee(sortBy as string), [this.sortOrder]);\r\n        // } else {\r\n        //     data = orderBy(data, sortBy, [this.sortOrder]);\r\n        // }\r\n        // data = slice(data, offset, offset + this.rowsOnPage);\r\n\r\n        this.data = [...this.inputData]\r\n            .sort(this.sorter(this.sortBy, this.sortOrder))\r\n            .slice(offset, offset + this.rowsOnPage);\r\n    }\r\n\r\n    private caseInsensitiveIteratee(sortBy: string | Function) {\r\n        return (row: any): any => {\r\n            let value = row;\r\n            if (typeof sortBy === \"string\" || sortBy instanceof String) {\r\n                for (const sortByProperty of sortBy.split(\".\")) {\r\n                    if (value) {\r\n                        value = value[sortByProperty];\r\n                    }\r\n                }\r\n            } else {\r\n                value = sortBy(value);\r\n            }\r\n\r\n            if (value && typeof value === \"string\" || value instanceof String) {\r\n                return value.toLowerCase();\r\n            }\r\n\r\n            return value;\r\n        };\r\n    }\r\n\r\n    private compare(left: any, right: any): number {\r\n        return left === right ? 0 : left == null || left > right ? 1 : -1;\r\n    }\r\n\r\n    private sorter<T>(sortBy: string | Function | (string | Function)[], sortOrder: string): (left: T, right: T) => number {\r\n        const order = sortOrder === \"desc\" ? -1 : 1;\r\n        if (Array.isArray(sortBy)) {\r\n            const iteratees = sortBy.map((entry: string | Function) => this.caseInsensitiveIteratee(entry));\r\n            return (left, right) => {\r\n                for (const iteratee of iteratees) {\r\n                    const comparison = this.compare(iteratee(left), iteratee(right)) * order;\r\n                    if (comparison !== 0) {\r\n                        return comparison;\r\n                    }\r\n                }\r\n                return 0;\r\n            };\r\n        } else {\r\n            const iteratee = this.caseInsensitiveIteratee(sortBy);\r\n            return (left, right) => this.compare(iteratee(left), iteratee(right)) * order;\r\n        }\r\n    }\r\n}\r\n","import {Component, Input, SimpleChange, OnChanges, Optional} from \"@angular/core\";\r\nimport {DataTable, PageEvent} from \"./DataTable\";\r\n\r\n@Component({\r\n    selector: \"mfPaginator\",\r\n    template: `<ng-content></ng-content>`\r\n})\r\nexport class Paginator implements OnChanges {\r\n\r\n    @Input(\"mfTable\") inputMfTable: DataTable;\r\n\r\n    private mfTable: DataTable;\r\n\r\n    public activePage: number;\r\n    public rowsOnPage: number;\r\n    public dataLength = 0;\r\n    public lastPage: number;\r\n\r\n    public constructor(@Optional() private injectMfTable: DataTable) {\r\n    }\r\n\r\n    public ngOnChanges(changes: {[key: string]: SimpleChange}): any {\r\n        this.mfTable = this.inputMfTable || this.injectMfTable;\r\n        this.onPageChangeSubscriber(this.mfTable.getPage());\r\n        this.mfTable.onPageChange.subscribe(this.onPageChangeSubscriber);\r\n    }\r\n\r\n    public setPage(pageNumber: number): void {\r\n        this.mfTable.setPage(pageNumber, this.rowsOnPage);\r\n    }\r\n\r\n    public setRowsOnPage(rowsOnPage: number): void {\r\n        this.mfTable.setPage(this.activePage, rowsOnPage);\r\n    }\r\n\r\n    private onPageChangeSubscriber = (event: PageEvent) => {\r\n        this.activePage = event.activePage;\r\n        this.rowsOnPage = event.rowsOnPage;\r\n        this.dataLength = event.dataLength;\r\n        this.lastPage = Math.ceil(this.dataLength / this.rowsOnPage);\r\n    }\r\n}\r\n","import {Component, Input, OnInit} from \"@angular/core\";\r\nimport {DataTable, SortEvent} from \"./DataTable\";\r\n\r\n@Component({\r\n    selector: \"mfDefaultSorter\",\r\n    template: `\r\n        <a style=\"cursor: pointer\" (click)=\"sort()\" class=\"text-nowrap\">\r\n            <ng-content></ng-content>\r\n            <span *ngIf=\"isSortedByMeAsc\" class=\"glyphicon glyphicon-triangle-top\" aria-hidden=\"true\"></span>\r\n            <span *ngIf=\"isSortedByMeDesc\" class=\"glyphicon glyphicon-triangle-bottom\" aria-hidden=\"true\"></span>\r\n        </a>`\r\n})\r\nexport class DefaultSorter implements OnInit {\r\n    @Input(\"by\") sortBy: string;\r\n\r\n    isSortedByMeAsc = false;\r\n    isSortedByMeDesc = false;\r\n\r\n    public constructor(private mfTable: DataTable) {\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.mfTable.onSortChange.subscribe((event: SortEvent) => {\r\n            // tslint:disable:triple-equals\r\n            this.isSortedByMeAsc = (event.sortBy == this.sortBy && event.sortOrder == \"asc\");\r\n            this.isSortedByMeDesc = (event.sortBy == this.sortBy && event.sortOrder == \"desc\");\r\n            // tslint:enable:triple-equals\r\n        });\r\n    }\r\n\r\n    sort() {\r\n        if (this.isSortedByMeAsc) {\r\n            this.mfTable.setSort(this.sortBy, \"desc\");\r\n        } else {\r\n            this.mfTable.setSort(this.sortBy, \"asc\");\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\n\r\nimport {DataTable} from \"./DataTable\";\r\nimport {DefaultSorter} from \"./DefaultSorter\";\r\nimport {Paginator} from \"./Paginator\";\r\nimport {BootstrapPaginator} from \"./BootstrapPaginator\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        DataTable,\r\n        DefaultSorter,\r\n        Paginator,\r\n        BootstrapPaginator\r\n    ],\r\n    exports: [\r\n        DataTable,\r\n        DefaultSorter,\r\n        Paginator,\r\n        BootstrapPaginator\r\n    ]\r\n})\r\nexport class DataTableModule {\r\n\r\n}\r\n"]}