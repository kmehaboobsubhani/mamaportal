import { Component, Input } from "@angular/core";
import { DataTable } from "./DataTable";
export class DefaultSorter {
    constructor(mfTable) {
        this.mfTable = mfTable;
        this.isSortedByMeAsc = false;
        this.isSortedByMeDesc = false;
    }
    ngOnInit() {
        this.mfTable.onSortChange.subscribe((event) => {
            // tslint:disable:triple-equals
            this.isSortedByMeAsc = (event.sortBy == this.sortBy && event.sortOrder == "asc");
            this.isSortedByMeDesc = (event.sortBy == this.sortBy && event.sortOrder == "desc");
            // tslint:enable:triple-equals
        });
    }
    sort() {
        if (this.isSortedByMeAsc) {
            this.mfTable.setSort(this.sortBy, "desc");
        }
        else {
            this.mfTable.setSort(this.sortBy, "asc");
        }
    }
}
DefaultSorter.decorators = [
    { type: Component, args: [{
                selector: "mfDefaultSorter",
                template: `
        <a style="cursor: pointer" (click)="sort()" class="text-nowrap">
            <ng-content></ng-content>
            <span *ngIf="isSortedByMeAsc" class="glyphicon glyphicon-triangle-top" aria-hidden="true"></span>
            <span *ngIf="isSortedByMeDesc" class="glyphicon glyphicon-triangle-bottom" aria-hidden="true"></span>
        </a>`
            },] }
];
DefaultSorter.ctorParameters = () => [
    { type: DataTable }
];
DefaultSorter.propDecorators = {
    sortBy: [{ type: Input, args: ["by",] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVmYXVsdFNvcnRlci5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1kYXRhdGFibGUvc3JjLyIsInNvdXJjZXMiOlsibGliL0RlZmF1bHRTb3J0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFDdkQsT0FBTyxFQUFDLFNBQVMsRUFBWSxNQUFNLGFBQWEsQ0FBQztBQVdqRCxNQUFNLE9BQU8sYUFBYTtJQU10QixZQUEyQixPQUFrQjtRQUFsQixZQUFPLEdBQVAsT0FBTyxDQUFXO1FBSDdDLG9CQUFlLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLHFCQUFnQixHQUFHLEtBQUssQ0FBQztJQUd6QixDQUFDO0lBRU0sUUFBUTtRQUNYLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQWdCLEVBQUUsRUFBRTtZQUNyRCwrQkFBK0I7WUFDL0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxLQUFLLENBQUMsU0FBUyxJQUFJLEtBQUssQ0FBQyxDQUFDO1lBQ2pGLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxLQUFLLENBQUMsU0FBUyxJQUFJLE1BQU0sQ0FBQyxDQUFDO1lBQ25GLDhCQUE4QjtRQUNsQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxJQUFJO1FBQ0EsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3RCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7U0FDN0M7YUFBTTtZQUNILElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDNUM7SUFDTCxDQUFDOzs7WUFqQ0osU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLFFBQVEsRUFBRTs7Ozs7YUFLRDthQUNaOzs7WUFWTyxTQUFTOzs7cUJBWVosS0FBSyxTQUFDLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uSW5pdH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHtEYXRhVGFibGUsIFNvcnRFdmVudH0gZnJvbSBcIi4vRGF0YVRhYmxlXCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiBcIm1mRGVmYXVsdFNvcnRlclwiLFxyXG4gICAgdGVtcGxhdGU6IGBcclxuICAgICAgICA8YSBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiIChjbGljayk9XCJzb3J0KClcIiBjbGFzcz1cInRleHQtbm93cmFwXCI+XHJcbiAgICAgICAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICAgICAgICAgICAgPHNwYW4gKm5nSWY9XCJpc1NvcnRlZEJ5TWVBc2NcIiBjbGFzcz1cImdseXBoaWNvbiBnbHlwaGljb24tdHJpYW5nbGUtdG9wXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9zcGFuPlxyXG4gICAgICAgICAgICA8c3BhbiAqbmdJZj1cImlzU29ydGVkQnlNZURlc2NcIiBjbGFzcz1cImdseXBoaWNvbiBnbHlwaGljb24tdHJpYW5nbGUtYm90dG9tXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9zcGFuPlxyXG4gICAgICAgIDwvYT5gXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEZWZhdWx0U29ydGVyIGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIEBJbnB1dChcImJ5XCIpIHNvcnRCeTogc3RyaW5nO1xyXG5cclxuICAgIGlzU29ydGVkQnlNZUFzYyA9IGZhbHNlO1xyXG4gICAgaXNTb3J0ZWRCeU1lRGVzYyA9IGZhbHNlO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcihwcml2YXRlIG1mVGFibGU6IERhdGFUYWJsZSkge1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm1mVGFibGUub25Tb3J0Q2hhbmdlLnN1YnNjcmliZSgoZXZlbnQ6IFNvcnRFdmVudCkgPT4ge1xyXG4gICAgICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZTp0cmlwbGUtZXF1YWxzXHJcbiAgICAgICAgICAgIHRoaXMuaXNTb3J0ZWRCeU1lQXNjID0gKGV2ZW50LnNvcnRCeSA9PSB0aGlzLnNvcnRCeSAmJiBldmVudC5zb3J0T3JkZXIgPT0gXCJhc2NcIik7XHJcbiAgICAgICAgICAgIHRoaXMuaXNTb3J0ZWRCeU1lRGVzYyA9IChldmVudC5zb3J0QnkgPT0gdGhpcy5zb3J0QnkgJiYgZXZlbnQuc29ydE9yZGVyID09IFwiZGVzY1wiKTtcclxuICAgICAgICAgICAgLy8gdHNsaW50OmVuYWJsZTp0cmlwbGUtZXF1YWxzXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgc29ydCgpIHtcclxuICAgICAgICBpZiAodGhpcy5pc1NvcnRlZEJ5TWVBc2MpIHtcclxuICAgICAgICAgICAgdGhpcy5tZlRhYmxlLnNldFNvcnQodGhpcy5zb3J0QnksIFwiZGVzY1wiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLm1mVGFibGUuc2V0U29ydCh0aGlzLnNvcnRCeSwgXCJhc2NcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==