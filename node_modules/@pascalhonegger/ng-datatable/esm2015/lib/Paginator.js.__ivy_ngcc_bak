import { Component, Input, Optional } from "@angular/core";
import { DataTable } from "./DataTable";
export class Paginator {
    constructor(injectMfTable) {
        this.injectMfTable = injectMfTable;
        this.dataLength = 0;
        this.onPageChangeSubscriber = (event) => {
            this.activePage = event.activePage;
            this.rowsOnPage = event.rowsOnPage;
            this.dataLength = event.dataLength;
            this.lastPage = Math.ceil(this.dataLength / this.rowsOnPage);
        };
    }
    ngOnChanges(changes) {
        this.mfTable = this.inputMfTable || this.injectMfTable;
        this.onPageChangeSubscriber(this.mfTable.getPage());
        this.mfTable.onPageChange.subscribe(this.onPageChangeSubscriber);
    }
    setPage(pageNumber) {
        this.mfTable.setPage(pageNumber, this.rowsOnPage);
    }
    setRowsOnPage(rowsOnPage) {
        this.mfTable.setPage(this.activePage, rowsOnPage);
    }
}
Paginator.decorators = [
    { type: Component, args: [{
                selector: "mfPaginator",
                template: `<ng-content></ng-content>`
            },] }
];
Paginator.ctorParameters = () => [
    { type: DataTable, decorators: [{ type: Optional }] }
];
Paginator.propDecorators = {
    inputMfTable: [{ type: Input, args: ["mfTable",] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFnaW5hdG9yLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWRhdGF0YWJsZS9zcmMvIiwic291cmNlcyI6WyJsaWIvUGFnaW5hdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUEyQixRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDbEYsT0FBTyxFQUFDLFNBQVMsRUFBWSxNQUFNLGFBQWEsQ0FBQztBQU1qRCxNQUFNLE9BQU8sU0FBUztJQVdsQixZQUF1QyxhQUF3QjtRQUF4QixrQkFBYSxHQUFiLGFBQWEsQ0FBVztRQUh4RCxlQUFVLEdBQUcsQ0FBQyxDQUFDO1FBb0JkLDJCQUFzQixHQUFHLENBQUMsS0FBZ0IsRUFBRSxFQUFFO1lBQ2xELElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQztZQUNuQyxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUM7WUFDbkMsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDO1lBQ25DLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNqRSxDQUFDLENBQUE7SUFyQkQsQ0FBQztJQUVNLFdBQVcsQ0FBQyxPQUFzQztRQUNyRCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUN2RCxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ3BELElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBRU0sT0FBTyxDQUFDLFVBQWtCO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVNLGFBQWEsQ0FBQyxVQUFrQjtRQUNuQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ3RELENBQUM7OztZQTlCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGFBQWE7Z0JBQ3ZCLFFBQVEsRUFBRSwyQkFBMkI7YUFDeEM7OztZQUxPLFNBQVMsdUJBaUJPLFFBQVE7OzsyQkFUM0IsS0FBSyxTQUFDLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIFNpbXBsZUNoYW5nZSwgT25DaGFuZ2VzLCBPcHRpb25hbH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHtEYXRhVGFibGUsIFBhZ2VFdmVudH0gZnJvbSBcIi4vRGF0YVRhYmxlXCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiBcIm1mUGFnaW5hdG9yXCIsXHJcbiAgICB0ZW1wbGF0ZTogYDxuZy1jb250ZW50PjwvbmctY29udGVudD5gXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQYWdpbmF0b3IgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xyXG5cclxuICAgIEBJbnB1dChcIm1mVGFibGVcIikgaW5wdXRNZlRhYmxlOiBEYXRhVGFibGU7XHJcblxyXG4gICAgcHJpdmF0ZSBtZlRhYmxlOiBEYXRhVGFibGU7XHJcblxyXG4gICAgcHVibGljIGFjdGl2ZVBhZ2U6IG51bWJlcjtcclxuICAgIHB1YmxpYyByb3dzT25QYWdlOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgZGF0YUxlbmd0aCA9IDA7XHJcbiAgICBwdWJsaWMgbGFzdFBhZ2U6IG51bWJlcjtcclxuXHJcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgcHJpdmF0ZSBpbmplY3RNZlRhYmxlOiBEYXRhVGFibGUpIHtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgbmdPbkNoYW5nZXMoY2hhbmdlczoge1trZXk6IHN0cmluZ106IFNpbXBsZUNoYW5nZX0pOiBhbnkge1xyXG4gICAgICAgIHRoaXMubWZUYWJsZSA9IHRoaXMuaW5wdXRNZlRhYmxlIHx8IHRoaXMuaW5qZWN0TWZUYWJsZTtcclxuICAgICAgICB0aGlzLm9uUGFnZUNoYW5nZVN1YnNjcmliZXIodGhpcy5tZlRhYmxlLmdldFBhZ2UoKSk7XHJcbiAgICAgICAgdGhpcy5tZlRhYmxlLm9uUGFnZUNoYW5nZS5zdWJzY3JpYmUodGhpcy5vblBhZ2VDaGFuZ2VTdWJzY3JpYmVyKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0UGFnZShwYWdlTnVtYmVyOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm1mVGFibGUuc2V0UGFnZShwYWdlTnVtYmVyLCB0aGlzLnJvd3NPblBhZ2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRSb3dzT25QYWdlKHJvd3NPblBhZ2U6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMubWZUYWJsZS5zZXRQYWdlKHRoaXMuYWN0aXZlUGFnZSwgcm93c09uUGFnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvblBhZ2VDaGFuZ2VTdWJzY3JpYmVyID0gKGV2ZW50OiBQYWdlRXZlbnQpID0+IHtcclxuICAgICAgICB0aGlzLmFjdGl2ZVBhZ2UgPSBldmVudC5hY3RpdmVQYWdlO1xyXG4gICAgICAgIHRoaXMucm93c09uUGFnZSA9IGV2ZW50LnJvd3NPblBhZ2U7XHJcbiAgICAgICAgdGhpcy5kYXRhTGVuZ3RoID0gZXZlbnQuZGF0YUxlbmd0aDtcclxuICAgICAgICB0aGlzLmxhc3RQYWdlID0gTWF0aC5jZWlsKHRoaXMuZGF0YUxlbmd0aCAvIHRoaXMucm93c09uUGFnZSk7XHJcbiAgICB9XHJcbn1cclxuIl19