import { Component, Input } from "@angular/core";
export class BootstrapPaginator {
    constructor() {
        this.rowsOnPageSet = [];
        this.minRowsOnPage = 0;
    }
    ngOnChanges(changes) {
        if (changes.rowsOnPageSet) {
            this.minRowsOnPage = this.rowsOnPageSet.reduce((previous, current) => current < previous ? current : previous);
        }
    }
}
BootstrapPaginator.decorators = [
    { type: Component, args: [{
                selector: "mfBootstrapPaginator",
                template: `
    <mfPaginator #p [mfTable]="mfTable">
        <ul class="pagination" *ngIf="p.dataLength > p.rowsOnPage">
            <li class="page-item" [class.disabled]="p.activePage <= 1" (click)="p.setPage(1)">
                <a class="page-link" style="cursor: pointer">&laquo;</a>
            </li>
            <li class="page-item" *ngIf="p.activePage > 4 && p.activePage + 1 > p.lastPage" (click)="p.setPage(p.activePage - 4)">
                <a class="page-link" style="cursor: pointer">{{p.activePage-4}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage > 3 && p.activePage + 2 > p.lastPage" (click)="p.setPage(p.activePage - 3)">
                <a class="page-link" style="cursor: pointer">{{p.activePage-3}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage > 2" (click)="p.setPage(p.activePage - 2)">
                <a class="page-link" style="cursor: pointer">{{p.activePage-2}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage > 1" (click)="p.setPage(p.activePage - 1)">
                <a class="page-link" style="cursor: pointer">{{p.activePage-1}}</a>
            </li>
            <li class="page-item active">
                <a class="page-link" style="cursor: pointer">{{p.activePage}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage + 1 <= p.lastPage" (click)="p.setPage(p.activePage + 1)">
                <a class="page-link" style="cursor: pointer">{{p.activePage+1}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage + 2 <= p.lastPage" (click)="p.setPage(p.activePage + 2)">
                <a class="page-link" style="cursor: pointer">{{p.activePage+2}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage + 3 <= p.lastPage && p.activePage < 3" (click)="p.setPage(p.activePage + 3)">
                <a class="page-link" style="cursor: pointer">{{p.activePage+3}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage + 4 <= p.lastPage && p.activePage < 2" (click)="p.setPage(p.activePage + 4)">
                <a class="page-link" style="cursor: pointer">{{p.activePage+4}}</a>
            </li>
            <li class="page-item" [class.disabled]="p.activePage >= p.lastPage" (click)="p.setPage(p.lastPage)">
                <a class="page-link" style="cursor: pointer">&raquo;</a>
            </li>
        </ul>
        <ul class="pagination pull-right float-sm-right" *ngIf="p.dataLength > minRowsOnPage">
            <li class="page-item" *ngFor="let rows of rowsOnPageSet" [class.active]="p.rowsOnPage===rows" (click)="p.setRowsOnPage(rows)">
                <a class="page-link" style="cursor: pointer">{{rows}}</a>
            </li>
        </ul>
    </mfPaginator>
    `
            },] }
];
BootstrapPaginator.propDecorators = {
    rowsOnPageSet: [{ type: Input, args: ["rowsOnPageSet",] }],
    mfTable: [{ type: Input, args: ["mfTable",] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm9vdHN0cmFwUGFnaW5hdG9yLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWRhdGF0YWJsZS9zcmMvIiwic291cmNlcyI6WyJsaWIvQm9vdHN0cmFwUGFnaW5hdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBa0QxRCxNQUFNLE9BQU8sa0JBQWtCO0lBL0MvQjtRQWdENEIsa0JBQWEsR0FBRyxFQUFFLENBQUM7UUFHM0Msa0JBQWEsR0FBRyxDQUFDLENBQUM7SUFPdEIsQ0FBQztJQUxHLFdBQVcsQ0FBQyxPQUFZO1FBQ3BCLElBQUksT0FBTyxDQUFDLGFBQWEsRUFBRTtZQUN2QixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUNsSDtJQUNMLENBQUM7OztZQXpESixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHNCQUFzQjtnQkFDaEMsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBMkNUO2FBQ0o7Ozs0QkFFSSxLQUFLLFNBQUMsZUFBZTtzQkFDckIsS0FBSyxTQUFDLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlc30gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHtEYXRhVGFibGV9IGZyb20gXCIuL0RhdGFUYWJsZVwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogXCJtZkJvb3RzdHJhcFBhZ2luYXRvclwiLFxyXG4gICAgdGVtcGxhdGU6IGBcclxuICAgIDxtZlBhZ2luYXRvciAjcCBbbWZUYWJsZV09XCJtZlRhYmxlXCI+XHJcbiAgICAgICAgPHVsIGNsYXNzPVwicGFnaW5hdGlvblwiICpuZ0lmPVwicC5kYXRhTGVuZ3RoID4gcC5yb3dzT25QYWdlXCI+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiIFtjbGFzcy5kaXNhYmxlZF09XCJwLmFjdGl2ZVBhZ2UgPD0gMVwiIChjbGljayk9XCJwLnNldFBhZ2UoMSlcIj5cclxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwicGFnZS1saW5rXCIgc3R5bGU9XCJjdXJzb3I6IHBvaW50ZXJcIj4mbGFxdW87PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSA+IDQgJiYgcC5hY3RpdmVQYWdlICsgMSA+IHAubGFzdFBhZ2VcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSAtIDQpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UtNH19PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSA+IDMgJiYgcC5hY3RpdmVQYWdlICsgMiA+IHAubGFzdFBhZ2VcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSAtIDMpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UtM319PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSA+IDJcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSAtIDIpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UtMn19PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSA+IDFcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSAtIDEpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UtMX19PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW0gYWN0aXZlXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2V9fTwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCIgKm5nSWY9XCJwLmFjdGl2ZVBhZ2UgKyAxIDw9IHAubGFzdFBhZ2VcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSArIDEpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UrMX19PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSArIDIgPD0gcC5sYXN0UGFnZVwiIChjbGljayk9XCJwLnNldFBhZ2UocC5hY3RpdmVQYWdlICsgMilcIj5cclxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwicGFnZS1saW5rXCIgc3R5bGU9XCJjdXJzb3I6IHBvaW50ZXJcIj57e3AuYWN0aXZlUGFnZSsyfX08L2E+XHJcbiAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiICpuZ0lmPVwicC5hY3RpdmVQYWdlICsgMyA8PSBwLmxhc3RQYWdlICYmIHAuYWN0aXZlUGFnZSA8IDNcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSArIDMpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UrM319PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSArIDQgPD0gcC5sYXN0UGFnZSAmJiBwLmFjdGl2ZVBhZ2UgPCAyXCIgKGNsaWNrKT1cInAuc2V0UGFnZShwLmFjdGl2ZVBhZ2UgKyA0KVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiPnt7cC5hY3RpdmVQYWdlKzR9fTwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCIgW2NsYXNzLmRpc2FibGVkXT1cInAuYWN0aXZlUGFnZSA+PSBwLmxhc3RQYWdlXCIgKGNsaWNrKT1cInAuc2V0UGFnZShwLmxhc3RQYWdlKVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiPiZyYXF1bzs8L2E+XHJcbiAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgPC91bD5cclxuICAgICAgICA8dWwgY2xhc3M9XCJwYWdpbmF0aW9uIHB1bGwtcmlnaHQgZmxvYXQtc20tcmlnaHRcIiAqbmdJZj1cInAuZGF0YUxlbmd0aCA+IG1pblJvd3NPblBhZ2VcIj5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCIgKm5nRm9yPVwibGV0IHJvd3Mgb2Ygcm93c09uUGFnZVNldFwiIFtjbGFzcy5hY3RpdmVdPVwicC5yb3dzT25QYWdlPT09cm93c1wiIChjbGljayk9XCJwLnNldFJvd3NPblBhZ2Uocm93cylcIj5cclxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwicGFnZS1saW5rXCIgc3R5bGU9XCJjdXJzb3I6IHBvaW50ZXJcIj57e3Jvd3N9fTwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICA8L3VsPlxyXG4gICAgPC9tZlBhZ2luYXRvcj5cclxuICAgIGBcclxufSlcclxuZXhwb3J0IGNsYXNzIEJvb3RzdHJhcFBhZ2luYXRvciBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XHJcbiAgICBASW5wdXQoXCJyb3dzT25QYWdlU2V0XCIpIHJvd3NPblBhZ2VTZXQgPSBbXTtcclxuICAgIEBJbnB1dChcIm1mVGFibGVcIikgbWZUYWJsZTogRGF0YVRhYmxlO1xyXG5cclxuICAgIG1pblJvd3NPblBhZ2UgPSAwO1xyXG5cclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IGFueSk6IGFueSB7XHJcbiAgICAgICAgaWYgKGNoYW5nZXMucm93c09uUGFnZVNldCkge1xyXG4gICAgICAgICAgICB0aGlzLm1pblJvd3NPblBhZ2UgPSB0aGlzLnJvd3NPblBhZ2VTZXQucmVkdWNlKChwcmV2aW91cywgY3VycmVudCkgPT4gY3VycmVudCA8IHByZXZpb3VzID8gY3VycmVudCA6IHByZXZpb3VzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19