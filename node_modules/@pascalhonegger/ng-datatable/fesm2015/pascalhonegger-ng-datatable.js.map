{"version":3,"file":"pascalhonegger-ng-datatable.js","sources":["../../../projects/ng-datatable/src/lib/BootstrapPaginator.ts","../../../projects/ng-datatable/src/lib/DataTable.ts","../../../projects/ng-datatable/src/lib/Paginator.ts","../../../projects/ng-datatable/src/lib/DefaultSorter.ts","../../../projects/ng-datatable/src/lib/DataTableModule.ts","../../../../projects/ng-datatable/src/public-api.ts","../../../../projects/ng-datatable/src/pascalhonegger-ng-datatable.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, OnChanges} from \"@angular/core\";\r\nimport {DataTable} from \"./DataTable\";\r\n\r\n@Component({\r\n    selector: \"mfBootstrapPaginator\",\r\n    template: `\r\n    <mfPaginator #p [mfTable]=\"mfTable\">\r\n        <ul class=\"pagination\" *ngIf=\"p.dataLength > p.rowsOnPage\">\r\n            <li class=\"page-item\" [class.disabled]=\"p.activePage <= 1\" (click)=\"p.setPage(1)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">&laquo;</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage > 4 && p.activePage + 1 > p.lastPage\" (click)=\"p.setPage(p.activePage - 4)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage-4}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage > 3 && p.activePage + 2 > p.lastPage\" (click)=\"p.setPage(p.activePage - 3)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage-3}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage > 2\" (click)=\"p.setPage(p.activePage - 2)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage-2}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage > 1\" (click)=\"p.setPage(p.activePage - 1)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage-1}}</a>\r\n            </li>\r\n            <li class=\"page-item active\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage + 1 <= p.lastPage\" (click)=\"p.setPage(p.activePage + 1)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage+1}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage + 2 <= p.lastPage\" (click)=\"p.setPage(p.activePage + 2)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage+2}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage + 3 <= p.lastPage && p.activePage < 3\" (click)=\"p.setPage(p.activePage + 3)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage+3}}</a>\r\n            </li>\r\n            <li class=\"page-item\" *ngIf=\"p.activePage + 4 <= p.lastPage && p.activePage < 2\" (click)=\"p.setPage(p.activePage + 4)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage+4}}</a>\r\n            </li>\r\n            <li class=\"page-item\" [class.disabled]=\"p.activePage >= p.lastPage\" (click)=\"p.setPage(p.lastPage)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">&raquo;</a>\r\n            </li>\r\n        </ul>\r\n        <ul class=\"pagination pull-right float-sm-right\" *ngIf=\"p.dataLength > minRowsOnPage\">\r\n            <li class=\"page-item\" *ngFor=\"let rows of rowsOnPageSet\" [class.active]=\"p.rowsOnPage===rows\" (click)=\"p.setRowsOnPage(rows)\">\r\n                <a class=\"page-link\" style=\"cursor: pointer\">{{rows}}</a>\r\n            </li>\r\n        </ul>\r\n    </mfPaginator>\r\n    `\r\n})\r\nexport class BootstrapPaginator implements OnChanges {\r\n    @Input(\"rowsOnPageSet\") rowsOnPageSet = [];\r\n    @Input(\"mfTable\") mfTable: DataTable;\r\n\r\n    minRowsOnPage = 0;\r\n\r\n    ngOnChanges(changes: any): any {\r\n        if (changes.rowsOnPageSet) {\r\n            this.minRowsOnPage = this.rowsOnPageSet.reduce((previous, current) => current < previous ? current : previous);\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Directive, Input, EventEmitter, SimpleChange, OnChanges, DoCheck, IterableDiffers,\r\n    IterableDiffer, Output\r\n} from \"@angular/core\";\r\nimport { ReplaySubject } from \"rxjs\";\r\n\r\nexport interface SortEvent {\r\n    sortBy: string | string[] | Function | Function[];\r\n    sortOrder: string;\r\n}\r\n\r\nexport interface PageEvent {\r\n    activePage: number;\r\n    rowsOnPage: number;\r\n    dataLength: number;\r\n}\r\n\r\nexport interface DataEvent {\r\n    length: number;\r\n}\r\n\r\n@Directive({\r\n    selector: \"table[mfData]\",\r\n    exportAs: \"mfDataTable\"\r\n})\r\nexport class DataTable implements OnChanges, DoCheck {\r\n\r\n    private diff: IterableDiffer<any>;\r\n    @Input(\"mfData\") public inputData: any[] = [];\r\n\r\n    @Input(\"mfSortBy\") public sortBy: string | string[] | Function | Function[] = \"\";\r\n    @Input(\"mfSortOrder\") public sortOrder: \"asc\" | \"desc\" = \"asc\";\r\n    @Output(\"mfSortByChange\") public sortByChange = new EventEmitter<string | string[]>();\r\n    @Output(\"mfSortOrderChange\") public sortOrderChange = new EventEmitter<string>();\r\n\r\n    @Input(\"mfRowsOnPage\") public rowsOnPage = 1000;\r\n    @Input(\"mfActivePage\") public activePage = 1;\r\n\r\n    private mustRecalculateData = false;\r\n\r\n    public data: any[];\r\n\r\n    public onSortChange = new ReplaySubject<SortEvent>(1);\r\n    public onPageChange = new EventEmitter<PageEvent>();\r\n\r\n    public constructor(private differs: IterableDiffers) {\r\n        this.diff = differs.find([]).create(null);\r\n    }\r\n\r\n    public getSort(): SortEvent {\r\n        return { sortBy: this.sortBy, sortOrder: this.sortOrder };\r\n    }\r\n\r\n    public setSort(sortBy: string | string[], sortOrder: \"asc\" | \"desc\"): void {\r\n        if (this.sortBy !== sortBy || this.sortOrder !== sortOrder) {\r\n            this.sortBy = sortBy;\r\n            this.sortOrder = [\"asc\", \"desc\"].indexOf(sortOrder) >= 0 ? sortOrder : \"asc\";\r\n            this.mustRecalculateData = true;\r\n            this.onSortChange.next({ sortBy: this.sortBy, sortOrder: this.sortOrder });\r\n            this.sortByChange.emit(this.sortBy);\r\n            this.sortOrderChange.emit(this.sortOrder);\r\n        }\r\n    }\r\n\r\n    public getPage(): PageEvent {\r\n        return { activePage: this.activePage, rowsOnPage: this.rowsOnPage, dataLength: this.inputData.length };\r\n    }\r\n\r\n    public setPage(activePage: number, rowsOnPage: number): void {\r\n        if (this.rowsOnPage !== rowsOnPage || this.activePage !== activePage) {\r\n            this.activePage = this.activePage !== activePage ? activePage : this.calculateNewActivePage(this.rowsOnPage, rowsOnPage);\r\n            this.rowsOnPage = rowsOnPage;\r\n            this.mustRecalculateData = true;\r\n            this.onPageChange.emit({\r\n                activePage: this.activePage,\r\n                rowsOnPage: this.rowsOnPage,\r\n                dataLength: this.inputData ? this.inputData.length : 0\r\n            });\r\n        }\r\n    }\r\n\r\n    private calculateNewActivePage(previousRowsOnPage: number, currentRowsOnPage: number): number {\r\n        const firstRowOnPage = (this.activePage - 1) * previousRowsOnPage + 1;\r\n        const newActivePage = Math.ceil(firstRowOnPage / currentRowsOnPage);\r\n        return newActivePage;\r\n    }\r\n\r\n    private recalculatePage() {\r\n        const lastPage = Math.ceil(this.inputData.length / this.rowsOnPage);\r\n        this.activePage = lastPage < this.activePage ? lastPage : this.activePage;\r\n        this.activePage = this.activePage || 1;\r\n\r\n        this.onPageChange.emit({\r\n            activePage: this.activePage,\r\n            rowsOnPage: this.rowsOnPage,\r\n            dataLength: this.inputData.length\r\n        });\r\n    }\r\n\r\n    public ngOnChanges(changes: { [key: string]: SimpleChange }): any {\r\n        if (changes.rowsOnPage) {\r\n            this.rowsOnPage = changes.rowsOnPage.previousValue;\r\n            this.setPage(this.activePage, changes.rowsOnPage.currentValue);\r\n            this.mustRecalculateData = true;\r\n        }\r\n        if (changes.sortBy || changes.sortOrder) {\r\n            if ([\"asc\", \"desc\"].indexOf(this.sortOrder) < 0) {\r\n                console.warn(\"ng-datatable: value for input mfSortOrder must be one of ['asc', 'desc'], but is:\", this.sortOrder);\r\n                this.sortOrder = \"asc\";\r\n            }\r\n            if (this.sortBy) {\r\n                this.onSortChange.next({ sortBy: this.sortBy, sortOrder: this.sortOrder });\r\n            }\r\n            this.mustRecalculateData = true;\r\n        }\r\n        if (changes.inputData) {\r\n            this.inputData = changes.inputData.currentValue || [];\r\n            this.recalculatePage();\r\n            this.mustRecalculateData = true;\r\n        }\r\n    }\r\n\r\n    public ngDoCheck(): any {\r\n        const changes = this.diff.diff(this.inputData);\r\n        if (changes) {\r\n            this.recalculatePage();\r\n            this.mustRecalculateData = true;\r\n        }\r\n        if (this.mustRecalculateData) {\r\n            this.fillData();\r\n            this.mustRecalculateData = false;\r\n        }\r\n    }\r\n\r\n    private fillData(): void {\r\n        // this.activePage = this.activePage;\r\n        // this.rowsOnPage = this.rowsOnPage;\r\n\r\n        const offset = (this.activePage - 1) * this.rowsOnPage;\r\n        // let data = this.inputData;\r\n        // const sortBy = this.sortBy;\r\n        // if (typeof sortBy === \"string\" || sortBy instanceof String) {\r\n        //     data = orderBy(data, this.caseInsensitiveIteratee(sortBy as string), [this.sortOrder]);\r\n        // } else {\r\n        //     data = orderBy(data, sortBy, [this.sortOrder]);\r\n        // }\r\n        // data = slice(data, offset, offset + this.rowsOnPage);\r\n\r\n        this.data = [...this.inputData]\r\n            .sort(this.sorter(this.sortBy, this.sortOrder))\r\n            .slice(offset, offset + this.rowsOnPage);\r\n    }\r\n\r\n    private caseInsensitiveIteratee(sortBy: string | Function) {\r\n        return (row: any): any => {\r\n            let value = row;\r\n            if (typeof sortBy === \"string\" || sortBy instanceof String) {\r\n                for (const sortByProperty of sortBy.split(\".\")) {\r\n                    if (value) {\r\n                        value = value[sortByProperty];\r\n                    }\r\n                }\r\n            } else {\r\n                value = sortBy(value);\r\n            }\r\n\r\n            if (value && typeof value === \"string\" || value instanceof String) {\r\n                return value.toLowerCase();\r\n            }\r\n\r\n            return value;\r\n        };\r\n    }\r\n\r\n    private compare(left: any, right: any): number {\r\n        return left === right ? 0 : left == null || left > right ? 1 : -1;\r\n    }\r\n\r\n    private sorter<T>(sortBy: string | Function | (string | Function)[], sortOrder: string): (left: T, right: T) => number {\r\n        const order = sortOrder === \"desc\" ? -1 : 1;\r\n        if (Array.isArray(sortBy)) {\r\n            const iteratees = sortBy.map((entry: string | Function) => this.caseInsensitiveIteratee(entry));\r\n            return (left, right) => {\r\n                for (const iteratee of iteratees) {\r\n                    const comparison = this.compare(iteratee(left), iteratee(right)) * order;\r\n                    if (comparison !== 0) {\r\n                        return comparison;\r\n                    }\r\n                }\r\n                return 0;\r\n            };\r\n        } else {\r\n            const iteratee = this.caseInsensitiveIteratee(sortBy);\r\n            return (left, right) => this.compare(iteratee(left), iteratee(right)) * order;\r\n        }\r\n    }\r\n}\r\n","import {Component, Input, SimpleChange, OnChanges, Optional} from \"@angular/core\";\r\nimport {DataTable, PageEvent} from \"./DataTable\";\r\n\r\n@Component({\r\n    selector: \"mfPaginator\",\r\n    template: `<ng-content></ng-content>`\r\n})\r\nexport class Paginator implements OnChanges {\r\n\r\n    @Input(\"mfTable\") inputMfTable: DataTable;\r\n\r\n    private mfTable: DataTable;\r\n\r\n    public activePage: number;\r\n    public rowsOnPage: number;\r\n    public dataLength = 0;\r\n    public lastPage: number;\r\n\r\n    public constructor(@Optional() private injectMfTable: DataTable) {\r\n    }\r\n\r\n    public ngOnChanges(changes: {[key: string]: SimpleChange}): any {\r\n        this.mfTable = this.inputMfTable || this.injectMfTable;\r\n        this.onPageChangeSubscriber(this.mfTable.getPage());\r\n        this.mfTable.onPageChange.subscribe(this.onPageChangeSubscriber);\r\n    }\r\n\r\n    public setPage(pageNumber: number): void {\r\n        this.mfTable.setPage(pageNumber, this.rowsOnPage);\r\n    }\r\n\r\n    public setRowsOnPage(rowsOnPage: number): void {\r\n        this.mfTable.setPage(this.activePage, rowsOnPage);\r\n    }\r\n\r\n    private onPageChangeSubscriber = (event: PageEvent) => {\r\n        this.activePage = event.activePage;\r\n        this.rowsOnPage = event.rowsOnPage;\r\n        this.dataLength = event.dataLength;\r\n        this.lastPage = Math.ceil(this.dataLength / this.rowsOnPage);\r\n    }\r\n}\r\n","import {Component, Input, OnInit} from \"@angular/core\";\r\nimport {DataTable, SortEvent} from \"./DataTable\";\r\n\r\n@Component({\r\n    selector: \"mfDefaultSorter\",\r\n    template: `\r\n        <a style=\"cursor: pointer\" (click)=\"sort()\" class=\"text-nowrap\">\r\n            <ng-content></ng-content>\r\n            <span *ngIf=\"isSortedByMeAsc\" class=\"glyphicon glyphicon-triangle-top\" aria-hidden=\"true\"></span>\r\n            <span *ngIf=\"isSortedByMeDesc\" class=\"glyphicon glyphicon-triangle-bottom\" aria-hidden=\"true\"></span>\r\n        </a>`\r\n})\r\nexport class DefaultSorter implements OnInit {\r\n    @Input(\"by\") sortBy: string;\r\n\r\n    isSortedByMeAsc = false;\r\n    isSortedByMeDesc = false;\r\n\r\n    public constructor(private mfTable: DataTable) {\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.mfTable.onSortChange.subscribe((event: SortEvent) => {\r\n            // tslint:disable:triple-equals\r\n            this.isSortedByMeAsc = (event.sortBy == this.sortBy && event.sortOrder == \"asc\");\r\n            this.isSortedByMeDesc = (event.sortBy == this.sortBy && event.sortOrder == \"desc\");\r\n            // tslint:enable:triple-equals\r\n        });\r\n    }\r\n\r\n    sort() {\r\n        if (this.isSortedByMeAsc) {\r\n            this.mfTable.setSort(this.sortBy, \"desc\");\r\n        } else {\r\n            this.mfTable.setSort(this.sortBy, \"asc\");\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\n\r\nimport {DataTable} from \"./DataTable\";\r\nimport {DefaultSorter} from \"./DefaultSorter\";\r\nimport {Paginator} from \"./Paginator\";\r\nimport {BootstrapPaginator} from \"./BootstrapPaginator\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        DataTable,\r\n        DefaultSorter,\r\n        Paginator,\r\n        BootstrapPaginator\r\n    ],\r\n    exports: [\r\n        DataTable,\r\n        DefaultSorter,\r\n        Paginator,\r\n        BootstrapPaginator\r\n    ]\r\n})\r\nexport class DataTableModule {\r\n\r\n}\r\n","/*\n * Public API Surface of ng-datatable\n */\n\nexport * from \"./lib/BootstrapPaginator\";\nexport * from \"./lib/Paginator\";\nexport * from \"./lib/DefaultSorter\";\nexport * from \"./lib/DataTable\";\nexport * from \"./lib/DataTableModule\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}