(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),require('@angular/animations'),require('@angular/platform-browser'),require('@angular/router'),require('tslib'),require('ng2-charts'),require('@angular/cdk/layout'),require('@angular/cdk/platform'),exports, require('@angular/core'), require('@angular/common'), require('classnames'), require('@angular/animations'), require('@angular/platform-browser'), require('@angular/router'), require('rxjs'), require('rxjs/operators'), require('@angular/forms'), require('ng2-charts'), require('@angular/cdk/layout'), require('@angular/cdk/platform'), require('text-mask-core/dist/textMaskCore')) :
    typeof define === 'function' && define.amd ? define('@coreui/angular', ['@angular/core','@angular/common','@angular/animations','@angular/platform-browser','@angular/router','tslib','ng2-charts','@angular/cdk/layout','@angular/cdk/platform','exports', '@angular/core', '@angular/common', 'classnames', '@angular/animations', '@angular/platform-browser', '@angular/router', 'rxjs', 'rxjs/operators', '@angular/forms', 'ng2-charts', '@angular/cdk/layout', '@angular/cdk/platform', 'text-mask-core/dist/textMaskCore'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.ng.common,global.ng.animations,global.ng.platformBrowser,global.ng.router,global.tslib,global.ng2Charts,global.ng.cdk.layout,global.ng.cdk.platform,(global.coreui = global.coreui || {}, global.coreui.angular = {}), global.ng.core, global.ng.common, global.classNames, global.ng.animations, global.ng.platformBrowser, global.ng.router, global.rxjs, global.rxjs.operators, global.ng.forms, global.ng2Charts, global.ng.cdk.layout, global.ng.cdk.platform, global.textMaskCore));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,ɵngcc6,ɵngcc7,ɵngcc8,exports, i0, i1, classNames, animations, platformBrowser, i1$1, rxjs, operators, forms, ng2Charts, layout, platform, textMaskCore) { 
var _c0 = ["*"];
var _c1 = [[["", "c-accordion-header", ""]], "*"];
var _c2 = ["[c-accordion-header]", "*"];
function AlertComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    var _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 1);
    ɵngcc0.ɵɵlistener("click", function AlertComponent_ng_template_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); var ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.onClose(); });
    ɵngcc0.ɵɵelement(1, "span", 2);
    ɵngcc0.ɵɵelementStart(2, "span", 3);
    ɵngcc0.ɵɵtext(3, "Close");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r0.safeIcon, ɵngcc0.ɵɵsanitizeHtml);
} }
function BreadcrumbComponent_ng_template_1_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelementStart(1, "a", 5);
    ɵngcc0.ɵɵi18n(2, 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var breadcrumb_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("routerLink", breadcrumb_r1.url)("cHtmlAttr", breadcrumb_r1.attributes)("target", breadcrumb_r1.attributes == null ? null : breadcrumb_r1.attributes.target)("queryParams", breadcrumb_r1.linkProps == null ? null : breadcrumb_r1.linkProps.queryParams)("fragment", breadcrumb_r1.linkProps == null ? null : breadcrumb_r1.linkProps.fragment)("queryParamsHandling", breadcrumb_r1.linkProps == null ? null : breadcrumb_r1.linkProps.queryParamsHandling)("preserveFragment", breadcrumb_r1.linkProps == null ? null : breadcrumb_r1.linkProps.preserveFragment)("skipLocationChange", breadcrumb_r1.linkProps == null ? null : breadcrumb_r1.linkProps.skipLocationChange)("replaceUrl", breadcrumb_r1.linkProps == null ? null : breadcrumb_r1.linkProps.replaceUrl)("state", breadcrumb_r1.linkProps == null ? null : breadcrumb_r1.linkProps.state);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵi18nExp(breadcrumb_r1.label);
    ɵngcc0.ɵɵi18nApply(2);
} }
function BreadcrumbComponent_ng_template_1_ng_container_0_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.divider, " ");
} }
function BreadcrumbComponent_ng_template_1_ng_container_0_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 7);
    ɵngcc0.ɵɵi18n(1, 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var breadcrumb_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("cHtmlAttr", breadcrumb_r1.attributes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵi18nExp(breadcrumb_r1.label);
    ɵngcc0.ɵɵi18nApply(1);
} }
function BreadcrumbComponent_ng_template_1_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BreadcrumbComponent_ng_template_1_ng_container_0_div_1_Template, 3, 11, "div", 2);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbComponent_ng_template_1_ng_container_0_span_2_Template, 2, 1, "span", 1);
    ɵngcc0.ɵɵtemplate(3, BreadcrumbComponent_ng_template_1_ng_container_0_span_3_Template, 2, 2, "span", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var last_r2 = ɵngcc0.ɵɵnextContext().last;
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !last_r2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !last_r2 && ctx_r3.divider);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", last_r2);
} }
function BreadcrumbComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, BreadcrumbComponent_ng_template_1_ng_container_0_Template, 4, 3, "ng-container", 1);
} if (rf & 2) {
    var breadcrumb_r1 = ctx.$implicit;
    var last_r2 = ctx.last;
    ɵngcc0.ɵɵproperty("ngIf", breadcrumb_r1.label && (breadcrumb_r1.url.slice(-1) == "/" || last_r2));
} }
var _c7 = ["content"];
function CarouselControlComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", null, 2);
    ɵngcc0.ɵɵprojection(2);
    ɵngcc0.ɵɵelementEnd();
} }
function CarouselControlComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span");
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r2.carouselControlIconClass);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r2.direction);
} }
var _c8 = function (a0) { return { active: a0 }; };
function CarouselIndicatorsComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    var _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "li", 2);
    ɵngcc0.ɵɵlistener("click", function CarouselIndicatorsComponent_ng_container_1_Template_li_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r4); var i_r2 = ctx.index; var ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onClick(i_r2); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var i_r2 = ctx.index;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ɵngcc0.ɵɵpureFunction1(2, _c8, ctx_r0.active === i_r2));
} }
function CarouselItemComponent_ng_content_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 0, ["*ngIf", "active"]);
} }
var _c9 = [[["iframe"]]];
var _c10 = ["iframe"];
var _c11 = "[_nghost-%COMP%]     .btn:not(:hover):not(:focus){box-shadow:none!important}";
function HeaderBrandComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function HeaderBrandComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 1);
} }
var _c12 = ["*", "*"];
var _c13 = ["modalHeader"];
var _c14 = ["modalBody"];
var _c15 = ["modalFooter"];
function ModalComponent_div_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 11);
} }
function ModalComponent_div_0_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ModalComponent_div_0_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ModalComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "div", 3);
    ɵngcc0.ɵɵelementStart(2, "div", 4);
    ɵngcc0.ɵɵelementStart(3, "div", 5);
    ɵngcc0.ɵɵtemplate(4, ModalComponent_div_0_ng_container_4_Template, 1, 0, "ng-container", 6);
    ɵngcc0.ɵɵelementStart(5, "button", 7);
    ɵngcc0.ɵɵlistener("click", function ModalComponent_div_0_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.hide(); });
    ɵngcc0.ɵɵtext(6, "\u00D7");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 8);
    ɵngcc0.ɵɵtemplate(8, ModalComponent_div_0_ng_container_8_Template, 1, 0, "ng-container", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "div", 10);
    ɵngcc0.ɵɵtemplate(10, ModalComponent_div_0_ng_container_10_Template, 1, 0, "ng-container", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("show", ctx_r0.visibleAnimate);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.modalClasses);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.dialogClasses);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.header);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.body);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.footer);
} }
function ModalComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 12);
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r1.backdropClasses);
} }
function SidebarBrandComponent_ng_template_1_img_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 3);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("cHtmlAttr", ctx_r2.brandFull)("ngClass", "c-sidebar-brand-full");
} }
function SidebarBrandComponent_ng_template_1_img_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 3);
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("cHtmlAttr", ctx_r3.brandMinimized)("ngClass", "c-sidebar-brand-minimized");
} }
function SidebarBrandComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, SidebarBrandComponent_ng_template_1_img_0_Template, 1, 2, "img", 2);
    ɵngcc0.ɵɵtemplate(1, SidebarBrandComponent_ng_template_1_img_1_Template, 1, 2, "img", 2);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.brandFull);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.brandMinimized);
} }
function SidebarBrandComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 4);
    ɵngcc0.ɵɵelement(1, "div", 5);
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r1.brandText.text, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r1.brandText.icon, ɵngcc0.ɵɵsanitizeHtml);
} }
function SidebarNavComponent_ng_container_0_c_sidebar_nav_dropdown_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c-sidebar-nav-dropdown", 6);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavItemClass");
} if (rf & 2) {
    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("item", item_r1)("ngClass", ɵngcc0.ɵɵpipeBind1(1, 2, item_r1));
} }
function SidebarNavComponent_ng_container_0_c_sidebar_nav_divider_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c-sidebar-nav-divider", 7);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavItemClass");
} if (rf & 2) {
    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("item", item_r1)("ngClass", ɵngcc0.ɵɵpipeBind1(1, 3, item_r1))("cHtmlAttr", item_r1.attributes);
} }
function SidebarNavComponent_ng_container_0_c_sidebar_nav_title_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c-sidebar-nav-title", 7);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavItemClass");
} if (rf & 2) {
    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("item", item_r1)("ngClass", ɵngcc0.ɵɵpipeBind1(1, 3, item_r1))("cHtmlAttr", item_r1.attributes);
} }
function SidebarNavComponent_ng_container_0_c_sidebar_nav_label_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c-sidebar-nav-label", 6);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavItemClass");
} if (rf & 2) {
    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("item", item_r1)("ngClass", ɵngcc0.ɵɵpipeBind1(1, 2, item_r1));
} }
function SidebarNavComponent_ng_container_0_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function SidebarNavComponent_ng_container_0_c_sidebar_nav_link_7_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c-sidebar-nav-link", 8);
    ɵngcc0.ɵɵlistener("linkClick", function SidebarNavComponent_ng_container_0_c_sidebar_nav_link_7_Template_c_sidebar_nav_link_linkClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.hideMobile(); });
    ɵngcc0.ɵɵpipe(1, "cSidebarNavItemClass");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("item", item_r1)("ngClass", ɵngcc0.ɵɵpipeBind1(1, 2, item_r1));
} }
function SidebarNavComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementContainerStart(1, 1);
    ɵngcc0.ɵɵtemplate(2, SidebarNavComponent_ng_container_0_c_sidebar_nav_dropdown_2_Template, 2, 4, "c-sidebar-nav-dropdown", 2);
    ɵngcc0.ɵɵtemplate(3, SidebarNavComponent_ng_container_0_c_sidebar_nav_divider_3_Template, 2, 5, "c-sidebar-nav-divider", 3);
    ɵngcc0.ɵɵtemplate(4, SidebarNavComponent_ng_container_0_c_sidebar_nav_title_4_Template, 2, 5, "c-sidebar-nav-title", 3);
    ɵngcc0.ɵɵtemplate(5, SidebarNavComponent_ng_container_0_c_sidebar_nav_label_5_Template, 2, 4, "c-sidebar-nav-label", 2);
    ɵngcc0.ɵɵtemplate(6, SidebarNavComponent_ng_container_0_ng_container_6_Template, 1, 0, "ng-container", 4);
    ɵngcc0.ɵɵtemplate(7, SidebarNavComponent_ng_container_0_c_sidebar_nav_link_7_Template, 2, 4, "c-sidebar-nav-link", 5);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r1 = ctx.$implicit;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitch", ctx_r0.helper.itemType(item_r1));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "dropdown");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "divider");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "title");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "label");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "empty");
} }
function SidebarNavDropdownComponent_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 3);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavIcon");
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r0.item));
} }
function SidebarNavDropdownComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 3);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavBadge");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r1.item));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.item.badge.text);
} }
function SidebarNavItemsComponent_ng_container_0_c_sidebar_nav_dropdown_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c-sidebar-nav-dropdown", 7);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavItemClass");
} if (rf & 2) {
    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("c-show", ctx_r2.helper.isActive(ctx_r2.router, item_r1));
    ɵngcc0.ɵɵproperty("item", item_r1)("ngClass", ɵngcc0.ɵɵpipeBind1(1, 4, item_r1));
} }
function SidebarNavItemsComponent_ng_container_0_c_sidebar_nav_divider_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c-sidebar-nav-divider", 8);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavItemClass");
} if (rf & 2) {
    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("item", item_r1)("ngClass", ɵngcc0.ɵɵpipeBind1(1, 3, item_r1))("cHtmlAttr", item_r1.attributes);
} }
function SidebarNavItemsComponent_ng_container_0_c_sidebar_nav_title_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c-sidebar-nav-title", 8);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavItemClass");
} if (rf & 2) {
    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("item", item_r1)("ngClass", ɵngcc0.ɵɵpipeBind1(1, 3, item_r1))("cHtmlAttr", item_r1.attributes);
} }
function SidebarNavItemsComponent_ng_container_0_c_sidebar_nav_label_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c-sidebar-nav-label", 9);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavItemClass");
} if (rf & 2) {
    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("item", item_r1)("ngClass", ɵngcc0.ɵɵpipeBind1(1, 2, item_r1));
} }
function SidebarNavItemsComponent_ng_container_0_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function SidebarNavItemsComponent_ng_container_0_c_sidebar_nav_link_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c-sidebar-nav-link", 9);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavItemClass");
} if (rf & 2) {
    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("item", item_r1)("ngClass", ɵngcc0.ɵɵpipeBind1(1, 2, item_r1));
} }
function SidebarNavItemsComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementContainerStart(1, 1);
    ɵngcc0.ɵɵtemplate(2, SidebarNavItemsComponent_ng_container_0_c_sidebar_nav_dropdown_2_Template, 2, 6, "c-sidebar-nav-dropdown", 2);
    ɵngcc0.ɵɵtemplate(3, SidebarNavItemsComponent_ng_container_0_c_sidebar_nav_divider_3_Template, 2, 5, "c-sidebar-nav-divider", 3);
    ɵngcc0.ɵɵtemplate(4, SidebarNavItemsComponent_ng_container_0_c_sidebar_nav_title_4_Template, 2, 5, "c-sidebar-nav-title", 3);
    ɵngcc0.ɵɵtemplate(5, SidebarNavItemsComponent_ng_container_0_c_sidebar_nav_label_5_Template, 2, 4, "c-sidebar-nav-label", 4);
    ɵngcc0.ɵɵtemplate(6, SidebarNavItemsComponent_ng_container_0_ng_container_6_Template, 1, 0, "ng-container", 5);
    ɵngcc0.ɵɵtemplate(7, SidebarNavItemsComponent_ng_container_0_c_sidebar_nav_link_7_Template, 2, 4, "c-sidebar-nav-link", 6);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r1 = ctx.$implicit;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitch", ctx_r0.helper.itemType(item_r1));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "dropdown");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "divider");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "title");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "label");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "empty");
} }
function SidebarNavLinkContentComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementContainerStart(1);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.item.name);
} }
function SidebarNavLinkComponent_a_1_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 7);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavIcon");
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r3.item));
} }
function SidebarNavLinkComponent_a_1_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 7);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavIcon");
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r4.item));
} }
function SidebarNavLinkComponent_a_1_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 7);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavBadge");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r5.item));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r5.item.badge == null ? null : ctx_r5.item.badge.text);
} }
function SidebarNavLinkComponent_a_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 4);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavLink");
    ɵngcc0.ɵɵtemplate(2, SidebarNavLinkComponent_a_1_i_2_Template, 2, 3, "i", 5);
    ɵngcc0.ɵɵtemplate(3, SidebarNavLinkComponent_a_1_span_3_Template, 2, 3, "span", 5);
    ɵngcc0.ɵɵelement(4, "c-sidebar-nav-link-content", 6);
    ɵngcc0.ɵɵtemplate(5, SidebarNavLinkComponent_a_1_span_5_Template, 3, 4, "span", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 6, ctx_r0.item))("cHtmlAttr", ctx_r0.item.attributes);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.item == null ? null : ctx_r0.item.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r0.item == null ? null : ctx_r0.item.icon));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("item", ctx_r0.item);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.item.badge);
} }
function SidebarNavLinkComponent_a_2_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 7);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavIcon");
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r6.item));
} }
function SidebarNavLinkComponent_a_2_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 7);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavIcon");
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r7.item));
} }
function SidebarNavLinkComponent_a_2_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 7);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavBadge");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r8.item));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r8.item.badge == null ? null : ctx_r8.item.badge.text);
} }
function SidebarNavLinkComponent_a_2_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 8);
    ɵngcc0.ɵɵlistener("click", function SidebarNavLinkComponent_a_2_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.linkClicked(); });
    ɵngcc0.ɵɵpipe(1, "cSidebarNavLink");
    ɵngcc0.ɵɵtemplate(2, SidebarNavLinkComponent_a_2_i_2_Template, 2, 3, "i", 5);
    ɵngcc0.ɵɵtemplate(3, SidebarNavLinkComponent_a_2_span_3_Template, 2, 3, "span", 5);
    ɵngcc0.ɵɵelement(4, "c-sidebar-nav-link-content", 6);
    ɵngcc0.ɵɵtemplate(5, SidebarNavLinkComponent_a_2_span_5_Template, 3, 4, "span", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 7, ctx_r1.item))("href", ctx_r1.href, ɵngcc0.ɵɵsanitizeUrl)("cHtmlAttr", ctx_r1.item.attributes);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.item == null ? null : ctx_r1.item.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r1.item == null ? null : ctx_r1.item.icon));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("item", ctx_r1.item);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.item.badge);
} }
function SidebarNavLinkComponent_a_3_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 7);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavIcon");
} if (rf & 2) {
    var ctx_r11 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r11.item));
} }
function SidebarNavLinkComponent_a_3_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 7);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavIcon");
} if (rf & 2) {
    var ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r12.item));
} }
function SidebarNavLinkComponent_a_3_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 7);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavBadge");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r13.item));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r13.item.badge == null ? null : ctx_r13.item.badge.text);
} }
function SidebarNavLinkComponent_a_3_Template(rf, ctx) { if (rf & 1) {
    var _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 9);
    ɵngcc0.ɵɵlistener("click", function SidebarNavLinkComponent_a_3_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.linkClicked(); });
    ɵngcc0.ɵɵpipe(1, "cSidebarNavLink");
    ɵngcc0.ɵɵtemplate(2, SidebarNavLinkComponent_a_3_i_2_Template, 2, 3, "i", 5);
    ɵngcc0.ɵɵtemplate(3, SidebarNavLinkComponent_a_3_span_3_Template, 2, 3, "span", 5);
    ɵngcc0.ɵɵelement(4, "c-sidebar-nav-link-content", 6);
    ɵngcc0.ɵɵtemplate(5, SidebarNavLinkComponent_a_3_span_5_Template, 3, 4, "span", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("c-active", ctx_r2.linkActive);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 17, ctx_r2.item))("cHtmlAttr", ctx_r2.item.attributes)("target", ctx_r2.item.attributes == null ? null : ctx_r2.item.attributes.target)("queryParams", ctx_r2.item.linkProps == null ? null : ctx_r2.item.linkProps.queryParams)("fragment", ctx_r2.item.linkProps == null ? null : ctx_r2.item.linkProps.fragment)("queryParamsHandling", ctx_r2.item.linkProps == null ? null : ctx_r2.item.linkProps.queryParamsHandling)("preserveFragment", ctx_r2.item.linkProps == null ? null : ctx_r2.item.linkProps.preserveFragment)("skipLocationChange", ctx_r2.item.linkProps == null ? null : ctx_r2.item.linkProps.skipLocationChange)("replaceUrl", ctx_r2.item.linkProps == null ? null : ctx_r2.item.linkProps.replaceUrl)("state", ctx_r2.item.linkProps == null ? null : ctx_r2.item.linkProps.state)("routerLink", ctx_r2.item.url);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.item == null ? null : ctx_r2.item.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r2.item == null ? null : ctx_r2.item.icon));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("item", ctx_r2.item);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.item.badge);
} }
function SidebarNavLabelComponent_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 2);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.getLabelIconClass());
} }
function SidebarNavLabelComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 2);
    ɵngcc0.ɵɵpipe(1, "cSidebarNavBadge");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r1.item));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.item.badge.text);
} }
function SpinkitComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function SpinkitComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "div", 3);
    ɵngcc0.ɵɵelement(2, "div", 3);
    ɵngcc0.ɵɵelement(3, "div", 3);
    ɵngcc0.ɵɵelement(4, "div", 3);
    ɵngcc0.ɵɵelement(5, "div", 3);
    ɵngcc0.ɵɵelement(6, "div", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function SpinkitComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "div", 4);
    ɵngcc0.ɵɵelement(2, "div", 4);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function SpinkitComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "div", 5);
    ɵngcc0.ɵɵelement(2, "div", 5);
    ɵngcc0.ɵɵelement(3, "div", 5);
    ɵngcc0.ɵɵelement(4, "div", 5);
    ɵngcc0.ɵɵelement(5, "div", 5);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function SpinkitComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function SpinkitComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "div", 6);
    ɵngcc0.ɵɵelement(2, "div", 6);
    ɵngcc0.ɵɵelement(3, "div", 6);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function SpinkitComponent_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "div", 7);
    ɵngcc0.ɵɵelement(2, "div", 7);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function SpinkitComponent_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "div", 8);
    ɵngcc0.ɵɵelement(2, "div", 8);
    ɵngcc0.ɵɵelement(3, "div", 8);
    ɵngcc0.ɵɵelement(4, "div", 8);
    ɵngcc0.ɵɵelement(5, "div", 8);
    ɵngcc0.ɵɵelement(6, "div", 8);
    ɵngcc0.ɵɵelement(7, "div", 8);
    ɵngcc0.ɵɵelement(8, "div", 8);
    ɵngcc0.ɵɵelement(9, "div", 8);
    ɵngcc0.ɵɵelement(10, "div", 8);
    ɵngcc0.ɵɵelement(11, "div", 8);
    ɵngcc0.ɵɵelement(12, "div", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function SpinkitComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "div", 9);
    ɵngcc0.ɵɵelement(2, "div", 9);
    ɵngcc0.ɵɵelement(3, "div", 9);
    ɵngcc0.ɵɵelement(4, "div", 9);
    ɵngcc0.ɵɵelement(5, "div", 9);
    ɵngcc0.ɵɵelement(6, "div", 9);
    ɵngcc0.ɵɵelement(7, "div", 9);
    ɵngcc0.ɵɵelement(8, "div", 9);
    ɵngcc0.ɵɵelement(9, "div", 9);
    ɵngcc0.ɵɵelement(10, "div", 9);
    ɵngcc0.ɵɵelement(11, "div", 9);
    ɵngcc0.ɵɵelement(12, "div", 9);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function SpinkitComponent_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "div", 10);
    ɵngcc0.ɵɵelement(2, "div", 10);
    ɵngcc0.ɵɵelement(3, "div", 10);
    ɵngcc0.ɵɵelement(4, "div", 10);
    ɵngcc0.ɵɵelement(5, "div", 10);
    ɵngcc0.ɵɵelement(6, "div", 10);
    ɵngcc0.ɵɵelement(7, "div", 10);
    ɵngcc0.ɵɵelement(8, "div", 10);
    ɵngcc0.ɵɵelement(9, "div", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function SpinkitComponent_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "div", 11);
    ɵngcc0.ɵɵelement(2, "div", 11);
    ɵngcc0.ɵɵelement(3, "div", 11);
    ɵngcc0.ɵɵelement(4, "div", 11);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function SpinkitComponent_ng_container_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "div", 12);
    ɵngcc0.ɵɵelement(2, "div", 12);
    ɵngcc0.ɵɵelement(3, "div", 12);
    ɵngcc0.ɵɵelement(4, "div", 12);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function SpinkitComponent_ng_container_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c16 = ["link"];
function TabPaneComponent_ng_content_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 0, ["*ngIf", "active"]);
} }
var _c17 = function () { return { outline: 0 }; };
function ToastHeaderComponent_button_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 1);
    ɵngcc0.ɵɵtext(1, "\u00D7");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction0(3, _c17));
    ɵngcc0.ɵɵproperty("cToastClose", ctx_r0.toast);
} }
function ToasterComponent_ng_template_0_Template(rf, ctx) { }
function TogglerComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2, 3);
    ɵngcc0.ɵɵprojection(2);
    ɵngcc0.ɵɵelementEnd();
} }
function TogglerComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 4);
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r2.buttonClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r2.iconClass);
} }
function WidgetSimpleComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.header, " ");
} }
function WidgetSimpleComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.text, " ");
} }
function WidgetBrandComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.rightHeader);
} }
function WidgetBrandComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.rightFooter);
} }
function WidgetBrandComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.leftHeader);
} }
function WidgetBrandComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.leftFooter);
} }
function WidgetIconComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r0.headerClasses);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.header, " ");
} }
function WidgetIconComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.text, " ");
} }
var _c18 = ["*", [["", "slot", "footer"]]];
var _c19 = ["*", "[slot=footer]"];
function WidgetProgressComponent_small_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.footer, " ");
} }
var _c20 = function (a2) { return { "my-3": true, "mb-0": true, "progress-white": a2 }; };
function WidgetProgressIconComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.header);
} }
function WidgetProgressIconComponent_small_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 7);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.text, " ");
} }
'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

    var AccordionComponent = /** @class */ (function () {
        function AccordionComponent() {
            this.accordionClass = true;
            this.groups = [];
        }
        AccordionComponent.prototype.closeOtherGroups = function (openGroup) {
            this.groups.forEach(function (group) {
                if (group !== openGroup) {
                    group.isOpen = false;
                }
            });
        };
        AccordionComponent.prototype.addGroup = function (group) {
            this.groups.push(group);
        };
        AccordionComponent.prototype.removeGroup = function (group) {
            var index = this.groups.indexOf(group);
            if (index !== -1) {
                this.groups.splice(index, 1);
            }
        };
AccordionComponent.ɵfac = function AccordionComponent_Factory(t) { return new (t || AccordionComponent)(); };
AccordionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionComponent, selectors: [["c-accordion"]], hostVars: 2, hostBindings: function AccordionComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("accordion", ctx.accordionClass);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AccordionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{display:block}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AccordionComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-accordion',
                template: '<ng-content></ng-content>',
                styles: [":host{display:block}"]
            }]
    }], function () { return []; }, { accordionClass: [{
            type: i0.HostBinding,
            args: ['class.accordion']
        }] }); })();
        return AccordionComponent;
    }());
    AccordionComponent.propDecorators = {
        accordionClass: [{ type: i0.HostBinding, args: ['class.accordion',] }]
    };

    var AccordionGroupComponent = /** @class */ (function () {
        function AccordionGroupComponent(accordion) {
            this.isOpen = false;
            this.groupClass = '';
            this.cardClass = true;
            this.accordion = accordion;
        }
        AccordionGroupComponent.prototype.ngOnInit = function () {
            this.accordion.addGroup(this);
        };
        AccordionGroupComponent.prototype.ngOnDestroy = function () {
            this.accordion.removeGroup(this);
        };
        AccordionGroupComponent.prototype.toggleGroup = function () {
            this.isOpen = !this.isOpen;
            this.accordion.closeOtherGroups(this);
        };
AccordionGroupComponent.ɵfac = function AccordionGroupComponent_Factory(t) { return new (t || AccordionGroupComponent)(ɵngcc0.ɵɵdirectiveInject(AccordionComponent)); };
AccordionGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionGroupComponent, selectors: [["c-accordion-group"]], hostVars: 2, hostBindings: function AccordionGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("card", ctx.cardClass);
    } }, inputs: { isOpen: "isOpen", groupClass: "groupClass" }, ngContentSelectors: _c2, decls: 4, vars: 1, consts: [[3, "click"], ["cCollapse", "", 3, "show"]], template: function AccordionGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c1);
        ɵngcc0.ɵɵelementStart(0, "c-card-header", 0);
        ɵngcc0.ɵɵlistener("click", function AccordionGroupComponent_Template_c_card_header_click_0_listener() { return ctx.toggleGroup(); });
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "c-card-body", 1);
        ɵngcc0.ɵɵprojection(3, 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("show", !ctx.isOpen);
    } }, directives: function () { return [CardHeaderComponent, CardBodyComponent, CollapseDirective]; }, styles: ["[_nghost-%COMP%]{margin-bottom:0}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AccordionGroupComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-accordion-group',
                template: "<c-card-header (click)=\"toggleGroup()\">\n  <ng-content select=\"[c-accordion-header]\"></ng-content>\n</c-card-header>\n<c-card-body cCollapse [show]=\"!isOpen\">\n  <ng-content></ng-content>\n</c-card-body>\n",
                styles: [":host{margin-bottom:0}"]
            }]
    }], function () { return [{ type: AccordionComponent, decorators: [{
                type: i0.Inject,
                args: [AccordionComponent]
            }] }]; }, { isOpen: [{
            type: i0.Input
        }], groupClass: [{
            type: i0.Input
        }], cardClass: [{
            type: i0.HostBinding,
            args: ['class.card']
        }] }); })();
        return AccordionGroupComponent;
    }());
    AccordionGroupComponent.ctorParameters = function () { return [
        { type: AccordionComponent, decorators: [{ type: i0.Inject, args: [AccordionComponent,] }] }
    ]; };
    AccordionGroupComponent.propDecorators = {
        isOpen: [{ type: i0.Input }],
        groupClass: [{ type: i0.Input }],
        cardClass: [{ type: i0.HostBinding, args: ['class.card',] }]
    };

    var CardComponent = /** @class */ (function () {
        function CardComponent() {
        }
        Object.defineProperty(CardComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        card: true
                    },
                    _a["card-accent-" + this.accentColor] = this.accentColor,
                    _a["text-" + this.align] = this.align,
                    _a["bg-" + this.color] = this.color,
                    _a["border-" + this.borderColor] = this.borderColor,
                    _a["text-" + this.textColor] = this.textColor,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
CardComponent.ɵfac = function CardComponent_Factory(t) { return new (t || CardComponent)(); };
CardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CardComponent, selectors: [["c-card"], ["", "c-card", ""]], hostVars: 2, hostBindings: function CardComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { accentColor: "accentColor", align: "align", color: "color", borderColor: "borderColor", textColor: "textColor" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function CardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CardComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-card, [c-card]',
                template: "<ng-content></ng-content>"
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], accentColor: [{
            type: i0.Input
        }], align: [{
            type: i0.Input
        }], color: [{
            type: i0.Input
        }], borderColor: [{
            type: i0.Input
        }], textColor: [{
            type: i0.Input
        }] }); })();
        return CardComponent;
    }());
    CardComponent.propDecorators = {
        accentColor: [{ type: i0.Input }],
        align: [{ type: i0.Input }],
        color: [{ type: i0.Input }],
        borderColor: [{ type: i0.Input }],
        textColor: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var CardBodyComponent = /** @class */ (function () {
        function CardBodyComponent() {
        }
        Object.defineProperty(CardBodyComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardBodyComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'card-body': true
                    },
                    _a["bg-" + this.color] = this.color,
                    _a["border-" + this.borderColor] = this.borderColor,
                    _a["text-" + this.textColor] = this.textColor,
                    _a["text-" + this.align] = this.align,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
CardBodyComponent.ɵfac = function CardBodyComponent_Factory(t) { return new (t || CardBodyComponent)(); };
CardBodyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CardBodyComponent, selectors: [["c-card-body"], ["", "c-card-body", ""]], hostVars: 2, hostBindings: function CardBodyComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { align: "align", color: "color", borderColor: "borderColor", textColor: "textColor" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function CardBodyComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CardBodyComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-card-body, [c-card-body]',
                template: '<ng-content></ng-content>'
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], align: [{
            type: i0.Input
        }], color: [{
            type: i0.Input
        }], borderColor: [{
            type: i0.Input
        }], textColor: [{
            type: i0.Input
        }] }); })();
        return CardBodyComponent;
    }());
    CardBodyComponent.propDecorators = {
        align: [{ type: i0.Input }],
        color: [{ type: i0.Input }],
        borderColor: [{ type: i0.Input }],
        textColor: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var CardFooterComponent = /** @class */ (function () {
        function CardFooterComponent() {
        }
        Object.defineProperty(CardFooterComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardFooterComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'card-footer': true
                    },
                    _a["bg-" + this.color] = this.color,
                    _a["border-" + this.borderColor] = this.borderColor,
                    _a["text-" + this.textColor] = this.textColor,
                    _a["text-" + this.align] = this.align,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
CardFooterComponent.ɵfac = function CardFooterComponent_Factory(t) { return new (t || CardFooterComponent)(); };
CardFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CardFooterComponent, selectors: [["c-card-footer"], ["", "c-card-footer", ""]], hostVars: 2, hostBindings: function CardFooterComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { align: "align", color: "color", borderColor: "borderColor", textColor: "textColor" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function CardFooterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CardFooterComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-card-footer, [c-card-footer]',
                template: '<ng-content></ng-content>'
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], align: [{
            type: i0.Input
        }], color: [{
            type: i0.Input
        }], borderColor: [{
            type: i0.Input
        }], textColor: [{
            type: i0.Input
        }] }); })();
        return CardFooterComponent;
    }());
    CardFooterComponent.propDecorators = {
        align: [{ type: i0.Input }],
        color: [{ type: i0.Input }],
        borderColor: [{ type: i0.Input }],
        textColor: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var CardGroupComponent = /** @class */ (function () {
        function CardGroupComponent() {
            this.deck = false;
            this.columns = false;
        }
        Object.defineProperty(CardGroupComponent.prototype, "hostClasses", {
            get: function () {
                return this.getClasses();
            },
            enumerable: false,
            configurable: true
        });
        CardGroupComponent.prototype.getClasses = function () {
            return "card-" + (this.columns ? 'columns' : this.deck ? 'deck' : 'group');
        };
CardGroupComponent.ɵfac = function CardGroupComponent_Factory(t) { return new (t || CardGroupComponent)(); };
CardGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CardGroupComponent, selectors: [["c-card-group"], ["", "c-card-group", ""]], hostVars: 2, hostBindings: function CardGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.hostClasses);
    } }, inputs: { deck: "deck", columns: "columns" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function CardGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CardGroupComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-card-group, [c-card-group]',
                template: '<ng-content></ng-content>'
            }]
    }], function () { return []; }, { deck: [{
            type: i0.Input
        }], columns: [{
            type: i0.Input
        }], hostClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }] }); })();
        return CardGroupComponent;
    }());
    CardGroupComponent.propDecorators = {
        deck: [{ type: i0.Input }],
        columns: [{ type: i0.Input }],
        hostClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var CardHeaderComponent = /** @class */ (function () {
        function CardHeaderComponent() {
        }
        Object.defineProperty(CardHeaderComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardHeaderComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'card-header': true
                    },
                    _a["bg-" + this.color] = this.color,
                    _a["border-" + this.borderColor] = this.borderColor,
                    _a["text-" + this.textColor] = this.textColor,
                    _a["text-" + this.align] = this.align,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
CardHeaderComponent.ɵfac = function CardHeaderComponent_Factory(t) { return new (t || CardHeaderComponent)(); };
CardHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CardHeaderComponent, selectors: [["c-card-header"], ["", "c-card-header", ""]], hostVars: 2, hostBindings: function CardHeaderComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { align: "align", color: "color", borderColor: "borderColor", textColor: "textColor" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function CardHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CardHeaderComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-card-header, [c-card-header]',
                template: '<ng-content></ng-content>'
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], align: [{
            type: i0.Input
        }], color: [{
            type: i0.Input
        }], borderColor: [{
            type: i0.Input
        }], textColor: [{
            type: i0.Input
        }] }); })();
        return CardHeaderComponent;
    }());
    CardHeaderComponent.propDecorators = {
        align: [{ type: i0.Input }],
        color: [{ type: i0.Input }],
        borderColor: [{ type: i0.Input }],
        textColor: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var CardHeaderActionsComponent = /** @class */ (function () {
        function CardHeaderActionsComponent() {
            this.cardHeaderActions = true;
        }
CardHeaderActionsComponent.ɵfac = function CardHeaderActionsComponent_Factory(t) { return new (t || CardHeaderActionsComponent)(); };
CardHeaderActionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CardHeaderActionsComponent, selectors: [["c-card-header-actions"], ["", "c-card-header-actions", ""]], hostVars: 2, hostBindings: function CardHeaderActionsComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("card-header-actions", ctx.cardHeaderActions);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function CardHeaderActionsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CardHeaderActionsComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-card-header-actions, [c-card-header-actions]',
                template: '<ng-content></ng-content>'
            }]
    }], function () { return []; }, { cardHeaderActions: [{
            type: i0.HostBinding,
            args: ['class.card-header-actions']
        }] }); })();
        return CardHeaderActionsComponent;
    }());
    CardHeaderActionsComponent.propDecorators = {
        cardHeaderActions: [{ type: i0.HostBinding, args: ['class.card-header-actions',] }]
    };

    var CardModule = /** @class */ (function () {
        function CardModule() {
        }
CardModule.ɵfac = function CardModule_Factory(t) { return new (t || CardModule)(); };
CardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CardModule });
CardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CardModule, { declarations: [CardComponent, CardBodyComponent, CardFooterComponent, CardGroupComponent, CardHeaderComponent, CardHeaderActionsComponent], imports: [ɵngcc1.CommonModule], exports: [CardComponent, CardBodyComponent, CardFooterComponent, CardGroupComponent, CardHeaderComponent, CardHeaderActionsComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CardModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    CardComponent,
                    CardBodyComponent,
                    CardFooterComponent,
                    CardGroupComponent,
                    CardHeaderComponent,
                    CardHeaderActionsComponent
                ],
                imports: [
                    i1.CommonModule,
                ],
                exports: [
                    CardComponent,
                    CardBodyComponent,
                    CardFooterComponent,
                    CardGroupComponent,
                    CardHeaderComponent,
                    CardHeaderActionsComponent
                ]
            }]
    }], function () { return []; }, null); })();
        return CardModule;
    }());

    var expandAnimation = animations.animation([
        animations.style({ height: 0, visibility: 'hidden', overflow: 'hidden', paddingTop: 0, paddingBottom: 0 }),
        animations.animate('{{ time }} {{ easing }}', animations.style({ height: '*', visibility: 'visible', paddingTop: '*', paddingBottom: '*', minHeight: '*' })),
        animations.animate('{{ time }}', animations.style({ opacity: '*', overflow: '*' })),
    ]);
    var collapseAnimation = animations.animation([
        animations.style({ height: '*', visibility: 'visible', overflow: 'hidden', paddingTop: '*', paddingBottom: '*', minHeight: '*' }),
        animations.animate('{{ time }} {{ easing }}', animations.style({ height: 0, visibility: 'hidden', opacity: 0, overflow: 'hidden', paddingTop: 0, paddingBottom: 0, minHeight: 0 }))
    ]);

    var CollapseDirective = /** @class */ (function () {
        function CollapseDirective(hostElement, animationBuilder) {
            this.hostElement = hostElement;
            this.animationBuilder = animationBuilder;
            this.duration = '400ms';
            this.transition = 'ease-in-out';
            this.animate = true;
            this.collapseChange = new i0.EventEmitter();
            this._show = false;
            this._animate = this.animate;
            this.host = this.hostElement.nativeElement;
        }
        Object.defineProperty(CollapseDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CollapseDirective.prototype, "hostClasses", {
            get: function () {
                var classes = classNames__default['default']({
                    'navbar-collapse': !!this.navbar,
                    show: !!this.show,
                });
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        CollapseDirective.prototype.ngOnInit = function () {
            this._show = this.show;
        };
        CollapseDirective.prototype.ngOnDestroy = function () {
            this.destroyPlayer();
        };
        CollapseDirective.prototype.ngOnChanges = function (changes) {
            if (changes.show) {
                (!changes.show.firstChange || !changes.show.currentValue) && this.toggle(changes.show.currentValue);
            }
        };
        CollapseDirective.prototype.ngDoCheck = function () {
            if (this._show !== this.show) {
                this.toggle();
            }
        };
        CollapseDirective.prototype.toggle = function (show) {
            if (show === void 0) { show = this.show; }
            this._show = show;
            this.createPlayer(show);
            this.player.play();
        };
        CollapseDirective.prototype.destroyPlayer = function () {
            if (this.player) {
                this.player.destroy();
            }
        };
        CollapseDirective.prototype.createPlayer = function (show) {
            var _this = this;
            if (show === void 0) { show = this.show; }
            if (this.player) {
                this.destroyPlayer();
            }
            var animationFactory;
            var duration = this._animate ? this.duration : '0ms';
            animationFactory = this.animationBuilder.build(animations.useAnimation(show ? expandAnimation : collapseAnimation, { params: { time: duration, easing: this.transition } }));
            this.player = animationFactory.create(this.host);
            this.player.onStart(function () { _this.collapseChange.emit(show ? 'opening' : 'collapsing'); });
            this.player.onDone(function () { _this.collapseChange.emit(show ? 'open' : 'collapsed'); });
        };
CollapseDirective.ɵfac = function CollapseDirective_Factory(t) { return new (t || CollapseDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.AnimationBuilder)); };
CollapseDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CollapseDirective, selectors: [["", "cCollapse", ""]], hostVars: 2, hostBindings: function CollapseDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { duration: "duration", transition: "transition", animate: "animate", navbar: "navbar", show: "show" }, outputs: { collapseChange: "collapseChange" }, exportAs: ["cCollapse"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CollapseDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cCollapse]',
                exportAs: 'cCollapse'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.AnimationBuilder }]; }, { duration: [{
            type: i0.Input
        }], transition: [{
            type: i0.Input
        }], animate: [{
            type: i0.Input
        }], collapseChange: [{
            type: i0.Output
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], navbar: [{
            type: i0.Input
        }], show: [{
            type: i0.Input
        }] }); })();
        return CollapseDirective;
    }());
    CollapseDirective.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: animations.AnimationBuilder }
    ]; };
    CollapseDirective.propDecorators = {
        navbar: [{ type: i0.Input }],
        duration: [{ type: i0.Input }],
        transition: [{ type: i0.Input }],
        show: [{ type: i0.Input }],
        animate: [{ type: i0.Input }],
        collapseChange: [{ type: i0.Output }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var CollapseModule = /** @class */ (function () {
        function CollapseModule() {
        }
        CollapseModule.forRoot = function () {
            return { ngModule: CollapseModule, providers: [] };
        };
CollapseModule.ɵfac = function CollapseModule_Factory(t) { return new (t || CollapseModule)(); };
CollapseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CollapseModule });
CollapseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CollapseModule, { declarations: [CollapseDirective], imports: [ɵngcc1.CommonModule], exports: [CollapseDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CollapseModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [CollapseDirective],
                exports: [CollapseDirective],
                imports: [
                    i1.CommonModule
                ]
            }]
    }], function () { return []; }, null); })();
        return CollapseModule;
    }());

    var AccordionModule = /** @class */ (function () {
        function AccordionModule() {
        }
AccordionModule.ɵfac = function AccordionModule_Factory(t) { return new (t || AccordionModule)(); };
AccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AccordionModule });
AccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule,
            CardModule,
            CollapseModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AccordionModule, { declarations: [AccordionComponent, AccordionGroupComponent], imports: [ɵngcc1.CommonModule, CardModule, CollapseModule], exports: [AccordionComponent, AccordionGroupComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AccordionModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [AccordionComponent, AccordionGroupComponent],
                exports: [
                    AccordionComponent,
                    AccordionGroupComponent
                ],
                imports: [
                    i1.CommonModule,
                    CardModule,
                    CollapseModule
                ]
            }]
    }], function () { return []; }, null); })();
        return AccordionModule;
    }());

    var AlertComponent = /** @class */ (function () {
        function AlertComponent(sanitizer, hostElement, renderer) {
            this.sanitizer = sanitizer;
            this.hostElement = hostElement;
            this.renderer = renderer;
            this.color = 'info';
            this.closeButton = false;
            this.show = true;
            this.fade = false;
            this.iconHtml = '<span>&times;</span>';
            this.timeout = 0;
            this.dismissed = new i0.EventEmitter();
            this.timer = new i0.EventEmitter();
        }
        Object.defineProperty(AlertComponent.prototype, "clock", {
            get: function () {
                var time = this._clock;
                this.timer.emit(time);
                return time;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AlertComponent.prototype, "animationDisabled", {
            get: function () {
                return !this.fade;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AlertComponent.prototype, "animateType", {
            get: function () {
                return this.show ? 'show' : 'hide';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AlertComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AlertComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        alert: true,
                        'alert-dismissible': !!this.closeButton
                    },
                    _a["alert-" + this.color] = !!this.color,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        AlertComponent.prototype.ngOnInit = function () {
            this.safeIcon = this.sanitizer.sanitize(i0.SecurityContext.HTML, this.iconHtml);
            if (this.show && this.timeout) {
                this.setTimer();
            }
        };
        AlertComponent.prototype.ngOnDestroy = function () {
            this.clearTimer();
            this.clearClock();
        };
        AlertComponent.prototype.ngOnChanges = function (changes) {
            if (changes.color) {
                this.renderer.removeClass(this.hostElement.nativeElement, "alert-" + changes.color.previousValue);
            }
            if (changes.timeout) {
                this.setTimer();
            }
        };
        AlertComponent.prototype.setTimer = function () {
            var _this = this;
            this.clearTimer();
            this.timerId = this.timeout > 0 ? setTimeout(function () { return _this.onClose(); }, this.timeout) : null;
            this.setClock();
        };
        AlertComponent.prototype.clearTimer = function () {
            clearTimeout(this.timerId);
            this.timerId = null;
        };
        AlertComponent.prototype.onClose = function () {
            this.clearTimer();
            if (this.show) {
                this.show = false;
                this.hide = true;
                this.dismissed.emit(this);
            }
        };
        AlertComponent.prototype.setClock = function () {
            var _this = this;
            this.clearClock();
            this._clock = 0;
            this.clockId = setInterval(function () {
                _this._clock += 1;
            }, 1000);
            setTimeout(function () {
                _this.clearClock();
            }, this.timeout);
        };
        AlertComponent.prototype.clearClock = function () {
            clearInterval(this.clockId);
            this.clockId = null;
        };
        AlertComponent.prototype.onAnimationEvent = function (event) {
            console.warn(event);
            if (event.phaseName === 'done' && event.toState === 'hide') {
            }
            if (event.phaseName === 'start' && event.toState === 'show') {
            }
        };
AlertComponent.ɵfac = function AlertComponent_Factory(t) { return new (t || AlertComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
AlertComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AlertComponent, selectors: [["c-alert"]], hostVars: 4, hostBindings: function AlertComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵsyntheticHostProperty("@.disabled", ctx.animationDisabled)("@fadeInOut", ctx.animateType);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { color: "color", closeButton: "closeButton", show: "show", fade: "fade", iconHtml: "iconHtml", timeout: "timeout" }, outputs: { dismissed: "dismissed", timer: "timer" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 3, vars: 1, consts: [[3, "ngIf"], ["type", "button", "aria-label", "Close", 1, "close", 3, "click"], ["aria-hidden", "true", 3, "innerHTML"], [1, "sr-only"]], template: function AlertComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementContainerStart(0);
        ɵngcc0.ɵɵtemplate(1, AlertComponent_ng_template_1_Template, 4, 1, "ng-template", 0);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.closeButton);
    } }, directives: [ɵngcc1.NgIf], styles: ["[_nghost-%COMP%]{display:block}"], data: { animation: [
            animations.trigger('fadeInOut', [
                animations.state('show', animations.style({ opacity: 1 })),
                animations.state('hide', animations.style({ opacity: 0, height: 0, padding: 0, border: 0, margin: 0 })),
                animations.transition('show => hide', [
                    animations.animate('.3s ease-out', animations.style({ opacity: 0 })),
                    animations.animate('.3s ease-out', animations.style({ height: 0, padding: 0, border: 0, margin: 0 }))
                ]),
                animations.transition('hide => show', [
                    animations.animate('.3s ease-in', animations.style({ height: '*', padding: '*', border: '*', margin: '*' })),
                    animations.animate('.3s ease-in', animations.style({ opacity: '*' }))
                ])
            ])
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AlertComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-alert',
                template: "<!--<div [@fadeInOut]=\"show ? 'show' : 'hide'\" [class]=\"alertClasses\">-->\n<ng-container>\n  <ng-template [ngIf]=\"closeButton\">\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"onClose()\">\n      <span aria-hidden=\"true\" [innerHTML]=\"safeIcon\"></span>\n      <span class=\"sr-only\">Close</span>\n    </button>\n  </ng-template>\n  <ng-content></ng-content>\n</ng-container>\n",
                animations: [
                    animations.trigger('fadeInOut', [
                        animations.state('show', animations.style({ opacity: 1 })),
                        animations.state('hide', animations.style({ opacity: 0, height: 0, padding: 0, border: 0, margin: 0 })),
                        animations.transition('show => hide', [
                            animations.animate('.3s ease-out', animations.style({ opacity: 0 })),
                            animations.animate('.3s ease-out', animations.style({ height: 0, padding: 0, border: 0, margin: 0 }))
                        ]),
                        animations.transition('hide => show', [
                            animations.animate('.3s ease-in', animations.style({ height: '*', padding: '*', border: '*', margin: '*' })),
                            animations.animate('.3s ease-in', animations.style({ opacity: '*' }))
                        ])
                    ])
                ],
                styles: [":host{display:block}"]
            }]
    }], function () { return [{ type: ɵngcc3.DomSanitizer }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { color: [{
            type: i0.Input
        }], closeButton: [{
            type: i0.Input
        }], show: [{
            type: i0.Input
        }], fade: [{
            type: i0.Input
        }], iconHtml: [{
            type: i0.Input
        }], timeout: [{
            type: i0.Input
        }], dismissed: [{
            type: i0.Output
        }], timer: [{
            type: i0.Output
        }], animationDisabled: [{
            type: i0.HostBinding,
            args: ['@.disabled']
        }], animateType: [{
            type: i0.HostBinding,
            args: ['@fadeInOut']
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }] }); })();
        return AlertComponent;
    }());
    AlertComponent.ctorParameters = function () { return [
        { type: platformBrowser.DomSanitizer },
        { type: i0.ElementRef },
        { type: i0.Renderer2 }
    ]; };
    AlertComponent.propDecorators = {
        color: [{ type: i0.Input }],
        closeButton: [{ type: i0.Input }],
        show: [{ type: i0.Input }],
        fade: [{ type: i0.Input }],
        iconHtml: [{ type: i0.Input }],
        timeout: [{ type: i0.Input }],
        dismissed: [{ type: i0.Output }],
        timer: [{ type: i0.Output }],
        animationDisabled: [{ type: i0.HostBinding, args: ['@.disabled',] }],
        animateType: [{ type: i0.HostBinding, args: ['@fadeInOut',] }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var AlertModule = /** @class */ (function () {
        function AlertModule() {
        }
AlertModule.ɵfac = function AlertModule_Factory(t) { return new (t || AlertModule)(); };
AlertModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AlertModule });
AlertModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AlertModule, { declarations: [AlertComponent], imports: [ɵngcc1.CommonModule], exports: [AlertComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AlertModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    i1.CommonModule
                ],
                exports: [
                    AlertComponent
                ],
                declarations: [
                    AlertComponent
                ]
            }]
    }], function () { return []; }, null); })();
        return AlertModule;
    }());

    var BadgeComponent = /** @class */ (function () {
        function BadgeComponent(hostElement, renderer) {
            this.hostElement = hostElement;
            this.renderer = renderer;
        }
        Object.defineProperty(BadgeComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BadgeComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        badge: true
                    },
                    _a["badge-" + this.color] = !!this.color,
                    _a["badge-" + this.shape] = !!this.shape,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        BadgeComponent.prototype.ngOnChanges = function (changes) {
            if (changes.color) {
                var classOff = "badge-" + changes.color.previousValue;
                this.renderer.removeClass(this.hostElement.nativeElement, classOff);
            }
            if (changes.shape) {
                var classOff = "badge-" + changes.shape.previousValue;
                this.renderer.removeClass(this.hostElement.nativeElement, classOff);
            }
        };
BadgeComponent.ɵfac = function BadgeComponent_Factory(t) { return new (t || BadgeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
BadgeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BadgeComponent, selectors: [["c-badge"]], hostVars: 2, hostBindings: function BadgeComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { shape: "shape", color: "color" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function BadgeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BadgeComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-badge',
                template: '<ng-content></ng-content>',
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], shape: [{
            type: i0.Input
        }], color: [{
            type: i0.Input
        }] }); })();
        return BadgeComponent;
    }());
    BadgeComponent.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: i0.Renderer2 }
    ]; };
    BadgeComponent.propDecorators = {
        shape: [{ type: i0.Input }],
        color: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var BadgeModule = /** @class */ (function () {
        function BadgeModule() {
        }
BadgeModule.ɵfac = function BadgeModule_Factory(t) { return new (t || BadgeModule)(); };
BadgeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BadgeModule });
BadgeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BadgeModule, { declarations: [BadgeComponent], imports: [ɵngcc1.CommonModule], exports: [BadgeComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BadgeModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    i1.CommonModule
                ],
                exports: [
                    BadgeComponent
                ],
                declarations: [
                    BadgeComponent
                ]
            }]
    }], function () { return []; }, null); })();
        return BadgeModule;
    }());

    var BreadcrumbService = /** @class */ (function () {
        function BreadcrumbService(router, route) {
            var _this = this;
            this.router = router;
            this.route = route;
            this.outlet = 'primary';
            this.breadcrumbsBehaviorSubject = new rxjs.BehaviorSubject(new Array());
            this.breadcrumbs$ = this.breadcrumbsBehaviorSubject.asObservable();
            this.router.events.pipe(operators.filter(function (event) { return event instanceof i1$1.NavigationEnd; })).subscribe(function (event) {
                var breadcrumbs = [];
                var currentRoute = _this.route.root;
                var url = '';
                do {
                    var childrenRoutes = currentRoute.children;
                    currentRoute = null;
                    childrenRoutes.forEach(function (route) {
                        if (route.outlet === _this.outlet) {
                            var routeSnapshot = route.snapshot;
                            url += '/' + routeSnapshot.url.map(function (segment) { return segment.path; }).join('/');
                            breadcrumbs.push({
                                label: route.snapshot.data.title || '',
                                url: url,
                                queryParams: routeSnapshot.queryParams
                            });
                            currentRoute = route;
                        }
                    });
                } while (currentRoute);
                _this.breadcrumbsBehaviorSubject.next(Object.assign([], breadcrumbs));
                return breadcrumbs;
            });
        }
BreadcrumbService.ɵfac = function BreadcrumbService_Factory(t) { return new (t || BreadcrumbService)(ɵngcc0.ɵɵinject(ɵngcc4.Router), ɵngcc0.ɵɵinject(ɵngcc4.ActivatedRoute)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc4.Router }, { type: ɵngcc4.ActivatedRoute }]; }, null); })();
        return BreadcrumbService;
    }());
    BreadcrumbService.ɵprov = i0.ɵɵdefineInjectable({ factory: function BreadcrumbService_Factory() { return new BreadcrumbService(i0.ɵɵinject(i1$1.Router), i0.ɵɵinject(i1$1.ActivatedRoute)); }, token: BreadcrumbService, providedIn: "root" });
    BreadcrumbService.ctorParameters = function () { return [
        { type: i1$1.Router },
        { type: i1$1.ActivatedRoute }
    ]; };

    var BreadcrumbComponent = /** @class */ (function () {
        function BreadcrumbComponent() {
            this.divider = false;
            this.breadcrumbClass = true;
        }
        BreadcrumbComponent.prototype.ngOnInit = function () {
        };
        BreadcrumbComponent.prototype.ngOnChanges = function (changes) {
            if (changes.items) {
                this.setup();
            }
        };
        BreadcrumbComponent.prototype.setup = function () {
            var _this = this;
            if (this.items && this.items.length > 0) {
                this.breadcrumbs = new rxjs.Observable(function (observer) {
                    if (_this.items) {
                        observer.next(_this.items);
                    }
                });
            }
        };
        BreadcrumbComponent.prototype.ngOnDestroy = function () {
            this.breadcrumbs = null;
        };
BreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) { return new (t || BreadcrumbComponent)(); };
BreadcrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BreadcrumbComponent, selectors: [["c-breadcrumb"]], hostVars: 2, hostBindings: function BreadcrumbComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("breadcrumb", ctx.breadcrumbClass);
    } }, inputs: { divider: "divider", items: "items" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 4, vars: 3, consts: function () { var i18n_3; if (typeof ngI18nClosureMode !== "undefined" && ngI18nClosureMode) {
        var MSG_EXTERNAL_1573340103535294293$$BUNDLES_COREUI_ANGULAR_UMD_JS____4 = goog.getMsg("{$interpolation} ", { "interpolation": "\uFFFD0\uFFFD" });
        i18n_3 = MSG_EXTERNAL_1573340103535294293$$BUNDLES_COREUI_ANGULAR_UMD_JS____4;
    }
    else {
        i18n_3 = $localize(ɵngcc5.__makeTemplateObject([":\u241F615f5863f83a316b692cb88dc36570691be4d586\u241F1573340103535294293:", ":INTERPOLATION: "], [":\u241F615f5863f83a316b692cb88dc36570691be4d586\u241F1573340103535294293:", ":INTERPOLATION: "]), "\uFFFD0\uFFFD");
    } var i18n_5; if (typeof ngI18nClosureMode !== "undefined" && ngI18nClosureMode) {
        var MSG_EXTERNAL_2790673009523224325$$BUNDLES_COREUI_ANGULAR_UMD_JS____6 = goog.getMsg("{$interpolation}", { "interpolation": "\uFFFD0\uFFFD" });
        i18n_5 = MSG_EXTERNAL_2790673009523224325$$BUNDLES_COREUI_ANGULAR_UMD_JS____6;
    }
    else {
        i18n_5 = $localize(ɵngcc5.__makeTemplateObject([":\u241F8d663c4b400232e6d8c54ffd3c710c82f206cebb\u241F2790673009523224325:", ":INTERPOLATION:"], [":\u241F8d663c4b400232e6d8c54ffd3c710c82f206cebb\u241F2790673009523224325:", ":INTERPOLATION:"]), "\uFFFD0\uFFFD");
    } return [["ngFor", "", 3, "ngForOf"], [4, "ngIf"], ["class", "breadcrumb-item", 4, "ngIf"], ["class", "breadcrumb-item active", 3, "cHtmlAttr", 4, "ngIf"], [1, "breadcrumb-item"], [3, "routerLink", "cHtmlAttr", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state"], i18n_3, [1, "breadcrumb-item", "active", 3, "cHtmlAttr"], i18n_5]; }, template: function BreadcrumbComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementContainerStart(0);
        ɵngcc0.ɵɵtemplate(1, BreadcrumbComponent_ng_template_1_Template, 1, 1, "ng-template", 0);
        ɵngcc0.ɵɵpipe(2, "async");
        ɵngcc0.ɵɵprojection(3);
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(2, 1, ctx.breadcrumbs));
    } }, directives: function () { return [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc4.RouterLinkWithHref, HtmlAttributesDirective]; }, pipes: function () { return [ɵngcc1.AsyncPipe]; }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-breadcrumb',
                template: "<ng-container>\n  <ng-template ngFor let-breadcrumb [ngForOf]=\"breadcrumbs | async\" let-last = last>\n    <ng-container *ngIf=\"breadcrumb.label && (breadcrumb.url.slice(-1) == '/' || last)\">\n      <div *ngIf=\"!last\" class=\"breadcrumb-item\">\n        <a [routerLink]=\"breadcrumb.url\"\n           [cHtmlAttr]=\"breadcrumb.attributes\"\n           [target]=\"breadcrumb.attributes?.target\"\n           [queryParams]=\"breadcrumb.linkProps?.queryParams\"\n           [fragment]=\"breadcrumb.linkProps?.fragment\"\n           [queryParamsHandling]=\"breadcrumb.linkProps?.queryParamsHandling\"\n           [preserveFragment]=\"breadcrumb.linkProps?.preserveFragment\"\n           [skipLocationChange]=\"breadcrumb.linkProps?.skipLocationChange\"\n           [replaceUrl]=\"breadcrumb.linkProps?.replaceUrl\"\n           [state]=\"breadcrumb.linkProps?.state\"\n           i18n>{{breadcrumb.label}}\n        </a>\n      </div>\n      <span *ngIf=\"!last && divider\" ngPreserveWhitespaces=\"true\"> {{divider}} </span>\n      <span class=\"breadcrumb-item active\" *ngIf=\"last\" [cHtmlAttr]=\"breadcrumb.attributes\" i18n>{{breadcrumb.label}}</span>\n    </ng-container>\n  </ng-template>\n  <ng-content></ng-content>\n</ng-container>\n",
                styles: [""]
            }]
    }], function () { return []; }, { divider: [{
            type: i0.Input
        }], breadcrumbClass: [{
            type: i0.HostBinding,
            args: ['class.breadcrumb']
        }], items: [{
            type: i0.Input
        }] }); })();
        return BreadcrumbComponent;
    }());
    BreadcrumbComponent.ctorParameters = function () { return []; };
    BreadcrumbComponent.propDecorators = {
        items: [{ type: i0.Input }],
        divider: [{ type: i0.Input }],
        breadcrumbClass: [{ type: i0.HostBinding, args: ['class.breadcrumb',] }]
    };

    var BreadcrumbDirective = /** @class */ (function () {
        function BreadcrumbDirective(breadcrumbComponent, service) {
            this.breadcrumbComponent = breadcrumbComponent;
            this.service = service;
        }
        BreadcrumbDirective.prototype.ngOnInit = function () {
            this.breadcrumbComponent.breadcrumbs = this.service.breadcrumbs$;
        };
BreadcrumbDirective.ɵfac = function BreadcrumbDirective_Factory(t) { return new (t || BreadcrumbDirective)(ɵngcc0.ɵɵdirectiveInject(BreadcrumbComponent, 1), ɵngcc0.ɵɵdirectiveInject(BreadcrumbService)); };
BreadcrumbDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BreadcrumbDirective, selectors: [["", "cBreadcrumbRouter", ""]], exportAs: ["cBreadcrumbRouter"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cBreadcrumbRouter]',
                exportAs: 'cBreadcrumbRouter'
            }]
    }], function () { return [{ type: BreadcrumbComponent, decorators: [{
                type: i0.Host
            }] }, { type: BreadcrumbService }]; }, null); })();
        return BreadcrumbDirective;
    }());
    BreadcrumbDirective.ctorParameters = function () { return [
        { type: BreadcrumbComponent, decorators: [{ type: i0.Host }] },
        { type: BreadcrumbService }
    ]; };

    var OutClickService = /** @class */ (function () {
        function OutClickService() {
            this.outClick = new rxjs.BehaviorSubject({ event: undefined });
            this.outClick$ = this.outClick.asObservable();
        }
        OutClickService.prototype.onClick = function (message) {
            this.outClick.next(message);
        };
OutClickService.ɵfac = function OutClickService_Factory(t) { return new (t || OutClickService)(); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OutClickService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
        return OutClickService;
    }());
    OutClickService.ɵprov = i0.ɵɵdefineInjectable({ factory: function OutClickService_Factory() { return new OutClickService(); }, token: OutClickService, providedIn: "root" });
    OutClickService.ctorParameters = function () { return []; };

    var OutClickDirective = /** @class */ (function () {
        function OutClickDirective(elementRef, outClickService) {
            this.elementRef = elementRef;
            this.outClickService = outClickService;
        }
        OutClickDirective.prototype.onDocumentClick = function ($event) {
            var targetElement = $event.target;
            if (targetElement && !this.elementRef.nativeElement.contains(targetElement)) {
                this.outClickService.onClick({ event: $event });
            }
        };
        OutClickDirective.prototype.ngOnInit = function () {
            this.outClickSubscription = this.outClickService.outClick$.subscribe(function (message) {
            });
        };
        OutClickDirective.prototype.ngOnDestroy = function () {
            this.outClickSubscription.unsubscribe();
        };
OutClickDirective.ɵfac = function OutClickDirective_Factory(t) { return new (t || OutClickDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(OutClickService)); };
OutClickDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: OutClickDirective, selectors: [["", "cOutClick", ""]], hostBindings: function OutClickDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function OutClickDirective_click_HostBindingHandler($event) { return ctx.onDocumentClick($event); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, exportAs: ["cOutClick"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OutClickDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cOutClick]',
                exportAs: 'cOutClick'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: OutClickService }]; }, { onDocumentClick: [{
            type: i0.HostListener,
            args: ['document:click', ['$event']]
        }] }); })();
        return OutClickDirective;
    }());
    OutClickDirective.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: OutClickService }
    ]; };
    OutClickDirective.propDecorators = {
        onDocumentClick: [{ type: i0.HostListener, args: ['document:click', ['$event'],] }]
    };

    var HtmlAttributesDirective = /** @class */ (function () {
        function HtmlAttributesDirective(renderer, el) {
            this.renderer = renderer;
            this.el = el;
        }
        HtmlAttributesDirective.prototype.ngOnInit = function () {
            var attribs = this.cHtmlAttr;
            for (var attr in attribs) {
                if (attr === 'style' && typeof (attribs[attr]) === 'object') {
                    this.setStyle(attribs[attr]);
                }
                else if (attr === 'class') {
                    this.addClass(attribs[attr]);
                }
                else {
                    this.setAttrib(attr, attribs[attr]);
                }
            }
        };
        HtmlAttributesDirective.prototype.setStyle = function (styles) {
            for (var style in styles) {
                if (style) {
                    this.renderer.setStyle(this.el.nativeElement, style, styles[style]);
                }
            }
        };
        HtmlAttributesDirective.prototype.addClass = function (classes) {
            var _this = this;
            var classArray = (Array.isArray(classes) ? classes : classes.split(' '));
            classArray.filter(function (element) { return element.length > 0; }).forEach(function (element) {
                _this.renderer.addClass(_this.el.nativeElement, element);
            });
        };
        HtmlAttributesDirective.prototype.setAttrib = function (key, value) {
            value !== null ?
                this.renderer.setAttribute(this.el.nativeElement, key, value) :
                this.renderer.removeAttribute(this.el.nativeElement, key);
        };
HtmlAttributesDirective.ɵfac = function HtmlAttributesDirective_Factory(t) { return new (t || HtmlAttributesDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
HtmlAttributesDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HtmlAttributesDirective, selectors: [["", "cHtmlAttr", ""]], inputs: { cHtmlAttr: "cHtmlAttr" }, exportAs: ["cHtmlAttr"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HtmlAttributesDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cHtmlAttr]',
                exportAs: 'cHtmlAttr'
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { cHtmlAttr: [{
            type: i0.Input
        }] }); })();
        return HtmlAttributesDirective;
    }());
    HtmlAttributesDirective.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef }
    ]; };
    HtmlAttributesDirective.propDecorators = {
        cHtmlAttr: [{ type: i0.Input }]
    };

    var SharedModule = /** @class */ (function () {
        function SharedModule() {
        }
        SharedModule.forRoot = function () {
            return {
                ngModule: SharedModule,
                providers: [
                    { provide: OutClickService }
                ]
            };
        };
SharedModule.ɵfac = function SharedModule_Factory(t) { return new (t || SharedModule)(); };
SharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SharedModule });
SharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [], imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SharedModule, { declarations: [OutClickDirective, HtmlAttributesDirective], imports: [ɵngcc1.CommonModule], exports: [OutClickDirective, HtmlAttributesDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SharedModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    i1.CommonModule
                ],
                declarations: [
                    OutClickDirective,
                    HtmlAttributesDirective
                ],
                exports: [
                    OutClickDirective,
                    HtmlAttributesDirective
                ],
                providers: []
            }]
    }], function () { return []; }, null); })();
        return SharedModule;
    }());

    var sidebarCssClasses = [
        'c-sidebar-show',
        'c-sidebar-sm-show',
        'c-sidebar-md-show',
        'c-sidebar-lg-show',
        'c-sidebar-xl-show'
    ];
    var validBreakpoints = ['sm', 'md', 'lg', 'xl'];
    function checkBreakpoint(breakpoint, list) {
        return list.indexOf(breakpoint) > -1;
    }

    var BreadcrumbModule = /** @class */ (function () {
        function BreadcrumbModule() {
        }
BreadcrumbModule.ɵfac = function BreadcrumbModule_Factory(t) { return new (t || BreadcrumbModule)(); };
BreadcrumbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BreadcrumbModule });
BreadcrumbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [BreadcrumbService], imports: [[i1.CommonModule, i1$1.RouterModule, SharedModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BreadcrumbModule, { declarations: [BreadcrumbComponent, BreadcrumbDirective], imports: [ɵngcc1.CommonModule, ɵngcc4.RouterModule, SharedModule], exports: [BreadcrumbComponent, BreadcrumbDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbModule, [{
        type: i0.NgModule,
        args: [{
                imports: [i1.CommonModule, i1$1.RouterModule, SharedModule],
                exports: [BreadcrumbComponent, BreadcrumbDirective],
                declarations: [BreadcrumbComponent, BreadcrumbDirective],
                providers: [BreadcrumbService]
            }]
    }], function () { return []; }, null); })();
        return BreadcrumbModule;
    }());

    var ButtonComponent = /** @class */ (function () {
        function ButtonComponent() {
            this.block = null;
            this.size = '';
            this.type = 'button';
            this.tabindex = null;
            this.disabled = null;
            this.pressed = null;
        }
        Object.defineProperty(ButtonComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var outlineSuffix = this.variant === 'outline' ? 'outline-' : '';
                var classes = classNames__default['default']((_a = {
                        btn: true
                    },
                    _a["btn-" + outlineSuffix + this.color] = this.color,
                    _a["btn-" + this.size] = this.size,
                    _a["btn-ghost-" + this.color] = this.variant === 'ghost',
                    _a['btn-block'] = this.block != null,
                    _a['btn-pill'] = this.shape === 'pill',
                    _a['btn-square'] = this.shape === 'square',
                    _a.disabled = !!this.disabled,
                    _a.focus = !this.variant && this.pressed != null,
                    _a.active = this.variant && this.pressed != null,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonComponent.prototype, "isDisabled", {
            get: function () {
                return (this.disabled !== 'false' && this.disabled !== false && this.disabled !== null) ? this.disabled : null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonComponent.prototype, "getTabindex", {
            get: function () {
                return this.disabled ? null : this.tabindex != null ? this.tabindex : '0';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonComponent.prototype, "hostType", {
            get: function () {
                return this.type;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonComponent.prototype, "hostRole", {
            get: function () {
                return 'button';
            },
            enumerable: false,
            configurable: true
        });
        ButtonComponent.prototype.ngOnInit = function () {
        };
ButtonComponent.ɵfac = function ButtonComponent_Factory(t) { return new (t || ButtonComponent)(); };
ButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ButtonComponent, selectors: [["c-button"], ["", "c-button", ""]], hostVars: 7, hostBindings: function ButtonComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-pressed", ctx.pressed)("disabled", ctx.isDisabled)("tabindex", ctx.getTabindex)("type", ctx.hostType)("role", ctx.hostRole);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { block: "block", size: "size", type: "type", tabindex: "tabindex", disabled: "disabled", pressed: "pressed", shape: "shape", variant: "variant", color: "color" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ButtonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [".disabled[_nghost-%COMP%], [_nghost-%COMP%]:disabled{cursor:default}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-button, [c-button]',
                template: '<ng-content></ng-content>',
                styles: [":host.disabled,:host:disabled{cursor:default}"]
            }]
    }], function () { return []; }, { block: [{
            type: i0.Input
        }], size: [{
            type: i0.Input
        }], type: [{
            type: i0.Input
        }], tabindex: [{
            type: i0.Input
        }], disabled: [{
            type: i0.Input
        }], pressed: [{
            type: i0.HostBinding,
            args: ['attr.aria-pressed']
        }, {
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], isDisabled: [{
            type: i0.HostBinding,
            args: ['attr.disabled']
        }], getTabindex: [{
            type: i0.HostBinding,
            args: ['attr.tabindex']
        }], hostType: [{
            type: i0.HostBinding,
            args: ['attr.type']
        }], hostRole: [{
            type: i0.HostBinding,
            args: ['attr.role']
        }], shape: [{
            type: i0.Input
        }], variant: [{
            type: i0.Input
        }], color: [{
            type: i0.Input
        }] }); })();
        return ButtonComponent;
    }());
    ButtonComponent.ctorParameters = function () { return []; };
    ButtonComponent.propDecorators = {
        block: [{ type: i0.Input }],
        shape: [{ type: i0.Input }],
        variant: [{ type: i0.Input }],
        size: [{ type: i0.Input }],
        color: [{ type: i0.Input }],
        type: [{ type: i0.Input }],
        tabindex: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }],
        disabled: [{ type: i0.Input }],
        isDisabled: [{ type: i0.HostBinding, args: ['attr.disabled',] }],
        pressed: [{ type: i0.HostBinding, args: ['attr.aria-pressed',] }, { type: i0.Input }],
        getTabindex: [{ type: i0.HostBinding, args: ['attr.tabindex',] }],
        hostType: [{ type: i0.HostBinding, args: ['attr.type',] }],
        hostRole: [{ type: i0.HostBinding, args: ['attr.role',] }]
    };

    var ButtonDirective = /** @class */ (function () {
        function ButtonDirective() {
            this.block = null;
            this.size = '';
            this.type = 'button';
            this.tabindex = null;
            this.disabled = null;
            this.pressed = null;
        }
        Object.defineProperty(ButtonDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonDirective.prototype, "hostClasses", {
            get: function () {
                var _a;
                var outlineSuffix = this.variant === 'outline' ? 'outline-' : '';
                var classes = classNames__default['default']((_a = {
                        btn: true
                    },
                    _a["btn-" + outlineSuffix + this.color] = this.color,
                    _a["btn-" + this.size] = this.size,
                    _a["btn-ghost-" + this.color] = this.variant === 'ghost',
                    _a['btn-block'] = this.block != null,
                    _a['btn-pill'] = this.shape === 'pill',
                    _a['btn-square'] = this.shape === 'square',
                    _a.disabled = !!this.disabled,
                    _a.focus = !this.variant && this.pressed != null,
                    _a.active = this.variant && this.pressed != null,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonDirective.prototype, "isDisabled", {
            get: function () {
                return (this.disabled !== 'false' && this.disabled !== false && this.disabled !== null) ? this.disabled : null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonDirective.prototype, "getTabindex", {
            get: function () {
                return this.disabled ? null : this.tabindex != null ? this.tabindex : '0';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonDirective.prototype, "hostType", {
            get: function () {
                return this.type;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonDirective.prototype, "hostRole", {
            get: function () {
                return 'button';
            },
            enumerable: false,
            configurable: true
        });
        ButtonDirective.prototype.ngOnInit = function () {
        };
ButtonDirective.ɵfac = function ButtonDirective_Factory(t) { return new (t || ButtonDirective)(); };
ButtonDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ButtonDirective, selectors: [["", "cButton", ""]], hostVars: 7, hostBindings: function ButtonDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-pressed", ctx.pressed)("disabled", ctx.isDisabled)("tabindex", ctx.getTabindex)("type", ctx.hostType)("role", ctx.hostRole);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { block: "block", size: "size", type: "type", tabindex: "tabindex", disabled: "disabled", pressed: "pressed", shape: "shape", variant: "variant", color: "color" }, exportAs: ["cButton"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cButton]',
                exportAs: 'cButton'
            }]
    }], function () { return []; }, { block: [{
            type: i0.Input
        }], size: [{
            type: i0.Input
        }], type: [{
            type: i0.Input
        }], tabindex: [{
            type: i0.Input
        }], disabled: [{
            type: i0.Input
        }], pressed: [{
            type: i0.HostBinding,
            args: ['attr.aria-pressed']
        }, {
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], isDisabled: [{
            type: i0.HostBinding,
            args: ['attr.disabled']
        }], getTabindex: [{
            type: i0.HostBinding,
            args: ['attr.tabindex']
        }], hostType: [{
            type: i0.HostBinding,
            args: ['attr.type']
        }], hostRole: [{
            type: i0.HostBinding,
            args: ['attr.role']
        }], shape: [{
            type: i0.Input
        }], variant: [{
            type: i0.Input
        }], color: [{
            type: i0.Input
        }] }); })();
        return ButtonDirective;
    }());
    ButtonDirective.ctorParameters = function () { return []; };
    ButtonDirective.propDecorators = {
        block: [{ type: i0.Input }],
        shape: [{ type: i0.Input }],
        variant: [{ type: i0.Input }],
        size: [{ type: i0.Input }],
        color: [{ type: i0.Input }],
        type: [{ type: i0.Input }],
        tabindex: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }],
        disabled: [{ type: i0.Input }],
        isDisabled: [{ type: i0.HostBinding, args: ['attr.disabled',] }],
        pressed: [{ type: i0.HostBinding, args: ['attr.aria-pressed',] }, { type: i0.Input }],
        getTabindex: [{ type: i0.HostBinding, args: ['attr.tabindex',] }],
        hostType: [{ type: i0.HostBinding, args: ['attr.type',] }],
        hostRole: [{ type: i0.HostBinding, args: ['attr.role',] }]
    };

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from) {
        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
            to[j] = from[i];
        return to;
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var ButtonGroupComponent = /** @class */ (function () {
        function ButtonGroupComponent(renderer, hostElement) {
            this.renderer = renderer;
            this.hostElement = hostElement;
            this.size = '';
            this.vertical = null;
            this.classes = Object.create(null);
            this.aria = 'Button group';
            this.host = this.hostElement.nativeElement;
        }
        Object.defineProperty(ButtonGroupComponent.prototype, "hostRole", {
            get: function () {
                return 'group';
            },
            enumerable: false,
            configurable: true
        });
        ButtonGroupComponent.prototype.ngOnInit = function () {
            this.addClasses();
        };
        ButtonGroupComponent.prototype.addClasses = function () {
            var e_1, _a;
            this.setClasses();
            try {
                for (var _b = __values(Object.entries(this.classes)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var _d = __read(_c.value, 2), key = _d[0], value = _d[1];
                    if (value) {
                        this.renderer.addClass(this.host, key);
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        };
        ButtonGroupComponent.prototype.setClasses = function () {
            this.classes['btn-group-vertical'] = Boolean(this.vertical) || this.vertical != null;
            this.classes['btn-group'] = !this.classes['btn-group-vertical'];
            this.classes["btn-group-" + this.size] = Boolean(this.size);
        };
ButtonGroupComponent.ɵfac = function ButtonGroupComponent_Factory(t) { return new (t || ButtonGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ButtonGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ButtonGroupComponent, selectors: [["c-button-group"]], hostVars: 2, hostBindings: function ButtonGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-label", ctx.aria)("role", ctx.hostRole);
    } }, inputs: { size: "size", vertical: "vertical" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ButtonGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonGroupComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-button-group',
                template: '<ng-content></ng-content>',
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { size: [{
            type: i0.Input
        }], vertical: [{
            type: i0.Input
        }], aria: [{
            type: i0.HostBinding,
            args: ['attr.aria-label']
        }], hostRole: [{
            type: i0.HostBinding,
            args: ['attr.role']
        }] }); })();
        return ButtonGroupComponent;
    }());
    ButtonGroupComponent.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef }
    ]; };
    ButtonGroupComponent.propDecorators = {
        size: [{ type: i0.Input }],
        vertical: [{ type: i0.Input }],
        aria: [{ type: i0.HostBinding, args: ['attr.aria-label',] }],
        hostRole: [{ type: i0.HostBinding, args: ['attr.role',] }]
    };

    var ButtonToolbarComponent = /** @class */ (function () {
        function ButtonToolbarComponent() {
            this.justify = '';
            this.class = '';
            this.classes = Object.create(null);
            this.aria = 'Button toolbar';
        }
        Object.defineProperty(ButtonToolbarComponent.prototype, "hostRole", {
            get: function () {
                return 'toolbar';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonToolbarComponent.prototype, "hostClasses", {
            get: function () {
                return this.getClasses();
            },
            enumerable: false,
            configurable: true
        });
        ButtonToolbarComponent.prototype.ngOnInit = function () {
        };
        ButtonToolbarComponent.prototype.getClasses = function () {
            this.classes['btn-toolbar'] = true;
            this.classes["justify-content-start"] = this.justify === 'start';
            this.classes["justify-content-end"] = this.justify === 'end';
            this.classes["justify-content-center}"] = this.justify === 'center';
            this.classes["justify-content-between"] = this.justify === 'between';
            return classNames__default['default'](this.classes, this.class, this.ngClass);
        };
ButtonToolbarComponent.ɵfac = function ButtonToolbarComponent_Factory(t) { return new (t || ButtonToolbarComponent)(); };
ButtonToolbarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ButtonToolbarComponent, selectors: [["c-button-toolbar"]], hostVars: 4, hostBindings: function ButtonToolbarComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-label", ctx.aria)("role", ctx.hostRole);
        ɵngcc0.ɵɵclassMap(ctx.hostClasses);
    } }, inputs: { justify: "justify", class: "class", ngClass: "ngClass" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ButtonToolbarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{display:flex}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonToolbarComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-button-toolbar',
                template: '<ng-content></ng-content>',
                styles: [":host{display:flex}"]
            }]
    }], function () { return []; }, { justify: [{
            type: i0.Input
        }], class: [{
            type: i0.Input
        }], aria: [{
            type: i0.HostBinding,
            args: ['attr.aria-label']
        }], hostRole: [{
            type: i0.HostBinding,
            args: ['attr.role']
        }], hostClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], ngClass: [{
            type: i0.Input
        }] }); })();
        return ButtonToolbarComponent;
    }());
    ButtonToolbarComponent.ctorParameters = function () { return []; };
    ButtonToolbarComponent.propDecorators = {
        justify: [{ type: i0.Input }],
        class: [{ type: i0.Input }],
        ngClass: [{ type: i0.Input }],
        aria: [{ type: i0.HostBinding, args: ['attr.aria-label',] }],
        hostRole: [{ type: i0.HostBinding, args: ['attr.role',] }],
        hostClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var RADIO_CONTROL_VALUE_ACCESSOR = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return ButtonRadioGroupDirective; }),
        multi: true
    };
    var ButtonRadioGroupDirective = /** @class */ (function () {
        function ButtonRadioGroupDirective(cdr) {
            this.cdr = cdr;
            this.onChange = Function.prototype;
            this.onTouched = Function.prototype;
        }
        Object.defineProperty(ButtonRadioGroupDirective.prototype, "value", {
            get: function () {
                return this._value;
            },
            set: function (value) {
                this._value = value;
            },
            enumerable: false,
            configurable: true
        });
        ButtonRadioGroupDirective.prototype.writeValue = function (value) {
            this._value = value;
            this.cdr.markForCheck();
        };
        ButtonRadioGroupDirective.prototype.registerOnChange = function (fn) {
            this.onChange = fn;
        };
        ButtonRadioGroupDirective.prototype.registerOnTouched = function (fn) {
            this.onTouched = fn;
        };
ButtonRadioGroupDirective.ɵfac = function ButtonRadioGroupDirective_Factory(t) { return new (t || ButtonRadioGroupDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ButtonRadioGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ButtonRadioGroupDirective, selectors: [["", "cButtonRadioGroup", ""]], features: [ɵngcc0.ɵɵProvidersFeature([RADIO_CONTROL_VALUE_ACCESSOR])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonRadioGroupDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cButtonRadioGroup]',
                providers: [RADIO_CONTROL_VALUE_ACCESSOR]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, null); })();
        return ButtonRadioGroupDirective;
    }());
    ButtonRadioGroupDirective.ctorParameters = function () { return [
        { type: i0.ChangeDetectorRef }
    ]; };

    var RADIO_CONTROL_VALUE_ACCESSOR$1 = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return ButtonRadioDirective; }),
        multi: true
    };
    var ButtonRadioDirective = /** @class */ (function () {
        function ButtonRadioDirective(el, cdr, group, renderer) {
            this.el = el;
            this.cdr = cdr;
            this.group = group;
            this.renderer = renderer;
            this.onChange = Function.prototype;
            this.onTouched = Function.prototype;
        }
        Object.defineProperty(ButtonRadioDirective.prototype, "value", {
            get: function () {
                return this.group ? this.group.value : this._value;
            },
            set: function (value) {
                if (this.group) {
                    this.group.value = value;
                    return;
                }
                this._value = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonRadioDirective.prototype, "disabled", {
            get: function () {
                return this._disabled;
            },
            set: function (disabled) {
                this._disabled = disabled;
                this.setDisabledState(disabled);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonRadioDirective.prototype, "isActive", {
            get: function () {
                return this.btnRadio === this.value;
            },
            enumerable: false,
            configurable: true
        });
        ButtonRadioDirective.prototype.onClick = function () {
            if (this.el.nativeElement.attributes.disabled || !this.uncheckable && this.btnRadio === this.value) {
                return;
            }
            this.value = this.uncheckable && this.btnRadio === this.value ? undefined : this.btnRadio;
            this._onChange(this.value);
        };
        ButtonRadioDirective.prototype.ngOnInit = function () {
            this.uncheckable = typeof this.uncheckable !== 'undefined';
        };
        ButtonRadioDirective.prototype.onBlur = function () {
            this.onTouched();
        };
        ButtonRadioDirective.prototype._onChange = function (value) {
            if (this.group) {
                this.group.onTouched();
                this.group.onChange(value);
                return;
            }
            this.onTouched();
            this.onChange(value);
        };
        ButtonRadioDirective.prototype.writeValue = function (value) {
            this.value = value;
            this.cdr.markForCheck();
        };
        ButtonRadioDirective.prototype.registerOnChange = function (fn) {
            this.onChange = fn;
        };
        ButtonRadioDirective.prototype.registerOnTouched = function (fn) {
            this.onTouched = fn;
        };
        ButtonRadioDirective.prototype.setDisabledState = function (disabled) {
            if (disabled) {
                this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');
                return;
            }
            this.renderer.removeAttribute(this.el.nativeElement, 'disabled');
        };
ButtonRadioDirective.ɵfac = function ButtonRadioDirective_Factory(t) { return new (t || ButtonRadioDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ButtonRadioGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
ButtonRadioDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ButtonRadioDirective, selectors: [["", "cBtnRadio", ""]], hostVars: 3, hostBindings: function ButtonRadioDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ButtonRadioDirective_click_HostBindingHandler() { return ctx.onClick(); });
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-pressed", ctx.isActive);
        ɵngcc0.ɵɵclassProp("active", ctx.isActive);
    } }, inputs: { value: "value", disabled: "disabled", uncheckable: "uncheckable", btnRadio: "btnRadio" }, exportAs: ["cBtnRadio"], features: [ɵngcc0.ɵɵProvidersFeature([RADIO_CONTROL_VALUE_ACCESSOR$1])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonRadioDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cBtnRadio]',
                exportAs: 'cBtnRadio',
                providers: [RADIO_CONTROL_VALUE_ACCESSOR$1]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ButtonRadioGroupDirective, decorators: [{
                type: i0.Optional
            }] }, { type: ɵngcc0.Renderer2 }]; }, { value: [{
            type: i0.Input
        }], disabled: [{
            type: i0.Input
        }], isActive: [{
            type: i0.HostBinding,
            args: ['class.active']
        }, {
            type: i0.HostBinding,
            args: ['attr.aria-pressed']
        }], onClick: [{
            type: i0.HostListener,
            args: ['click']
        }], uncheckable: [{
            type: i0.Input
        }], btnRadio: [{
            type: i0.Input
        }] }); })();
        return ButtonRadioDirective;
    }());
    ButtonRadioDirective.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: i0.ChangeDetectorRef },
        { type: ButtonRadioGroupDirective, decorators: [{ type: i0.Optional }] },
        { type: i0.Renderer2 }
    ]; };
    ButtonRadioDirective.propDecorators = {
        btnRadio: [{ type: i0.Input }],
        uncheckable: [{ type: i0.Input }],
        value: [{ type: i0.Input }],
        disabled: [{ type: i0.Input }],
        isActive: [{ type: i0.HostBinding, args: ['class.active',] }, { type: i0.HostBinding, args: ['attr.aria-pressed',] }],
        onClick: [{ type: i0.HostListener, args: ['click',] }]
    };

    var ButtonModule = /** @class */ (function () {
        function ButtonModule() {
        }
ButtonModule.ɵfac = function ButtonModule_Factory(t) { return new (t || ButtonModule)(); };
ButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ButtonModule });
ButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ButtonModule, { declarations: [ButtonComponent, ButtonDirective, ButtonGroupComponent, ButtonToolbarComponent, ButtonRadioDirective, ButtonRadioGroupDirective], imports: [ɵngcc1.CommonModule], exports: [ButtonComponent, ButtonDirective, ButtonGroupComponent, ButtonToolbarComponent, ButtonRadioDirective, ButtonRadioGroupDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ButtonModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    ButtonComponent,
                    ButtonDirective,
                    ButtonGroupComponent,
                    ButtonToolbarComponent,
                    ButtonRadioDirective,
                    ButtonRadioGroupDirective
                ],
                imports: [
                    i1.CommonModule,
                ],
                exports: [
                    ButtonComponent,
                    ButtonDirective,
                    ButtonGroupComponent,
                    ButtonToolbarComponent,
                    ButtonRadioDirective,
                    ButtonRadioGroupDirective
                ]
            }]
    }], function () { return []; }, null); })();
        return ButtonModule;
    }());

    var CalloutComponent = /** @class */ (function () {
        function CalloutComponent() {
        }
        Object.defineProperty(CalloutComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CalloutComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'c-callout': true
                    },
                    _a["c-callout-" + this.color] = !!this.color,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
CalloutComponent.ɵfac = function CalloutComponent_Factory(t) { return new (t || CalloutComponent)(); };
CalloutComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CalloutComponent, selectors: [["c-callout"], ["", "c-callout", ""]], hostVars: 2, hostBindings: function CalloutComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { color: "color" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function CalloutComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{display:block}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalloutComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-callout, [c-callout]',
                template: "<ng-content></ng-content>",
                styles: [":host{display:block}"]
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], color: [{
            type: i0.Input
        }] }); })();
        return CalloutComponent;
    }());
    CalloutComponent.ctorParameters = function () { return []; };
    CalloutComponent.propDecorators = {
        color: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var CalloutModule = /** @class */ (function () {
        function CalloutModule() {
        }
CalloutModule.ɵfac = function CalloutModule_Factory(t) { return new (t || CalloutModule)(); };
CalloutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CalloutModule });
CalloutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CalloutModule, { declarations: [CalloutComponent], imports: [ɵngcc1.CommonModule], exports: [CalloutComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalloutModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [CalloutComponent],
                exports: [CalloutComponent],
                imports: [
                    i1.CommonModule
                ]
            }]
    }], function () { return []; }, null); })();
        return CalloutModule;
    }());

    var NoZoneBaseChartDirective = /** @class */ (function (_super) {
        __extends(NoZoneBaseChartDirective, _super);
        function NoZoneBaseChartDirective(element, themeService, zone) {
            var _this = _super.call(this, element, themeService) || this;
            _this.zone = zone;
            var refresh = _this.refresh;
            _this.refresh = function () {
                _this.zone.runOutsideAngular(refresh.bind(_this));
            };
            return _this;
        }
NoZoneBaseChartDirective.ɵfac = function NoZoneBaseChartDirective_Factory(t) { return new (t || NoZoneBaseChartDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ThemeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
NoZoneBaseChartDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NoZoneBaseChartDirective, selectors: [["canvas", "cNoZoneBaseChart", ""]], exportAs: ["base-chart"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoZoneBaseChartDirective, [{
        type: i0.Directive,
        args: [{
                selector: 'canvas[cNoZoneBaseChart]',
                exportAs: 'base-chart'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc6.ThemeService }, { type: ɵngcc0.NgZone }]; }, null); })();
        return NoZoneBaseChartDirective;
    }(ng2Charts.BaseChartDirective));
    NoZoneBaseChartDirective.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: ng2Charts.ThemeService },
        { type: i0.NgZone }
    ]; };

    var ChartModule = /** @class */ (function () {
        function ChartModule() {
        }
ChartModule.ɵfac = function ChartModule_Factory(t) { return new (t || ChartModule)(); };
ChartModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ChartModule });
ChartModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChartModule, { declarations: [NoZoneBaseChartDirective], imports: [ɵngcc1.CommonModule], exports: [NoZoneBaseChartDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ChartModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    NoZoneBaseChartDirective
                ],
                imports: [
                    i1.CommonModule
                ],
                exports: [
                    NoZoneBaseChartDirective
                ]
            }]
    }], function () { return []; }, null); })();
        return ChartModule;
    }());

    var CarouselService = /** @class */ (function () {
        function CarouselService() {
            this.carouselIndex = new rxjs.BehaviorSubject({});
            this.carouselIndex$ = this.carouselIndex.asObservable();
        }
        CarouselService.prototype.setIndex = function (index) {
            this.carouselIndex.next(index);
        };
CarouselService.ɵfac = function CarouselService_Factory(t) { return new (t || CarouselService)(); };
CarouselService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CarouselService, factory: function (t) { return CarouselService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselService, [{
        type: i0.Injectable
    }], function () { return []; }, null); })();
        return CarouselService;
    }());
    CarouselService.ctorParameters = function () { return []; };

    var CarouselState = /** @class */ (function () {
        function CarouselState(carouselService) {
            this.carouselService = carouselService;
            this._state = {
                activeItemIndex: -1,
                animate: true,
                items: [],
                direction: 'next',
            };
        }
        Object.defineProperty(CarouselState.prototype, "state", {
            get: function () {
                return this._state;
            },
            set: function (state) {
                var prevState = Object.assign({}, this._state);
                var nextState = Object.assign(Object.assign({}, this._state), state);
                this._state = nextState;
                if (prevState.activeItemIndex !== nextState.activeItemIndex) {
                    this.carouselService.setIndex({ active: nextState.activeItemIndex });
                }
            },
            enumerable: false,
            configurable: true
        });
        CarouselState.prototype.setItems = function (newItems) {
            if (newItems.length) {
                var itemsArray = newItems.toArray();
                itemsArray.forEach(function (item, i) {
                    item.index = i;
                });
                this.state = {
                    items: itemsArray,
                };
            }
            else {
                this.reset();
            }
        };
        CarouselState.prototype.setNextIndex = function (nextIndex) {
            this.carouselService.setIndex(nextIndex);
        };
        CarouselState.prototype.direction = function (direction) {
            if (direction === void 0) { direction = 'next'; }
            this.state = { direction: direction };
            var _a = this.state, activeItemIndex = _a.activeItemIndex, items = _a.items;
            var itemsCount = items.length;
            return direction === 'next' ?
                (activeItemIndex === itemsCount - 1 ? 0 : activeItemIndex + 1) :
                (activeItemIndex === 0 ? itemsCount - 1 : activeItemIndex - 1);
        };
        CarouselState.prototype.reset = function () {
            this.state = {
                activeItemIndex: -1,
                animate: true,
                items: [],
                direction: 'next',
            };
        };
CarouselState.ɵfac = function CarouselState_Factory(t) { return new (t || CarouselState)(ɵngcc0.ɵɵinject(CarouselService)); };
CarouselState.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CarouselState, factory: function (t) { return CarouselState.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselState, [{
        type: i0.Injectable
    }], function () { return [{ type: CarouselService }]; }, null); })();
        return CarouselState;
    }());
    CarouselState.ctorParameters = function () { return [
        { type: CarouselService }
    ]; };

    var CarouselConfig = /** @class */ (function () {
        function CarouselConfig() {
            this.activeIndex = 0;
            this.animate = true;
            this.direction = 'next';
            this.interval = 3000;
        }
CarouselConfig.ɵfac = function CarouselConfig_Factory(t) { return new (t || CarouselConfig)(); };
CarouselConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CarouselConfig, factory: function (t) { return CarouselConfig.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselConfig, [{
        type: i0.Injectable
    }], function () { return []; }, null); })();
        return CarouselConfig;
    }());

    var CarouselComponent = /** @class */ (function () {
        function CarouselComponent(config, carouselService, carouselState) {
            this.config = config;
            this.carouselService = carouselService;
            this.carouselState = carouselState;
            this.activeIndex = 0;
            this.animate = true;
            this.direction = 'next';
            this.interval = 0;
            this.itemChange = new i0.EventEmitter();
            this.carouselClass = true;
            this.carouselSlideClass = true;
            Object.assign(this, config);
        }
        CarouselComponent.prototype.onMouseenter = function ($event) {
            this.resetTimer();
        };
        CarouselComponent.prototype.onMouseleave = function ($event) {
            this.setTimer();
        };
        CarouselComponent.prototype.ngOnInit = function () {
            this.carouselStateSubscribe();
        };
        CarouselComponent.prototype.ngOnDestroy = function () {
            this.carouselStateSubscribe(false);
        };
        CarouselComponent.prototype.ngAfterContentInit = function () {
            this.carouselState.state = { activeItemIndex: this.activeIndex, animate: this.animate };
            this.setTimer();
        };
        CarouselComponent.prototype.setTimer = function () {
            var _this = this;
            this.resetTimer();
            if (this.interval > 0) {
                this.timerId = setTimeout(function () {
                    var nextIndex = _this.carouselState.direction(_this.direction);
                    _this.carouselState.state = { activeItemIndex: nextIndex };
                }, this.interval);
            }
        };
        CarouselComponent.prototype.resetTimer = function () {
            clearTimeout(this.timerId);
        };
        CarouselComponent.prototype.carouselStateSubscribe = function (subscribe) {
            var _this = this;
            if (subscribe === void 0) { subscribe = true; }
            if (subscribe) {
                this.carouselIndexSubscription = this.carouselService.carouselIndex$.subscribe(function (nextIndex) {
                    if ('active' in nextIndex) {
                        _this.setTimer();
                    }
                });
            }
            else {
                this.carouselIndexSubscription.unsubscribe();
            }
        };
CarouselComponent.ɵfac = function CarouselComponent_Factory(t) { return new (t || CarouselComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselConfig), ɵngcc0.ɵɵdirectiveInject(CarouselService), ɵngcc0.ɵɵdirectiveInject(CarouselState)); };
CarouselComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CarouselComponent, selectors: [["c-carousel"]], hostVars: 4, hostBindings: function CarouselComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("mouseenter", function CarouselComponent_mouseenter_HostBindingHandler($event) { return ctx.onMouseenter($event); })("mousedown", function CarouselComponent_mousedown_HostBindingHandler($event) { return ctx.onMouseenter($event); })("mouseleave", function CarouselComponent_mouseleave_HostBindingHandler($event) { return ctx.onMouseleave($event); })("mouseup", function CarouselComponent_mouseup_HostBindingHandler($event) { return ctx.onMouseleave($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("carousel", ctx.carouselClass)("slide", ctx.carouselSlideClass);
    } }, inputs: { activeIndex: "activeIndex", animate: "animate", direction: "direction", interval: "interval" }, outputs: { itemChange: "itemChange" }, features: [ɵngcc0.ɵɵProvidersFeature([CarouselService, CarouselState, CarouselConfig])], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CarouselComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{display:block}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-carousel',
                template: "<ng-content></ng-content>\n",
                providers: [CarouselService, CarouselState, CarouselConfig],
                styles: [":host{display:block}"]
            }]
    }], function () { return [{ type: CarouselConfig, decorators: [{
                type: i0.Inject,
                args: [CarouselConfig]
            }] }, { type: CarouselService }, { type: CarouselState }]; }, { activeIndex: [{
            type: i0.Input
        }], animate: [{
            type: i0.Input
        }], direction: [{
            type: i0.Input
        }], interval: [{
            type: i0.Input
        }], itemChange: [{
            type: i0.Output
        }], carouselClass: [{
            type: i0.HostBinding,
            args: ['class.carousel']
        }], carouselSlideClass: [{
            type: i0.HostBinding,
            args: ['class.slide']
        }], onMouseenter: [{
            type: i0.HostListener,
            args: ['mouseenter', ['$event']]
        }, {
            type: i0.HostListener,
            args: ['mousedown', ['$event']]
        }], onMouseleave: [{
            type: i0.HostListener,
            args: ['mouseleave', ['$event']]
        }, {
            type: i0.HostListener,
            args: ['mouseup', ['$event']]
        }] }); })();
        return CarouselComponent;
    }());
    CarouselComponent.ctorParameters = function () { return [
        { type: CarouselConfig, decorators: [{ type: i0.Inject, args: [CarouselConfig,] }] },
        { type: CarouselService },
        { type: CarouselState }
    ]; };
    CarouselComponent.propDecorators = {
        activeIndex: [{ type: i0.Input }],
        animate: [{ type: i0.Input }],
        direction: [{ type: i0.Input }],
        interval: [{ type: i0.Input }],
        itemChange: [{ type: i0.Output }],
        carouselClass: [{ type: i0.HostBinding, args: ['class.carousel',] }],
        carouselSlideClass: [{ type: i0.HostBinding, args: ['class.slide',] }],
        onMouseenter: [{ type: i0.HostListener, args: ['mouseenter', ['$event'],] }, { type: i0.HostListener, args: ['mousedown', ['$event'],] }],
        onMouseleave: [{ type: i0.HostListener, args: ['mouseleave', ['$event'],] }, { type: i0.HostListener, args: ['mouseup', ['$event'],] }]
    };

    var CarouselCaptionComponent = /** @class */ (function () {
        function CarouselCaptionComponent() {
            this.carouselCaptionClass = true;
        }
        CarouselCaptionComponent.prototype.ngOnInit = function () {
        };
CarouselCaptionComponent.ɵfac = function CarouselCaptionComponent_Factory(t) { return new (t || CarouselCaptionComponent)(); };
CarouselCaptionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CarouselCaptionComponent, selectors: [["c-carousel-caption"]], hostVars: 2, hostBindings: function CarouselCaptionComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("carousel-caption", ctx.carouselCaptionClass);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function CarouselCaptionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselCaptionComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-carousel-caption',
                template: "<ng-content></ng-content>\n\n",
                styles: [""]
            }]
    }], function () { return []; }, { carouselCaptionClass: [{
            type: i0.HostBinding,
            args: ['class.carousel-caption']
        }] }); })();
        return CarouselCaptionComponent;
    }());
    CarouselCaptionComponent.ctorParameters = function () { return []; };
    CarouselCaptionComponent.propDecorators = {
        carouselCaptionClass: [{ type: i0.HostBinding, args: ['class.carousel-caption',] }]
    };

    var CarouselControlComponent = /** @class */ (function () {
        function CarouselControlComponent(changeDetector, carouselState) {
            this.changeDetector = changeDetector;
            this.carouselState = carouselState;
            this.direction = 'next';
            this.hasContent = true;
        }
        Object.defineProperty(CarouselControlComponent.prototype, "hostRole", {
            get: function () {
                return 'button';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CarouselControlComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CarouselControlComponent.prototype, "carouselControlClass", {
            get: function () {
                return "carousel-control-" + this.direction;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CarouselControlComponent.prototype, "carouselControlIconClass", {
            get: function () {
                return "carousel-control-" + this.direction + "-icon";
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CarouselControlComponent.prototype, "hostClasses", {
            get: function () {
                var classes = classNames__default['default'](this.carouselControlClass);
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        CarouselControlComponent.prototype.onKeyUp = function ($event) {
            if ($event.key === 'Enter') {
                this.play();
            }
            if ($event.key === 'ArrowLeft') {
                this.play('prev');
            }
            if ($event.key === 'ArrowRight') {
                this.play('next');
            }
        };
        CarouselControlComponent.prototype.onClick = function ($event) {
            this.play();
        };
        CarouselControlComponent.prototype.ngOnInit = function () { };
        CarouselControlComponent.prototype.ngAfterViewInit = function () {
            this.hasContent = this.content.nativeElement.childNodes.length;
            this.changeDetector.detectChanges();
        };
        CarouselControlComponent.prototype.play = function (direction) {
            if (direction === void 0) { direction = this.direction; }
            var nextIndex = this.carouselState.direction(direction);
            this.carouselState.state = { activeItemIndex: nextIndex };
        };
CarouselControlComponent.ɵfac = function CarouselControlComponent_Factory(t) { return new (t || CarouselControlComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(CarouselState)); };
CarouselControlComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CarouselControlComponent, selectors: [["c-carousel-control"]], viewQuery: function CarouselControlComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c7, 1);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);
    } }, hostVars: 3, hostBindings: function CarouselControlComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keyup", function CarouselControlComponent_keyup_HostBindingHandler($event) { return ctx.onKeyUp($event); })("click", function CarouselControlComponent_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.hostRole);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { direction: "direction" }, ngContentSelectors: _c0, decls: 3, vars: 2, consts: [[4, "ngIf", "ngIfElse"], ["default", ""], ["content", ""]], template: function CarouselControlComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, CarouselControlComponent_div_0_Template, 3, 0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, CarouselControlComponent_ng_template_1_Template, 1, 3, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        var _r1 = ɵngcc0.ɵɵreference(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasContent)("ngIfElse", _r1);
    } }, directives: [ɵngcc1.NgIf], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselControlComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-carousel-control',
                template: "<div #content *ngIf = \"hasContent; else default\"><ng-content></ng-content></div>\n<ng-template #default>\n  <span [class]=\"carouselControlIconClass\" [attr.aria-label]=\"direction\"></span>\n</ng-template>\n",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: CarouselState }]; }, { direction: [{
            type: i0.Input
        }], hostRole: [{
            type: i0.HostBinding,
            args: ['attr.role']
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], onKeyUp: [{
            type: i0.HostListener,
            args: ['keyup', ['$event']]
        }], onClick: [{
            type: i0.HostListener,
            args: ['click', ['$event']]
        }], content: [{
            type: i0.ViewChild,
            args: ['content']
        }] }); })();
        return CarouselControlComponent;
    }());
    CarouselControlComponent.ctorParameters = function () { return [
        { type: i0.ChangeDetectorRef },
        { type: CarouselState }
    ]; };
    CarouselControlComponent.propDecorators = {
        direction: [{ type: i0.Input }],
        content: [{ type: i0.ViewChild, args: ['content',] }],
        hostRole: [{ type: i0.HostBinding, args: ['attr.role',] }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }],
        onKeyUp: [{ type: i0.HostListener, args: ['keyup', ['$event'],] }],
        onClick: [{ type: i0.HostListener, args: ['click', ['$event'],] }]
    };

    var CarouselIndicatorsComponent = /** @class */ (function () {
        function CarouselIndicatorsComponent(carouselService, carouselState) {
            this.carouselService = carouselService;
            this.carouselState = carouselState;
            this.items = [];
            this.active = 0;
        }
        CarouselIndicatorsComponent.prototype.ngOnInit = function () {
            this.carouselStateSubscribe();
        };
        CarouselIndicatorsComponent.prototype.ngOnDestroy = function () {
            this.carouselStateSubscribe(false);
        };
        CarouselIndicatorsComponent.prototype.onClick = function (index) {
            if (index !== this.active) {
                var direction = index < this.active ? 'prev' : 'next';
                this.carouselState.state = { direction: direction, activeItemIndex: index };
            }
        };
        CarouselIndicatorsComponent.prototype.carouselStateSubscribe = function (subscribe) {
            var _this = this;
            if (subscribe === void 0) { subscribe = true; }
            if (subscribe) {
                this.carouselIndexSubscription = this.carouselService.carouselIndex$.subscribe(function (nextIndex) {
                    var _a, _b, _c;
                    _this.items = (_c = (_b = (_a = _this.carouselState) === null || _a === void 0 ? void 0 : _a.state) === null || _b === void 0 ? void 0 : _b.items) === null || _c === void 0 ? void 0 : _c.map(function (item) { return item.index; });
                    if ('active' in nextIndex) {
                        _this.active = nextIndex.active;
                    }
                });
            }
            else {
                this.carouselIndexSubscription.unsubscribe();
            }
        };
CarouselIndicatorsComponent.ɵfac = function CarouselIndicatorsComponent_Factory(t) { return new (t || CarouselIndicatorsComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselService), ɵngcc0.ɵɵdirectiveInject(CarouselState)); };
CarouselIndicatorsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CarouselIndicatorsComponent, selectors: [["c-carousel-indicators"]], decls: 2, vars: 1, consts: [[1, "carousel-indicators"], [4, "ngFor", "ngForOf"], [3, "click"]], template: function CarouselIndicatorsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ol", 0);
        ɵngcc0.ɵɵtemplate(1, CarouselIndicatorsComponent_ng_container_1_Template, 2, 4, "ng-container", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.items);
    } }, directives: [ɵngcc1.NgForOf], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselIndicatorsComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-carousel-indicators',
                template: "<ol class=\"carousel-indicators\">\n  <ng-container *ngFor=\"let item of items; let i=index\">\n    <li (click)=\"onClick(i)\" [class]=\"{active: active === i}\"></li>\n  </ng-container>\n</ol>\n",
                styles: [""]
            }]
    }], function () { return [{ type: CarouselService }, { type: CarouselState }]; }, null); })();
        return CarouselIndicatorsComponent;
    }());
    CarouselIndicatorsComponent.ctorParameters = function () { return [
        { type: CarouselService },
        { type: CarouselState }
    ]; };

    function toLeft(fromState, toState) {
        return toState.left === true;
    }
    function toRight(fromState, toState) {
        return toState.left === false;
    }
    var slideAnimation = animations.trigger('slideAnimation', [
        animations.state('*', animations.style({ transform: 'translateX(0)', display: 'block', opacity: 1 })),
        animations.transition(toLeft, animations.group([
            animations.query(':leave', [
                animations.animate('0.6s ease-in-out', animations.style({
                    transform: 'translateX(-100%)',
                })),
            ], { optional: true }),
            animations.query(':enter', [
                animations.style({
                    transform: 'translateX(100%)',
                }),
                animations.animate('0.6s ease-in-out', animations.style('*')),
            ], { optional: true }),
        ])),
        animations.transition(toRight, animations.group([
            animations.query(':enter', [
                animations.style({
                    transform: 'translateX(-100%)',
                }),
                animations.animate('0.6s ease-in-out', animations.style('*')),
            ], { optional: true }),
            animations.query(':leave', [
                animations.animate('0.6s ease-in-out', animations.style({
                    transform: 'translateX(100%)',
                })),
            ], { optional: true }),
        ])),
    ]);

    var CarouselItemComponent = /** @class */ (function () {
        function CarouselItemComponent(carouselService) {
            this.carouselService = carouselService;
        }
        Object.defineProperty(CarouselItemComponent.prototype, "active", {
            get: function () {
                return this._active;
            },
            set: function (active) {
                this._active = active;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CarouselItemComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CarouselItemComponent.prototype, "hostClasses", {
            get: function () {
                var classes = classNames__default['default']({
                    'carousel-item': true,
                    active: this.active,
                });
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        CarouselItemComponent.prototype.ngOnInit = function () { };
        CarouselItemComponent.prototype.ngOnDestroy = function () {
            this.carouselStateSubscribe(false);
        };
        CarouselItemComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            setTimeout(function () {
                _this.carouselStateSubscribe();
            });
        };
        CarouselItemComponent.prototype.carouselStateSubscribe = function (subscribe) {
            var _this = this;
            if (subscribe === void 0) { subscribe = true; }
            if (subscribe) {
                this.carouselIndexSubscription = this.carouselService.carouselIndex$.subscribe(function (nextIndex) {
                    if ('active' in nextIndex) {
                        _this.active = nextIndex.active === _this.index;
                    }
                });
            }
            else {
                this.carouselIndexSubscription.unsubscribe();
            }
        };
CarouselItemComponent.ɵfac = function CarouselItemComponent_Factory(t) { return new (t || CarouselItemComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselService)); };
CarouselItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CarouselItemComponent, selectors: [["c-carousel-item"]], hostVars: 2, hostBindings: function CarouselItemComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { active: "active" }, ngContentSelectors: _c0, decls: 1, vars: 1, consts: [[4, "ngIf"]], template: function CarouselItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, CarouselItemComponent_ng_content_0_Template, 1, 0, "ng-content", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.active);
    } }, directives: [ɵngcc1.NgIf], styles: ["[_nghost-%COMP%]{display:block}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselItemComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-carousel-item',
                template: "<ng-content *ngIf=\"active\"></ng-content>\n",
                styles: [":host{display:block}"]
            }]
    }], function () { return [{ type: CarouselService }]; }, { active: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }] }); })();
        return CarouselItemComponent;
    }());
    CarouselItemComponent.ctorParameters = function () { return [
        { type: CarouselService }
    ]; };
    CarouselItemComponent.propDecorators = {
        active: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var CarouselInnerComponent = /** @class */ (function () {
        function CarouselInnerComponent(carouselState) {
            this.carouselState = carouselState;
            this.carouselInnerClass = true;
            this.slide = { left: true };
        }
        CarouselInnerComponent.prototype.ngOnInit = function () { };
        CarouselInnerComponent.prototype.ngAfterContentInit = function () {
            this.setItems();
        };
        CarouselInnerComponent.prototype.ngAfterContentChecked = function () {
            var _a;
            this.setItems();
            var state = (_a = this.carouselState) === null || _a === void 0 ? void 0 : _a.state;
            var nextIndex = state === null || state === void 0 ? void 0 : state.activeItemIndex;
            var nextDirection = state === null || state === void 0 ? void 0 : state.direction;
            if (this.activeIndex !== nextIndex) {
                this.animate = state === null || state === void 0 ? void 0 : state.animate;
                this.slide = { left: nextDirection === 'next' };
                this.activeIndex = state === null || state === void 0 ? void 0 : state.activeItemIndex;
            }
        };
        CarouselInnerComponent.prototype.setItems = function () {
            if (this.prevContentItems !== this.contentItems) {
                this.prevContentItems = this.contentItems;
                this.carouselState.setItems(this.contentItems);
            }
        };
CarouselInnerComponent.ɵfac = function CarouselInnerComponent_Factory(t) { return new (t || CarouselInnerComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselState)); };
CarouselInnerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CarouselInnerComponent, selectors: [["c-carousel-inner"]], contentQueries: function CarouselInnerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, CarouselItemComponent, 0);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentItems = _t);
    } }, hostVars: 2, hostBindings: function CarouselInnerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("carousel-inner", ctx.carouselInnerClass);
    } }, ngContentSelectors: _c0, decls: 2, vars: 2, template: function CarouselInnerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("@slideAnimation", ctx.slide)("@.disabled", !ctx.animate);
    } }, styles: ["[_nghost-%COMP%]{display:block}"], data: { animation: [slideAnimation] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselInnerComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-carousel-inner',
                template: "<div [@slideAnimation]=\"slide\" [@.disabled]=\"!animate\">\n  <ng-content></ng-content>\n</div>\n",
                animations: [slideAnimation],
                styles: [":host{display:block}"]
            }]
    }], function () { return [{ type: CarouselState }]; }, { carouselInnerClass: [{
            type: i0.HostBinding,
            args: ['class.carousel-inner']
        }], contentItems: [{
            type: i0.ContentChildren,
            args: [CarouselItemComponent]
        }] }); })();
        return CarouselInnerComponent;
    }());
    CarouselInnerComponent.ctorParameters = function () { return [
        { type: CarouselState }
    ]; };
    CarouselInnerComponent.propDecorators = {
        carouselInnerClass: [{ type: i0.HostBinding, args: ['class.carousel-inner',] }],
        contentItems: [{ type: i0.ContentChildren, args: [CarouselItemComponent,] }]
    };

    var CarouselModule = /** @class */ (function () {
        function CarouselModule() {
        }
        CarouselModule.forRoot = function () {
            return { ngModule: CarouselModule, providers: [] };
        };
CarouselModule.ɵfac = function CarouselModule_Factory(t) { return new (t || CarouselModule)(); };
CarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CarouselModule });
CarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [CarouselService, CarouselState, CarouselConfig], imports: [[i1.CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CarouselModule, { declarations: [CarouselComponent, CarouselCaptionComponent, CarouselControlComponent, CarouselIndicatorsComponent, CarouselInnerComponent, CarouselItemComponent], imports: [ɵngcc1.CommonModule], exports: [CarouselComponent, CarouselCaptionComponent, CarouselControlComponent, CarouselIndicatorsComponent, CarouselInnerComponent, CarouselItemComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    CarouselComponent,
                    CarouselCaptionComponent,
                    CarouselControlComponent,
                    CarouselIndicatorsComponent,
                    CarouselInnerComponent,
                    CarouselItemComponent,
                ],
                imports: [i1.CommonModule],
                providers: [CarouselService, CarouselState, CarouselConfig],
                exports: [
                    CarouselComponent,
                    CarouselCaptionComponent,
                    CarouselControlComponent,
                    CarouselIndicatorsComponent,
                    CarouselInnerComponent,
                    CarouselItemComponent,
                ]
            }]
    }], function () { return []; }, null); })();
        return CarouselModule;
    }());

    var DropdownService = /** @class */ (function () {
        function DropdownService() {
            this.dropdownState = new rxjs.BehaviorSubject({});
            this.dropdownState$ = this.dropdownState.asObservable();
        }
        DropdownService.prototype.toggle = function (state) {
            this.dropdownState.next(state);
        };
DropdownService.ɵfac = function DropdownService_Factory(t) { return new (t || DropdownService)(); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropdownService, [{
        type: i0.Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();
        return DropdownService;
    }());
    DropdownService.ɵprov = i0.ɵɵdefineInjectable({ factory: function DropdownService_Factory() { return new DropdownService(); }, token: DropdownService, providedIn: "root" });
    DropdownService.ctorParameters = function () { return []; };

    var DropdownState = /** @class */ (function () {
        function DropdownState() {
            this.state = {
                align: '',
                caret: 'caret',
                direction: 'down',
                show: false,
            };
        }
        DropdownState.prototype.getState = function () {
            return Object.assign(Object.create(null), this.state);
        };
        DropdownState.prototype.setState = function (state) {
            this.state = Object.assign(this.state, state);
            return this.getState();
        };
DropdownState.ɵfac = function DropdownState_Factory(t) { return new (t || DropdownState)(); };
DropdownState.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DropdownState, factory: function (t) { return DropdownState.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropdownState, [{
        type: i0.Injectable
    }], function () { return []; }, null); })();
        return DropdownState;
    }());
    DropdownState.ctorParameters = function () { return []; };

    var DropdownDirective = /** @class */ (function () {
        function DropdownDirective(renderer, hostElement, outClickService, dropdownService, dropdownState) {
            this.renderer = renderer;
            this.hostElement = hostElement;
            this.outClickService = outClickService;
            this.dropdownService = dropdownService;
            this.dropdownState = dropdownState;
            this.direction = 'down';
            this.cDropdownAlign = '';
        }
        DropdownDirective.prototype.ngOnInit = function () {
            var state = { show: this.cDropdownShow, align: this.cDropdownAlign, direction: this.direction };
            this.state = this.dropdownState.setState(state);
            var dropdownClass = "drop" + (this.direction || 'down');
            this.renderer.addClass(this.hostElement.nativeElement, dropdownClass);
            this.stateToggleSubscribe();
            this.outClickSubscribe();
        };
        DropdownDirective.prototype.ngOnDestroy = function () {
            this.stateToggleSubscribe(false);
            this.outClickSubscribe(false);
        };
        DropdownDirective.prototype.ngOnChanges = function (changes) {
            if (changes.direction) {
                this.renderer.removeClass(this.hostElement.nativeElement, "drop" + (changes.direction.previousValue || 'down'));
                this.renderer.addClass(this.hostElement.nativeElement, "drop" + (changes.direction.currentValue || 'down'));
            }
            if (changes.cDropdownShow) {
                var state = { show: changes.cDropdownShow.currentValue };
                this.state = this.dropdownState.setState(state);
                this.dropdownService.toggle(this.state);
            }
        };
        DropdownDirective.prototype.ngAfterViewInit = function () {
            this.cDropdownShow = this.state.show;
            this.dropdownService.toggle(this.state);
        };
        DropdownDirective.prototype.stateToggleSubscribe = function (subscribe) {
            var _this = this;
            if (subscribe === void 0) { subscribe = true; }
            if (subscribe) {
                this.stateToggleSubscription = this.dropdownService.dropdownState$.subscribe(function (state) {
                    if ('show' in state) {
                        _this.show(state.show);
                    }
                });
            }
            else {
                this.stateToggleSubscription.unsubscribe();
            }
        };
        DropdownDirective.prototype.show = function (show) {
            this.cDropdownShow = show;
            this.state = this.dropdownState.setState({ show: show });
            show ?
                this.renderer.addClass(this.hostElement.nativeElement, 'show') :
                this.renderer.removeClass(this.hostElement.nativeElement, 'show');
        };
        DropdownDirective.prototype.toggle = function () {
            this.show(!this.state.show);
        };
        DropdownDirective.prototype.outClickSubscribe = function (subscribe) {
            var _this = this;
            if (subscribe === void 0) { subscribe = true; }
            if (subscribe) {
                this.outClickSubscription = this.outClickService.outClick$.subscribe(function (message) {
                    if (message.event) {
                        _this.autoClose(message.event);
                    }
                });
            }
            else {
                this.outClickSubscription.unsubscribe();
            }
        };
        DropdownDirective.prototype.autoClose = function (e) {
            var state = this.dropdownState.getState();
            if (state.show) {
                if (!this.hostElement.nativeElement.contains(e.target.closest('[cDropdownToggle]'))) {
                    this.cDropdownShow = false;
                    this.dropdownService.toggle({ show: false });
                }
            }
        };
DropdownDirective.ɵfac = function DropdownDirective_Factory(t) { return new (t || DropdownDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(OutClickService), ɵngcc0.ɵɵdirectiveInject(DropdownService), ɵngcc0.ɵɵdirectiveInject(DropdownState)); };
DropdownDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DropdownDirective, selectors: [["", "cDropdown", ""], ["c-dropdown"]], hostVars: 1, hostBindings: function DropdownDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-expanded", ctx.cDropdownShow);
    } }, inputs: { direction: ["cDropdown", "direction"], cDropdownAlign: "cDropdownAlign", cDropdownShow: "cDropdownShow" }, exportAs: ["cDropdown"], features: [ɵngcc0.ɵɵProvidersFeature([DropdownService, DropdownState]), ɵngcc0.ɵɵNgOnChangesFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropdownDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cDropdown], c-dropdown',
                exportAs: 'cDropdown',
                providers: [DropdownService, DropdownState]
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: OutClickService }, { type: DropdownService }, { type: DropdownState }]; }, { direction: [{
            type: i0.Input,
            args: ['cDropdown']
        }], cDropdownAlign: [{
            type: i0.Input
        }], cDropdownShow: [{
            type: i0.Input
        }, {
            type: i0.HostBinding,
            args: ['attr.aria-expanded']
        }] }); })();
        return DropdownDirective;
    }());
    DropdownDirective.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef },
        { type: OutClickService },
        { type: DropdownService },
        { type: DropdownState }
    ]; };
    DropdownDirective.propDecorators = {
        direction: [{ type: i0.Input, args: ['cDropdown',] }],
        cDropdownAlign: [{ type: i0.Input }],
        cDropdownShow: [{ type: i0.Input }, { type: i0.HostBinding, args: ['attr.aria-expanded',] }]
    };

    var DropdownMenuDirective = /** @class */ (function () {
        function DropdownMenuDirective(renderer, hostElement, dropdownState, dropdownService) {
            this.renderer = renderer;
            this.hostElement = hostElement;
            this.dropdownState = dropdownState;
            this.dropdownService = dropdownService;
            this.role = 'menu';
            this.dropdownMenu = true;
            this.host = this.hostElement.nativeElement;
        }
        DropdownMenuDirective.prototype.ngOnInit = function () {
            this.stateToggleSubscribe();
        };
        DropdownMenuDirective.prototype.ngOnDestroy = function () {
            this.stateToggleSubscribe(false);
        };
        DropdownMenuDirective.prototype.show = function (show) {
            var className = 'show';
            show ?
                this.renderer.addClass(this.host, className) :
                this.renderer.removeClass(this.host, className);
        };
        DropdownMenuDirective.prototype.align = function (align) {
            if (align) {
                var className = "dropdown-menu-" + align;
                this.renderer.addClass(this.host, className);
            }
        };
        DropdownMenuDirective.prototype.stateToggleSubscribe = function (subscribe) {
            var _this = this;
            if (subscribe === void 0) { subscribe = true; }
            if (subscribe) {
                this.stateToggleSubscription = this.dropdownService.dropdownState$.subscribe(function (state) {
                    if ('show' in state) {
                        _this.show(state.show);
                    }
                    if ('align' in state) {
                        _this.align(state.align);
                    }
                });
            }
            else {
                this.stateToggleSubscription.unsubscribe();
            }
        };
DropdownMenuDirective.ɵfac = function DropdownMenuDirective_Factory(t) { return new (t || DropdownMenuDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DropdownState), ɵngcc0.ɵɵdirectiveInject(DropdownService)); };
DropdownMenuDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DropdownMenuDirective, selectors: [["", "cDropdownMenu", ""], ["c-dropdown-menu"]], hostVars: 3, hostBindings: function DropdownMenuDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role);
        ɵngcc0.ɵɵclassProp("dropdown-menu", ctx.dropdownMenu);
    } }, exportAs: ["cDropdownMenu"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropdownMenuDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cDropdownMenu], c-dropdown-menu',
                exportAs: 'cDropdownMenu'
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: DropdownState }, { type: DropdownService }]; }, { role: [{
            type: i0.HostBinding,
            args: ['attr.role']
        }], dropdownMenu: [{
            type: i0.HostBinding,
            args: ['class.dropdown-menu']
        }] }); })();
        return DropdownMenuDirective;
    }());
    DropdownMenuDirective.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef },
        { type: DropdownState },
        { type: DropdownService }
    ]; };
    DropdownMenuDirective.propDecorators = {
        role: [{ type: i0.HostBinding, args: ['attr.role',] }],
        dropdownMenu: [{ type: i0.HostBinding, args: ['class.dropdown-menu',] }]
    };

    var DropdownToggleDirective = /** @class */ (function () {
        function DropdownToggleDirective(renderer, hostElement, dropdown, dropdownService, dropdownState) {
            this.renderer = renderer;
            this.hostElement = hostElement;
            this.dropdown = dropdown;
            this.dropdownService = dropdownService;
            this.dropdownState = dropdownState;
            this.cDropdownCaret = 'caret';
            this.host = this.hostElement.nativeElement;
        }
        DropdownToggleDirective.prototype.ngOnInit = function () {
            this.state = this.dropdownState.setState({ caret: this.cDropdownCaret });
            var toggleClass = 'dropdown-toggle';
            if (this.state.caret === 'none') {
                this.renderer.removeClass(this.host, toggleClass);
            }
            else {
                this.renderer.addClass(this.host, toggleClass);
                if (this.state.caret === 'split') {
                    this.renderer.addClass(this.host, toggleClass + "-split");
                }
            }
        };
        DropdownToggleDirective.prototype.toggleShow = function ($event) {
            $event.preventDefault();
            this.state = this.dropdownState.getState();
            this.dropdownService.toggle({ show: !this.state.show });
        };
DropdownToggleDirective.ɵfac = function DropdownToggleDirective_Factory(t) { return new (t || DropdownToggleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DropdownDirective), ɵngcc0.ɵɵdirectiveInject(DropdownService), ɵngcc0.ɵɵdirectiveInject(DropdownState)); };
DropdownToggleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DropdownToggleDirective, selectors: [["", "cDropdownToggle", ""], ["c-dropdown-toggle"]], hostBindings: function DropdownToggleDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function DropdownToggleDirective_click_HostBindingHandler($event) { return ctx.toggleShow($event); });
    } }, inputs: { cDropdownCaret: "cDropdownCaret" }, exportAs: ["cDropdownToggle"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropdownToggleDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cDropdownToggle], c-dropdown-toggle',
                exportAs: 'cDropdownToggle'
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: DropdownDirective }, { type: DropdownService }, { type: DropdownState }]; }, { cDropdownCaret: [{
            type: i0.Input
        }], toggleShow: [{
            type: i0.HostListener,
            args: ['click', ['$event']]
        }] }); })();
        return DropdownToggleDirective;
    }());
    DropdownToggleDirective.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef },
        { type: DropdownDirective },
        { type: DropdownService },
        { type: DropdownState }
    ]; };
    DropdownToggleDirective.propDecorators = {
        cDropdownCaret: [{ type: i0.Input }],
        toggleShow: [{ type: i0.HostListener, args: ['click', ['$event'],] }]
    };

    var DropdownHeaderDirective = /** @class */ (function () {
        function DropdownHeaderDirective() {
            this.dropdownHeader = true;
        }
DropdownHeaderDirective.ɵfac = function DropdownHeaderDirective_Factory(t) { return new (t || DropdownHeaderDirective)(); };
DropdownHeaderDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DropdownHeaderDirective, selectors: [["", "cDropdownHeader", ""], ["c-dropdown-header"]], hostVars: 2, hostBindings: function DropdownHeaderDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("dropdown-header", ctx.dropdownHeader);
    } }, exportAs: ["cDropdownHeader"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropdownHeaderDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cDropdownHeader], c-dropdown-header',
                exportAs: 'cDropdownHeader'
            }]
    }], function () { return []; }, { dropdownHeader: [{
            type: i0.HostBinding,
            args: ['class.dropdown-header']
        }] }); })();
        return DropdownHeaderDirective;
    }());
    DropdownHeaderDirective.propDecorators = {
        dropdownHeader: [{ type: i0.HostBinding, args: ['class.dropdown-header',] }]
    };

    var DropdownDividerDirective = /** @class */ (function () {
        function DropdownDividerDirective() {
            this.dropdownDivider = true;
        }
DropdownDividerDirective.ɵfac = function DropdownDividerDirective_Factory(t) { return new (t || DropdownDividerDirective)(); };
DropdownDividerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DropdownDividerDirective, selectors: [["", "cDropdownDivider", ""], ["c-dropdown-divider"]], hostVars: 2, hostBindings: function DropdownDividerDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("dropdown-divider", ctx.dropdownDivider);
    } }, exportAs: ["cDropdownDivider"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropdownDividerDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cDropdownDivider], c-dropdown-divider',
                exportAs: 'cDropdownDivider'
            }]
    }], function () { return []; }, { dropdownDivider: [{
            type: i0.HostBinding,
            args: ['class.dropdown-divider']
        }] }); })();
        return DropdownDividerDirective;
    }());
    DropdownDividerDirective.propDecorators = {
        dropdownDivider: [{ type: i0.HostBinding, args: ['class.dropdown-divider',] }]
    };

    var DropdownItemDirective = /** @class */ (function () {
        function DropdownItemDirective() {
            this.dropdownItem = true;
        }
DropdownItemDirective.ɵfac = function DropdownItemDirective_Factory(t) { return new (t || DropdownItemDirective)(); };
DropdownItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DropdownItemDirective, selectors: [["", "cDropdownItem", ""], ["c-dropdown-item"]], hostVars: 2, hostBindings: function DropdownItemDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("dropdown-item", ctx.dropdownItem);
    } }, exportAs: ["cDropdownItem"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropdownItemDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cDropdownItem], c-dropdown-item',
                exportAs: 'cDropdownItem'
            }]
    }], function () { return []; }, { dropdownItem: [{
            type: i0.HostBinding,
            args: ['class.dropdown-item']
        }] }); })();
        return DropdownItemDirective;
    }());
    DropdownItemDirective.propDecorators = {
        dropdownItem: [{ type: i0.HostBinding, args: ['class.dropdown-item',] }]
    };

    var DropdownDividerComponent = /** @class */ (function () {
        function DropdownDividerComponent() {
        }
DropdownDividerComponent.ɵfac = function DropdownDividerComponent_Factory(t) { return new (t || DropdownDividerComponent)(); };
DropdownDividerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DropdownDividerComponent, selectors: [["c-dropdown-divider"]], decls: 1, vars: 0, consts: [[1, "dropdown-divider"]], template: function DropdownDividerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "div", 0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropdownDividerComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-dropdown-divider',
                template: '<div class="dropdown-divider"></div>',
                styles: [""]
            }]
    }], function () { return []; }, null); })();
        return DropdownDividerComponent;
    }());

    var DropdownModule = /** @class */ (function () {
        function DropdownModule() {
        }
        DropdownModule.forRoot = function (config) {
            return {
                ngModule: DropdownModule,
                providers: []
            };
        };
DropdownModule.ɵfac = function DropdownModule_Factory(t) { return new (t || DropdownModule)(); };
DropdownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DropdownModule });
DropdownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [
        DropdownService,
        DropdownState
    ], imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropdownModule, { declarations: [DropdownDirective, DropdownToggleDirective, DropdownMenuDirective, DropdownHeaderDirective, DropdownDividerDirective, DropdownItemDirective, DropdownDividerComponent], imports: [ɵngcc1.CommonModule], exports: [DropdownDirective, DropdownToggleDirective, DropdownMenuDirective, DropdownItemDirective, DropdownDividerDirective, DropdownHeaderDirective, DropdownDividerComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropdownModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    DropdownDirective,
                    DropdownToggleDirective,
                    DropdownMenuDirective,
                    DropdownHeaderDirective,
                    DropdownDividerDirective,
                    DropdownItemDirective,
                    DropdownDividerComponent
                ],
                exports: [
                    DropdownDirective,
                    DropdownToggleDirective,
                    DropdownMenuDirective,
                    DropdownItemDirective,
                    DropdownDividerDirective,
                    DropdownHeaderDirective,
                    DropdownDividerComponent
                ],
                imports: [
                    i1.CommonModule
                ],
                providers: [
                    DropdownService,
                    DropdownState
                ]
            }]
    }], function () { return []; }, null); })();
        return DropdownModule;
    }());

    var EmbedItemDirective = /** @class */ (function () {
        function EmbedItemDirective() {
            this.embedItemClass = true;
        }
EmbedItemDirective.ɵfac = function EmbedItemDirective_Factory(t) { return new (t || EmbedItemDirective)(); };
EmbedItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EmbedItemDirective, selectors: [["", "cEmbedItem", ""]], hostVars: 2, hostBindings: function EmbedItemDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("embed-responsive-item", ctx.embedItemClass);
    } } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EmbedItemDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cEmbedItem]'
            }]
    }], function () { return []; }, { embedItemClass: [{
            type: i0.HostBinding,
            args: ['class.embed-responsive-item']
        }] }); })();
        return EmbedItemDirective;
    }());
    EmbedItemDirective.ctorParameters = function () { return []; };
    EmbedItemDirective.propDecorators = {
        embedItemClass: [{ type: i0.HostBinding, args: ['class.embed-responsive-item',] }]
    };

    var EmbedComponent = /** @class */ (function () {
        function EmbedComponent() {
            this.ratio = '16by9';
        }
        Object.defineProperty(EmbedComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EmbedComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'embed-responsive': true
                    },
                    _a["embed-responsive-" + this.ratio] = !!this.ratio,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        EmbedComponent.prototype.ngOnInit = function () { };
        EmbedComponent.prototype.ngAfterContentInit = function () {
        };
EmbedComponent.ɵfac = function EmbedComponent_Factory(t) { return new (t || EmbedComponent)(); };
EmbedComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EmbedComponent, selectors: [["c-embed"]], contentQueries: function EmbedComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, EmbedItemDirective, 1);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.embedItem = _t.first);
    } }, hostVars: 2, hostBindings: function EmbedComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { ratio: "ratio" }, ngContentSelectors: _c10, decls: 1, vars: 0, template: function EmbedComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c9);
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EmbedComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-embed',
                template: "<ng-content select=\"iframe\"></ng-content>\n",
                styles: [""]
            }]
    }], function () { return []; }, { ratio: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], embedItem: [{
            type: i0.ContentChild,
            args: [EmbedItemDirective]
        }] }); })();
        return EmbedComponent;
    }());
    EmbedComponent.ctorParameters = function () { return []; };
    EmbedComponent.propDecorators = {
        ratio: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }],
        embedItem: [{ type: i0.ContentChild, args: [EmbedItemDirective,] }]
    };

    var EmbedModule = /** @class */ (function () {
        function EmbedModule() {
        }
EmbedModule.ɵfac = function EmbedModule_Factory(t) { return new (t || EmbedModule)(); };
EmbedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: EmbedModule });
EmbedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[i1.CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(EmbedModule, { declarations: [EmbedComponent, EmbedItemDirective], imports: [ɵngcc1.CommonModule], exports: [EmbedComponent, EmbedItemDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EmbedModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [EmbedComponent, EmbedItemDirective],
                imports: [i1.CommonModule],
                exports: [EmbedComponent, EmbedItemDirective]
            }]
    }], function () { return []; }, null); })();
        return EmbedModule;
    }());

    function chkBoolProp(prop) {
        return Boolean(prop != null && prop !== false);
    }

    var FormDirective = /** @class */ (function () {
        function FormDirective() {
        }
        Object.defineProperty(FormDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FormDirective.prototype, "hostClasses", {
            get: function () {
                var classes = {
                    'form-inline': chkBoolProp(this.inline),
                    'was-validated': chkBoolProp(this.wasValidated),
                };
                return classes;
            },
            enumerable: false,
            configurable: true
        });
FormDirective.ɵfac = function FormDirective_Factory(t) { return new (t || FormDirective)(); };
FormDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormDirective, selectors: [["", "cForm", ""]], hostVars: 2, hostBindings: function FormDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { inline: "inline", wasValidated: "wasValidated" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cForm]'
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], inline: [{
            type: i0.Input
        }], wasValidated: [{
            type: i0.Input
        }] }); })();
        return FormDirective;
    }());
    FormDirective.ctorParameters = function () { return []; };
    FormDirective.propDecorators = {
        inline: [{ type: i0.Input }],
        wasValidated: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var FormGroupComponent = /** @class */ (function () {
        function FormGroupComponent() {
        }
        Object.defineProperty(FormGroupComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FormGroupComponent.prototype, "hostClasses", {
            get: function () {
                var classes = {
                    'form-group': true,
                    disabled: chkBoolProp(this.disabled)
                };
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        FormGroupComponent.prototype.ngOnInit = function () {
        };
FormGroupComponent.ɵfac = function FormGroupComponent_Factory(t) { return new (t || FormGroupComponent)(); };
FormGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormGroupComponent, selectors: [["c-form-group"]], hostVars: 2, hostBindings: function FormGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { inline: "inline", disabled: "disabled" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function FormGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]:not(.row):not(.form-check-inline):not(.custom-control-inline){display:block}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormGroupComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-form-group',
                template: "<ng-content></ng-content>\n",
                styles: [":host:not(.row):not(.form-check-inline):not(.custom-control-inline){display:block}"]
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], inline: [{
            type: i0.Input
        }], disabled: [{
            type: i0.Input
        }] }); })();
        return FormGroupComponent;
    }());
    FormGroupComponent.ctorParameters = function () { return []; };
    FormGroupComponent.propDecorators = {
        inline: [{ type: i0.Input }],
        disabled: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var FormFeedbackComponent = /** @class */ (function () {
        function FormFeedbackComponent() {
        }
        Object.defineProperty(FormFeedbackComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FormFeedbackComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var validMode = this.tooltip ? 'tooltip' : 'feedback';
                var classes = (_a = {},
                    _a["valid-" + validMode] = this.valid === true,
                    _a["invalid-" + validMode] = this.valid !== true,
                    _a);
                return classes;
            },
            enumerable: false,
            configurable: true
        });
FormFeedbackComponent.ɵfac = function FormFeedbackComponent_Factory(t) { return new (t || FormFeedbackComponent)(); };
FormFeedbackComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormFeedbackComponent, selectors: [["c-form-feedback"]], hostVars: 2, hostBindings: function FormFeedbackComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { valid: "valid", tooltip: "tooltip" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function FormFeedbackComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormFeedbackComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-form-feedback',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], valid: [{
            type: i0.Input
        }], tooltip: [{
            type: i0.Input
        }] }); })();
        return FormFeedbackComponent;
    }());
    FormFeedbackComponent.ctorParameters = function () { return []; };
    FormFeedbackComponent.propDecorators = {
        valid: [{ type: i0.Input }],
        tooltip: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var FormTextComponent = /** @class */ (function () {
        function FormTextComponent() {
            this.tag = 'small';
            this.color = 'muted';
        }
        Object.defineProperty(FormTextComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FormTextComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = (_a = {
                        'form-text': true
                    },
                    _a["" + this.tag] = true,
                    _a["text-" + this.color] = !!this.color,
                    _a);
                return classes;
            },
            enumerable: false,
            configurable: true
        });
FormTextComponent.ɵfac = function FormTextComponent_Factory(t) { return new (t || FormTextComponent)(); };
FormTextComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormTextComponent, selectors: [["c-form-text"]], hostVars: 2, hostBindings: function FormTextComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { tag: "tag", color: "color" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function FormTextComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormTextComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-form-text',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return []; }, { tag: [{
            type: i0.Input
        }], color: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }] }); })();
        return FormTextComponent;
    }());
    FormTextComponent.ctorParameters = function () { return []; };
    FormTextComponent.propDecorators = {
        tag: [{ type: i0.Input }],
        color: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var InputDirective = /** @class */ (function () {
        function InputDirective(hostElement) {
            this.hostElement = hostElement;
            this.sizing = '';
            this.type = 'text';
            this.host = this.hostElement.nativeElement;
        }
        Object.defineProperty(InputDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputDirective.prototype, "hostClasses", {
            get: function () {
                var _a;
                var isPlainText = this.isPlainText;
                var isCustom = chkBoolProp(this.custom);
                var classes = classNames__default['default']((_a = {
                        'form-control': !isPlainText && this.isFormControl,
                        'form-control-plaintext': isPlainText,
                        'form-control-range': this.type === 'range',
                        'form-control-file': this.type === 'file' && !isCustom,
                        'custom-file-input': this.type === 'file' && isCustom,
                        'form-check-input': this.isFormCheck && !isCustom,
                        'custom-control-input': this.isFormCheck && isCustom
                    },
                    _a["form-control-" + this.sizing] = !!this.sizing,
                    _a['is-valid'] = this.valid === true,
                    _a['is-invalid'] = this.valid === false,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputDirective.prototype, "isPlainText", {
            get: function () {
                return chkBoolProp(this.plaintext);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputDirective.prototype, "isFormControl", {
            get: function () {
                var nonTextControls = ['range', 'checkbox', 'radio', 'file'];
                return !nonTextControls.includes(this.type);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputDirective.prototype, "isFormCheck", {
            get: function () {
                var formCheck = ['checkbox', 'radio'];
                return formCheck.includes(this.type);
            },
            enumerable: false,
            configurable: true
        });
        InputDirective.prototype.ngOnInit = function () { };
        Object.defineProperty(InputDirective.prototype, "attributes", {
            get: function () {
                return this.host.getAttributeNames();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputDirective.prototype, "isReadonly", {
            get: function () {
                return this.host.getAttribute('readonly') != null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputDirective.prototype, "isDisabled", {
            get: function () {
                return this.host.getAttribute('disabled') != null;
            },
            enumerable: false,
            configurable: true
        });
InputDirective.ɵfac = function InputDirective_Factory(t) { return new (t || InputDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
InputDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: InputDirective, selectors: [["", "cInput", ""]], hostVars: 3, hostBindings: function InputDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("type", ctx.type);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { sizing: "sizing", type: "type", valid: "valid", plaintext: "plaintext", custom: "custom" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cInput]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { sizing: [{
            type: i0.Input
        }], type: [{
            type: i0.HostBinding,
            args: ['type']
        }, {
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], valid: [{
            type: i0.Input
        }], plaintext: [{
            type: i0.Input
        }], custom: [{
            type: i0.Input
        }] }); })();
        return InputDirective;
    }());
    InputDirective.ctorParameters = function () { return [
        { type: i0.ElementRef }
    ]; };
    InputDirective.propDecorators = {
        valid: [{ type: i0.Input }],
        plaintext: [{ type: i0.Input }],
        sizing: [{ type: i0.Input }],
        custom: [{ type: i0.Input }],
        type: [{ type: i0.HostBinding, args: ['type',] }, { type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var InputGroupComponent = /** @class */ (function () {
        function InputGroupComponent() {
            this.size = '';
        }
        Object.defineProperty(InputGroupComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputGroupComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = (_a = {
                        'input-group': true
                    },
                    _a["input-group-" + this.size] = !!this.size,
                    _a);
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        InputGroupComponent.prototype.ngOnInit = function () { };
InputGroupComponent.ɵfac = function InputGroupComponent_Factory(t) { return new (t || InputGroupComponent)(); };
InputGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputGroupComponent, selectors: [["c-input-group"]], hostVars: 2, hostBindings: function InputGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function InputGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputGroupComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-input-group',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return []; }, { size: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }] }); })();
        return InputGroupComponent;
    }());
    InputGroupComponent.ctorParameters = function () { return []; };
    InputGroupComponent.propDecorators = {
        size: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var InputGroupTextComponent = /** @class */ (function () {
        function InputGroupTextComponent() {
        }
        Object.defineProperty(InputGroupTextComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputGroupTextComponent.prototype, "hostClasses", {
            get: function () {
                var classes = {
                    'input-group-text': true,
                };
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        InputGroupTextComponent.prototype.ngOnInit = function () { };
InputGroupTextComponent.ɵfac = function InputGroupTextComponent_Factory(t) { return new (t || InputGroupTextComponent)(); };
InputGroupTextComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputGroupTextComponent, selectors: [["c-input-group-text"]], hostVars: 2, hostBindings: function InputGroupTextComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function InputGroupTextComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputGroupTextComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-input-group-text',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }] }); })();
        return InputGroupTextComponent;
    }());
    InputGroupTextComponent.ctorParameters = function () { return []; };
    InputGroupTextComponent.propDecorators = {
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var InputGroupAddonComponent = /** @class */ (function () {
        function InputGroupAddonComponent() {
        }
        Object.defineProperty(InputGroupAddonComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputGroupAddonComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var addon = chkBoolProp(this.prepend) ? 'prepend' : 'append';
                var classes = (_a = {},
                    _a["input-group-" + addon] = true,
                    _a);
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        InputGroupAddonComponent.prototype.ngOnInit = function () { };
InputGroupAddonComponent.ɵfac = function InputGroupAddonComponent_Factory(t) { return new (t || InputGroupAddonComponent)(); };
InputGroupAddonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputGroupAddonComponent, selectors: [["ng-component"]], hostVars: 2, hostBindings: function InputGroupAddonComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { prepend: "prepend" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function InputGroupAddonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [_c11] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputGroupAddonComponent, [{
        type: i0.Component,
        args: [{
                template: "<ng-content></ng-content>\n",
                styles: [":host ::ng-deep .btn:not(:hover):not(:focus){box-shadow:none!important}"]
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], prepend: [{
            type: i0.Input
        }] }); })();
        return InputGroupAddonComponent;
    }());
    InputGroupAddonComponent.ctorParameters = function () { return []; };
    InputGroupAddonComponent.propDecorators = {
        prepend: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };
    var InputGroupPrependComponent = /** @class */ (function (_super) {
        __extends(InputGroupPrependComponent, _super);
        function InputGroupPrependComponent() {
            var _this = _super.apply(this, __spread(arguments)) || this;
            _this.prepend = true;
            return _this;
        }
InputGroupPrependComponent.ɵfac = function InputGroupPrependComponent_Factory(t) { return ɵInputGroupPrependComponent_BaseFactory(t || InputGroupPrependComponent); };
InputGroupPrependComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputGroupPrependComponent, selectors: [["c-input-group-prepend"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function InputGroupPrependComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [_c11] });
var ɵInputGroupPrependComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(InputGroupPrependComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputGroupPrependComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-input-group-prepend',
                template: "<ng-content></ng-content>\n",
                styles: [":host ::ng-deep .btn:not(:hover):not(:focus){box-shadow:none!important}"]
            }]
    }], null, null); })();
        return InputGroupPrependComponent;
    }(InputGroupAddonComponent));
    var InputGroupAppendComponent = /** @class */ (function (_super) {
        __extends(InputGroupAppendComponent, _super);
        function InputGroupAppendComponent() {
            var _this = _super.apply(this, __spread(arguments)) || this;
            _this.prepend = false;
            return _this;
        }
InputGroupAppendComponent.ɵfac = function InputGroupAppendComponent_Factory(t) { return ɵInputGroupAppendComponent_BaseFactory(t || InputGroupAppendComponent); };
InputGroupAppendComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputGroupAppendComponent, selectors: [["c-input-group-append"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function InputGroupAppendComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [_c11] });
var ɵInputGroupAppendComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(InputGroupAppendComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputGroupAppendComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-input-group-append',
                template: "<ng-content></ng-content>\n",
                styles: [":host ::ng-deep .btn:not(:hover):not(:focus){box-shadow:none!important}"]
            }]
    }], null, null); })();
        return InputGroupAppendComponent;
    }(InputGroupAddonComponent));

    var TextareaDirective = /** @class */ (function () {
        function TextareaDirective() {
            this.sizing = '';
        }
        Object.defineProperty(TextareaDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TextareaDirective.prototype, "hostClasses", {
            get: function () {
                var _a;
                var isPlainText = this.isPlainText;
                var classes = classNames__default['default']((_a = {
                        'form-control': !isPlainText,
                        'form-control-plaintext': isPlainText
                    },
                    _a["form-control-" + this.sizing] = !!this.sizing,
                    _a['is-valid'] = this.valid === true,
                    _a['is-invalid'] = this.valid === false,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TextareaDirective.prototype, "isPlainText", {
            get: function () {
                return chkBoolProp(this.plaintext);
            },
            enumerable: false,
            configurable: true
        });
TextareaDirective.ɵfac = function TextareaDirective_Factory(t) { return new (t || TextareaDirective)(); };
TextareaDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TextareaDirective, selectors: [["", "cTextarea", ""]], hostVars: 2, hostBindings: function TextareaDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { sizing: "sizing", valid: "valid", plaintext: "plaintext" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextareaDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cTextarea]'
            }]
    }], function () { return []; }, { sizing: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], valid: [{
            type: i0.Input
        }], plaintext: [{
            type: i0.Input
        }] }); })();
        return TextareaDirective;
    }());
    TextareaDirective.propDecorators = {
        valid: [{ type: i0.Input }],
        plaintext: [{ type: i0.Input }],
        sizing: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var SelectDirective = /** @class */ (function () {
        function SelectDirective() {
            this.sizing = '';
        }
        Object.defineProperty(SelectDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SelectDirective.prototype, "hostClasses", {
            get: function () {
                var _a;
                var isCustom = chkBoolProp(this.custom);
                var classes = classNames__default['default']((_a = {
                        'form-control': !isCustom
                    },
                    _a["form-control-" + this.sizing] = !!this.sizing && !isCustom,
                    _a['custom-select'] = isCustom,
                    _a["custom-select-" + this.sizing] = !!this.sizing && isCustom,
                    _a['is-valid'] = this.valid === true,
                    _a['is-invalid'] = this.valid === false,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
SelectDirective.ɵfac = function SelectDirective_Factory(t) { return new (t || SelectDirective)(); };
SelectDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectDirective, selectors: [["", "cSelect", ""]], hostVars: 2, hostBindings: function SelectDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { sizing: "sizing", valid: "valid", custom: "custom" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cSelect]'
            }]
    }], function () { return []; }, { sizing: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], valid: [{
            type: i0.Input
        }], custom: [{
            type: i0.Input
        }] }); })();
        return SelectDirective;
    }());
    SelectDirective.ctorParameters = function () { return []; };
    SelectDirective.propDecorators = {
        valid: [{ type: i0.Input }],
        custom: [{ type: i0.Input }],
        sizing: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var LabelDirective = /** @class */ (function () {
        function LabelDirective() {
            this.col = '';
            this.sizing = '';
        }
        Object.defineProperty(LabelDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LabelDirective.prototype, "hostClasses", {
            get: function () {
                var _a;
                var isCustom = chkBoolProp(this.custom);
                var classes = classNames__default['default']((_a = {
                        'custom-control-label': isCustom,
                        'custom-file-label': isCustom && this.variant === 'file',
                        'form-check-label': !isCustom && ['checkbox', 'radio', 'switch'].includes(this.variant),
                        'sr-only': chkBoolProp(this.hidden),
                        'visually-hidden': chkBoolProp(this.hidden),
                        'col-form-label': this.col === 'col'
                    },
                    _a["col-form-label-" + this.sizing] = !!this.sizing && this.col === 'col',
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
LabelDirective.ɵfac = function LabelDirective_Factory(t) { return new (t || LabelDirective)(); };
LabelDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LabelDirective, selectors: [["", "cLabel", ""]], hostVars: 2, hostBindings: function LabelDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { col: ["cLabel", "col"], sizing: "sizing", hidden: "hidden", variant: "variant", custom: "custom" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LabelDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cLabel]'
            }]
    }], function () { return []; }, { col: [{
            type: i0.Input,
            args: ['cLabel']
        }], sizing: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], hidden: [{
            type: i0.Input
        }], variant: [{
            type: i0.Input
        }], custom: [{
            type: i0.Input
        }] }); })();
        return LabelDirective;
    }());
    LabelDirective.ctorParameters = function () { return []; };
    LabelDirective.propDecorators = {
        col: [{ type: i0.Input, args: ['cLabel',] }],
        hidden: [{ type: i0.Input }],
        variant: [{ type: i0.Input }],
        sizing: [{ type: i0.Input }],
        custom: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var FormCheckComponent = /** @class */ (function () {
        function FormCheckComponent() {
        }
        Object.defineProperty(FormCheckComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FormCheckComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                if (this.variant === 'switch') {
                    this.custom = true;
                }
                var variantClass = this.custom ? 'custom-control' : 'form-check';
                var isCustom = chkBoolProp(this.custom);
                var classes = (_a = {
                        'form-check': !isCustom,
                        'custom-control': isCustom
                    },
                    _a["custom-" + this.variant] = !!this.variant,
                    _a[variantClass + "-inline"] = chkBoolProp(this.inline),
                    _a.disabled = chkBoolProp(this.disabled),
                    _a);
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        FormCheckComponent.prototype.ngOnInit = function () {
        };
FormCheckComponent.ɵfac = function FormCheckComponent_Factory(t) { return new (t || FormCheckComponent)(); };
FormCheckComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormCheckComponent, selectors: [["c-form-check"]], hostVars: 2, hostBindings: function FormCheckComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { custom: "custom", disabled: "disabled", inline: "inline", variant: "variant" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function FormCheckComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormCheckComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-form-check',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], custom: [{
            type: i0.Input
        }], disabled: [{
            type: i0.Input
        }], inline: [{
            type: i0.Input
        }], variant: [{
            type: i0.Input
        }] }); })();
        return FormCheckComponent;
    }());
    FormCheckComponent.ctorParameters = function () { return []; };
    FormCheckComponent.propDecorators = {
        custom: [{ type: i0.Input }],
        disabled: [{ type: i0.Input }],
        inline: [{ type: i0.Input }],
        variant: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var FormModule = /** @class */ (function () {
        function FormModule() {
        }
FormModule.ɵfac = function FormModule_Factory(t) { return new (t || FormModule)(); };
FormModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormModule });
FormModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormModule, { declarations: [FormDirective, FormCheckComponent, FormFeedbackComponent, FormGroupComponent, FormTextComponent, InputDirective, InputGroupComponent, InputGroupTextComponent, InputGroupAddonComponent, InputGroupPrependComponent, InputGroupAppendComponent, TextareaDirective, SelectDirective, LabelDirective], imports: [ɵngcc1.CommonModule], exports: [FormDirective, FormCheckComponent, FormFeedbackComponent, FormGroupComponent, FormTextComponent, InputDirective, InputGroupComponent, InputGroupTextComponent, InputGroupPrependComponent, InputGroupAppendComponent, TextareaDirective, SelectDirective, LabelDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    FormDirective,
                    FormCheckComponent,
                    FormFeedbackComponent,
                    FormGroupComponent,
                    FormTextComponent,
                    InputDirective,
                    InputGroupComponent,
                    InputGroupTextComponent,
                    InputGroupAddonComponent,
                    InputGroupPrependComponent,
                    InputGroupAppendComponent,
                    TextareaDirective,
                    SelectDirective,
                    LabelDirective
                ],
                imports: [
                    i1.CommonModule
                ],
                exports: [
                    FormDirective,
                    FormCheckComponent,
                    FormFeedbackComponent,
                    FormGroupComponent,
                    FormTextComponent,
                    InputDirective,
                    InputGroupComponent,
                    InputGroupTextComponent,
                    InputGroupPrependComponent,
                    InputGroupAppendComponent,
                    TextareaDirective,
                    SelectDirective,
                    LabelDirective
                ]
            }]
    }], function () { return []; }, null); })();
        return FormModule;
    }());

    var ContainerComponent = /** @class */ (function () {
        function ContainerComponent() {
            this.fluid = false;
        }
        Object.defineProperty(ContainerComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContainerComponent.prototype, "hostClasses", {
            get: function () {
                var classes = classNames__default['default']({
                    container: !this.fluid,
                    'container-fluid': !!this.fluid
                });
                return classes;
            },
            enumerable: false,
            configurable: true
        });
ContainerComponent.ɵfac = function ContainerComponent_Factory(t) { return new (t || ContainerComponent)(); };
ContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ContainerComponent, selectors: [["c-container"], ["", "cContainer", ""]], hostVars: 2, hostBindings: function ContainerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { fluid: "fluid" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{display:block}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ContainerComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-container, [cContainer]',
                template: '<ng-content></ng-content>',
                styles: [":host{display:block}"]
            }]
    }], function () { return []; }, { fluid: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }] }); })();
        return ContainerComponent;
    }());
    ContainerComponent.propDecorators = {
        fluid: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var RowDirective = /** @class */ (function () {
        function RowDirective() {
            this.noGutters = false;
        }
        Object.defineProperty(RowDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RowDirective.prototype, "hostClasses", {
            get: function () {
                var alignV = "align-items-" + this.alignV;
                var alignH = "justify-content-" + this.alignH;
                var classes = { row: true };
                classes['no-gutters'] = !!this.noGutters;
                classes[alignV] = !!this.alignV;
                classes[alignH] = !!this.alignH;
                return classNames__default['default'](classes);
            },
            enumerable: false,
            configurable: true
        });
RowDirective.ɵfac = function RowDirective_Factory(t) { return new (t || RowDirective)(); };
RowDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RowDirective, selectors: [["", "cRow", ""]], hostVars: 2, hostBindings: function RowDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { noGutters: "noGutters", alignV: "alignV", alignH: "alignH" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RowDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cRow]'
            }]
    }], function () { return []; }, { noGutters: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], alignV: [{
            type: i0.Input
        }], alignH: [{
            type: i0.Input
        }] }); })();
        return RowDirective;
    }());
    RowDirective.propDecorators = {
        noGutters: [{ type: i0.Input }],
        alignV: [{ type: i0.Input }],
        alignH: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var RowComponent = /** @class */ (function (_super) {
        __extends(RowComponent, _super);
        function RowComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
RowComponent.ɵfac = function RowComponent_Factory(t) { return ɵRowComponent_BaseFactory(t || RowComponent); };
RowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RowComponent, selectors: [["c-row"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function RowComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
var ɵRowComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(RowComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RowComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-row',
                template: '<ng-content></ng-content>',
                styles: [""]
            }]
    }], null, null); })();
        return RowComponent;
    }(RowDirective));

    var ColDirective = /** @class */ (function () {
        function ColDirective() {
            this.suffix = {
                xs: '-xs',
                sm: '-sm',
                md: '-md',
                lg: '-lg',
                xl: '-xl',
                xxl: '-xxl',
                col: ''
            };
        }
        Object.defineProperty(ColDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ColDirective.prototype, "hostClasses", {
            get: function () {
                var _this = this;
                var classes = Object.create(null);
                var suffix = this.suffix;
                var addColClass = false;
                Object.keys(suffix).forEach(function (key) {
                    var prop = _this[key];
                    var breakpoint = suffix[key];
                    classes["col" + breakpoint] = prop === true;
                    classes["col" + breakpoint + "-" + prop] = (typeof prop === 'number') || (typeof prop === 'string');
                    if (typeof prop === 'object') {
                        classes["col" + breakpoint + "-" + prop.size] = !!prop.size;
                        classes["offset" + breakpoint + "-" + prop.offset] = !!prop.offset;
                        classes["order" + breakpoint + "-" + prop.order] = !!prop.order;
                        addColClass = addColClass || !!prop.offset || !!prop.order;
                    }
                });
                classes = classNames__default['default'](addColClass ? 'col' : '', classes);
                return classes || 'col';
            },
            enumerable: false,
            configurable: true
        });
ColDirective.ɵfac = function ColDirective_Factory(t) { return new (t || ColDirective)(); };
ColDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ColDirective, selectors: [["", "cCol", ""]], hostVars: 2, hostBindings: function ColDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { xs: "xs", sm: "sm", md: "md", lg: "lg", xl: "xl", xxl: "xxl", col: "col" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ColDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cCol]'
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], xs: [{
            type: i0.Input
        }], sm: [{
            type: i0.Input
        }], md: [{
            type: i0.Input
        }], lg: [{
            type: i0.Input
        }], xl: [{
            type: i0.Input
        }], xxl: [{
            type: i0.Input
        }], col: [{
            type: i0.Input
        }] }); })();
        return ColDirective;
    }());
    ColDirective.propDecorators = {
        xs: [{ type: i0.Input }],
        sm: [{ type: i0.Input }],
        md: [{ type: i0.Input }],
        lg: [{ type: i0.Input }],
        xl: [{ type: i0.Input }],
        xxl: [{ type: i0.Input }],
        col: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var ColComponent = /** @class */ (function (_super) {
        __extends(ColComponent, _super);
        function ColComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
ColComponent.ɵfac = function ColComponent_Factory(t) { return ɵColComponent_BaseFactory(t || ColComponent); };
ColComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ColComponent, selectors: [["c-col"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ColComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{display:block}"] });
var ɵColComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(ColComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ColComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-col',
                template: '<ng-content></ng-content>',
                styles: [":host{display:block}"]
            }]
    }], null, null); })();
        return ColComponent;
    }(ColDirective));

    var GridModule = /** @class */ (function () {
        function GridModule() {
        }
GridModule.ɵfac = function GridModule_Factory(t) { return new (t || GridModule)(); };
GridModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: GridModule });
GridModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [], imports: [[i1.CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GridModule, { declarations: [ContainerComponent, RowComponent, ColComponent, RowDirective, ColDirective], imports: [ɵngcc1.CommonModule], exports: [ContainerComponent, RowComponent, ColComponent, RowDirective, ColDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GridModule, [{
        type: i0.NgModule,
        args: [{
                imports: [i1.CommonModule],
                exports: [
                    ContainerComponent,
                    RowComponent,
                    ColComponent,
                    RowDirective,
                    ColDirective,
                ],
                declarations: [
                    ContainerComponent,
                    RowComponent,
                    ColComponent,
                    RowDirective,
                    ColDirective,
                ],
                providers: []
            }]
    }], function () { return []; }, null); })();
        return GridModule;
    }());

    var ImgDirective = /** @class */ (function () {
        function ImgDirective() {
            this.align = '';
            this.placeholderColor = 'transparent';
        }
        Object.defineProperty(ImgDirective.prototype, "getStyles", {
            get: function () {
                return { backgroundColor: this.placeholderColor };
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ImgDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ImgDirective.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default'](this.alignClass, (_a = {
                        'img-thumbnail': this.thumbnail,
                        'img-fluid': this.fluid || this.fluidGrow,
                        'w-100': this.fluidGrow,
                        'd-block': this.block
                    },
                    _a["" + this.shape] = this.shape,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ImgDirective.prototype, "alignClass", {
            get: function () {
                return this.align === 'center' ? 'mx-auto' :
                    this.align === 'right' ? 'float-right' :
                        this.align === 'left' ? 'float-left' : '';
            },
            enumerable: false,
            configurable: true
        });
        ImgDirective.prototype.ngOnInit = function () { };
ImgDirective.ɵfac = function ImgDirective_Factory(t) { return new (t || ImgDirective)(); };
ImgDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ImgDirective, selectors: [["", "cImg", ""]], hostVars: 4, hostBindings: function ImgDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵstyleMap(ctx.getStyles);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { align: "align", placeholderColor: "placeholderColor", block: "block", fluid: "fluid", fluidGrow: "fluidGrow", shape: "shape", thumbnail: "thumbnail" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImgDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cImg]'
            }]
    }], function () { return []; }, { align: [{
            type: i0.Input
        }], placeholderColor: [{
            type: i0.Input
        }], getStyles: [{
            type: i0.HostBinding,
            args: ['style']
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], block: [{
            type: i0.Input
        }], fluid: [{
            type: i0.Input
        }], fluidGrow: [{
            type: i0.Input
        }], shape: [{
            type: i0.Input
        }], thumbnail: [{
            type: i0.Input
        }] }); })();
        return ImgDirective;
    }());
    ImgDirective.ctorParameters = function () { return []; };
    ImgDirective.propDecorators = {
        block: [{ type: i0.Input }],
        fluid: [{ type: i0.Input }],
        fluidGrow: [{ type: i0.Input }],
        shape: [{ type: i0.Input }],
        thumbnail: [{ type: i0.Input }],
        align: [{ type: i0.Input }],
        placeholderColor: [{ type: i0.Input }],
        getStyles: [{ type: i0.HostBinding, args: ['style',] }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var ImgModule = /** @class */ (function () {
        function ImgModule() {
        }
ImgModule.ɵfac = function ImgModule_Factory(t) { return new (t || ImgModule)(); };
ImgModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ImgModule });
ImgModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ImgModule, { declarations: [ImgDirective], imports: [ɵngcc1.CommonModule], exports: [ImgDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImgModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    i1.CommonModule
                ],
                exports: [
                    ImgDirective
                ],
                declarations: [
                    ImgDirective
                ]
            }]
    }], function () { return []; }, null); })();
        return ImgModule;
    }());

    var BodyComponent = /** @class */ (function () {
        function BodyComponent() {
            this.bodyClass = true;
        }
BodyComponent.ɵfac = function BodyComponent_Factory(t) { return new (t || BodyComponent)(); };
BodyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BodyComponent, selectors: [["c-body"], ["", "c-body", ""]], hostVars: 2, hostBindings: function BodyComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("c-body", ctx.bodyClass);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function BodyComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BodyComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-body, [c-body]',
                template: "<ng-content></ng-content>\n",
                styles: [":host{display:flex;flex-direction:column}"]
            }]
    }], function () { return []; }, { bodyClass: [{
            type: i0.HostBinding,
            args: ['class.c-body']
        }] }); })();
        return BodyComponent;
    }());
    BodyComponent.propDecorators = {
        bodyClass: [{ type: i0.HostBinding, args: ['class.c-body',] }]
    };

    var FooterComponent = /** @class */ (function () {
        function FooterComponent(renderer, hostElement) {
            this.renderer = renderer;
            this.hostElement = hostElement;
            this.fixedClass = 'c-footer-fixed';
            renderer.addClass(hostElement.nativeElement, 'c-footer');
        }
        FooterComponent.prototype.ngOnInit = function () {
            this.isFixed(this.fixed);
        };
        FooterComponent.prototype.ngOnDestroy = function () {
            this.renderer.removeClass(this.hostElement.nativeElement, this.fixedClass);
        };
        FooterComponent.prototype.isFixed = function (fixed) {
            if (fixed === void 0) { fixed = this.fixed; }
            if (fixed) {
                this.renderer.addClass(this.hostElement.nativeElement, this.fixedClass);
            }
        };
FooterComponent.ɵfac = function FooterComponent_Factory(t) { return new (t || FooterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FooterComponent, selectors: [["c-footer"], ["", "c-footer", ""]], inputs: { fixed: "fixed" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function FooterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-footer, [c-footer]',
                template: "<ng-content></ng-content>",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { fixed: [{
            type: i0.Input
        }] }); })();
        return FooterComponent;
    }());
    FooterComponent.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef }
    ]; };
    FooterComponent.propDecorators = {
        fixed: [{ type: i0.Input }]
    };

    var HeaderComponent = /** @class */ (function () {
        function HeaderComponent() {
            this.colorScheme = 'light';
            this.fixed = true;
            this.role = 'header';
        }
        Object.defineProperty(HeaderComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HeaderComponent.prototype, "hostClasses", {
            get: function () {
                var classes = classNames__default['default'](this.ngClass, this.class, {
                    'c-header': true,
                    'c-header-fixed': this.fixed,
                }, "c-header-" + this.colorScheme);
                return classes;
            },
            enumerable: false,
            configurable: true
        });
HeaderComponent.ɵfac = function HeaderComponent_Factory(t) { return new (t || HeaderComponent)(); };
HeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderComponent, selectors: [["c-header"], ["", "c-header", ""]], hostVars: 3, hostBindings: function HeaderComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { colorScheme: "colorScheme", fixed: "fixed", class: "class", ngClass: "ngClass" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function HeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-header, [c-header]',
                template: "<ng-content></ng-content>",
                styles: [""]
            }]
    }], function () { return []; }, { colorScheme: [{
            type: i0.Input
        }], fixed: [{
            type: i0.Input
        }], role: [{
            type: i0.HostBinding,
            args: ['attr.role']
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], class: [{
            type: i0.Input
        }], ngClass: [{
            type: i0.Input
        }] }); })();
        return HeaderComponent;
    }());
    HeaderComponent.ctorParameters = function () { return []; };
    HeaderComponent.propDecorators = {
        colorScheme: [{ type: i0.Input }],
        fixed: [{ type: i0.Input }],
        class: [{ type: i0.Input }],
        ngClass: [{ type: i0.Input }],
        role: [{ type: i0.HostBinding, args: ['attr.role',] }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var SidebarService = /** @class */ (function () {
        function SidebarService() {
            this.sidebarState = new rxjs.BehaviorSubject({});
            this.sidebarState$ = this.sidebarState.asObservable();
        }
        SidebarService.prototype.toggle = function (action) {
            this.sidebarState.next(action);
        };
SidebarService.ɵfac = function SidebarService_Factory(t) { return new (t || SidebarService)(); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
        return SidebarService;
    }());
    SidebarService.ɵprov = i0.ɵɵdefineInjectable({ factory: function SidebarService_Factory() { return new SidebarService(); }, token: SidebarService, providedIn: "root" });
    SidebarService.ctorParameters = function () { return []; };

    var HeaderBrandComponent = /** @class */ (function () {
        function HeaderBrandComponent(sidebarService) {
            this.sidebarService = sidebarService;
            this.routerLink = '';
            this.minimized = false;
        }
        HeaderBrandComponent.prototype.ngOnInit = function () {
            this.stateToggleSubscribe();
        };
        HeaderBrandComponent.prototype.ngOnDestroy = function () {
            this.stateToggleSubscribe(false);
        };
        HeaderBrandComponent.prototype.minimize = function (force) {
            this.minimized = (force === 'toggle') ? !this.minimized : force;
        };
        HeaderBrandComponent.prototype.stateToggleSubscribe = function (subscribe) {
            var _this = this;
            if (subscribe === void 0) { subscribe = true; }
            if (subscribe) {
                this.stateToggleSubscription = this.sidebarService.sidebarState$.subscribe(function (state) {
                    if (!state.id) {
                        if ('minimize' in state) {
                            _this.minimize(state.minimize);
                        }
                    }
                });
            }
            else {
                this.stateToggleSubscription.unsubscribe();
            }
        };
HeaderBrandComponent.ɵfac = function HeaderBrandComponent_Factory(t) { return new (t || HeaderBrandComponent)(ɵngcc0.ɵɵdirectiveInject(SidebarService)); };
HeaderBrandComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderBrandComponent, selectors: [["c-header-brand"]], inputs: { routerLink: "routerLink", minimized: "minimized" }, ngContentSelectors: _c12, decls: 3, vars: 3, consts: [["role", "button", 1, "c-header-brand", 3, "routerLink"], [3, "ngIf"]], template: function HeaderBrandComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c12);
        ɵngcc0.ɵɵelementStart(0, "a", 0);
        ɵngcc0.ɵɵtemplate(1, HeaderBrandComponent_ng_template_1_Template, 1, 0, "ng-template", 1);
        ɵngcc0.ɵɵtemplate(2, HeaderBrandComponent_ng_template_2_Template, 1, 0, "ng-template", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("routerLink", ctx.routerLink);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.minimized);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.minimized);
    } }, directives: [ɵngcc4.RouterLinkWithHref, ɵngcc1.NgIf], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderBrandComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-header-brand',
                template: "<a class=\"c-header-brand\" [routerLink]=\"routerLink\" role=\"button\">\r\n  <ng-template [ngIf]=\"minimized\">\r\n    <ng-content></ng-content>\r\n  </ng-template>\r\n  <ng-template [ngIf]=\"!minimized\">\r\n    <ng-content></ng-content>\r\n  </ng-template>\r\n</a>\r\n\r\n"
            }]
    }], function () { return [{ type: SidebarService }]; }, { routerLink: [{
            type: i0.Input
        }], minimized: [{
            type: i0.Input
        }] }); })();
        return HeaderBrandComponent;
    }());
    HeaderBrandComponent.ctorParameters = function () { return [
        { type: SidebarService }
    ]; };
    HeaderBrandComponent.propDecorators = {
        routerLink: [{ type: i0.Input }],
        minimized: [{ type: i0.Input }]
    };

    var SubheaderComponent = /** @class */ (function () {
        function SubheaderComponent() {
        }
        Object.defineProperty(SubheaderComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SubheaderComponent.prototype, "hostClasses", {
            get: function () {
                var classes = classNames__default['default'](this.ngClass, this.class, {
                    'c-subheader': true,
                });
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        SubheaderComponent.prototype.ngOnInit = function () {
        };
SubheaderComponent.ɵfac = function SubheaderComponent_Factory(t) { return new (t || SubheaderComponent)(); };
SubheaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SubheaderComponent, selectors: [["c-subheader"], ["", "c-subheader", ""]], hostVars: 2, hostBindings: function SubheaderComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { class: "class", ngClass: "ngClass" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function SubheaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SubheaderComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-subheader, [c-subheader]',
                template: "<ng-content></ng-content>"
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], class: [{
            type: i0.Input
        }], ngClass: [{
            type: i0.Input
        }] }); })();
        return SubheaderComponent;
    }());
    SubheaderComponent.ctorParameters = function () { return []; };
    SubheaderComponent.propDecorators = {
        class: [{ type: i0.Input }],
        ngClass: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var WrapperComponent = /** @class */ (function () {
        function WrapperComponent() {
            this.fluid = false;
        }
        Object.defineProperty(WrapperComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WrapperComponent.prototype, "hostClasses", {
            get: function () {
                var classes = classNames__default['default']({
                    'c-wrapper': true,
                    'c-wrapper-fluid': !!this.fluid
                });
                return classes;
            },
            enumerable: false,
            configurable: true
        });
WrapperComponent.ɵfac = function WrapperComponent_Factory(t) { return new (t || WrapperComponent)(); };
WrapperComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WrapperComponent, selectors: [["c-wrapper"], ["", "c-wrapper", ""]], hostVars: 2, hostBindings: function WrapperComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { fluid: "fluid" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function WrapperComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WrapperComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-wrapper, [c-wrapper]',
                template: "<ng-content></ng-content>"
            }]
    }], function () { return []; }, { fluid: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }] }); })();
        return WrapperComponent;
    }());
    WrapperComponent.propDecorators = {
        fluid: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var LayoutModule = /** @class */ (function () {
        function LayoutModule() {
        }
LayoutModule.ɵfac = function LayoutModule_Factory(t) { return new (t || LayoutModule)(); };
LayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });
LayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [], imports: [[
            i1.CommonModule,
            i1$1.RouterModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LayoutModule, { declarations: [FooterComponent, HeaderComponent, HeaderBrandComponent, SubheaderComponent, WrapperComponent, BodyComponent], imports: [ɵngcc1.CommonModule, ɵngcc4.RouterModule], exports: [BodyComponent, FooterComponent, HeaderComponent, HeaderBrandComponent, SubheaderComponent, WrapperComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    i1.CommonModule,
                    i1$1.RouterModule,
                ],
                exports: [
                    BodyComponent,
                    FooterComponent,
                    HeaderComponent,
                    HeaderBrandComponent,
                    SubheaderComponent,
                    WrapperComponent
                ],
                declarations: [
                    FooterComponent,
                    HeaderComponent,
                    HeaderBrandComponent,
                    SubheaderComponent,
                    WrapperComponent,
                    BodyComponent,
                ],
                providers: []
            }]
    }], function () { return []; }, null); })();
        return LayoutModule;
    }());

    var ListGroupDirective = /** @class */ (function () {
        function ListGroupDirective() {
        }
        Object.defineProperty(ListGroupDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListGroupDirective.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'list-group': true,
                        'list-group-horizontal': this.horizontal === true || this.horizontal === ''
                    },
                    _a["list-group-horizontal-" + this.horizontal] = this.horizontal && this.horizontal !== true,
                    _a['list-group-flush'] = !!this.flush,
                    _a['list-group-accent'] = !!this.accent,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
ListGroupDirective.ɵfac = function ListGroupDirective_Factory(t) { return new (t || ListGroupDirective)(); };
ListGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ListGroupDirective, selectors: [["", "cListGroup", ""], ["c-list-group"]], hostVars: 2, hostBindings: function ListGroupDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { horizontal: "horizontal", accent: "accent", flush: "flush" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListGroupDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cListGroup], c-list-group'
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], horizontal: [{
            type: i0.Input
        }], accent: [{
            type: i0.Input
        }], flush: [{
            type: i0.Input
        }] }); })();
        return ListGroupDirective;
    }());
    ListGroupDirective.ctorParameters = function () { return []; };
    ListGroupDirective.propDecorators = {
        horizontal: [{ type: i0.Input }],
        accent: [{ type: i0.Input }],
        flush: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var ListGroupItemDirective = /** @class */ (function () {
        function ListGroupItemDirective(renderer, hostElement) {
            this.renderer = renderer;
            this.hostElement = hostElement;
            this.host = this.hostElement.nativeElement;
        }
        Object.defineProperty(ListGroupItemDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListGroupItemDirective.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'list-group-item': true,
                        'list-group-item-action': this.action,
                        'list-group-item-divider': this.divider,
                        active: this.active,
                        disabled: this.disabled
                    },
                    _a["list-group-item-" + this.color] = !!this.color,
                    _a["list-group-item-accent-" + this.accent] = !!this.accent,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        ListGroupItemDirective.prototype.ngOnInit = function () { };
        ListGroupItemDirective.prototype.ngOnChanges = function (changes) {
            if (changes.color) {
                this.renderer.addClass(this.host, "list-group-item-" + changes.color.currentValue);
                this.renderer.removeClass(this.host, "list-group-item-" + changes.color.previousValue);
            }
            if (changes.accent) {
                this.renderer.addClass(this.host, "list-group-item-accent-" + changes.accent.currentValue);
                this.renderer.removeClass(this.host, "list-group-item-accent-" + changes.accent.previousValue);
            }
        };
ListGroupItemDirective.ɵfac = function ListGroupItemDirective_Factory(t) { return new (t || ListGroupItemDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ListGroupItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ListGroupItemDirective, selectors: [["", "cListGroupItem", ""], ["c-list-group-item"]], hostVars: 3, hostBindings: function ListGroupItemDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("disabled", ctx.disabled);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { accent: "accent", action: "action", active: "active", color: "color", divider: "divider", disabled: "disabled" }, exportAs: ["cListGroupItem"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListGroupItemDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cListGroupItem], c-list-group-item',
                exportAs: 'cListGroupItem'
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], accent: [{
            type: i0.Input
        }], action: [{
            type: i0.Input
        }], active: [{
            type: i0.Input
        }], color: [{
            type: i0.Input
        }], divider: [{
            type: i0.Input
        }], disabled: [{
            type: i0.HostBinding,
            args: ['attr.disabled']
        }, {
            type: i0.Input
        }] }); })();
        return ListGroupItemDirective;
    }());
    ListGroupItemDirective.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef }
    ]; };
    ListGroupItemDirective.propDecorators = {
        accent: [{ type: i0.Input }],
        action: [{ type: i0.Input }],
        active: [{ type: i0.Input }],
        color: [{ type: i0.Input }],
        divider: [{ type: i0.Input }],
        disabled: [{ type: i0.HostBinding, args: ['attr.disabled',] }, { type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var ListGroupModule = /** @class */ (function () {
        function ListGroupModule() {
        }
ListGroupModule.ɵfac = function ListGroupModule_Factory(t) { return new (t || ListGroupModule)(); };
ListGroupModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ListGroupModule });
ListGroupModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ListGroupModule, { declarations: [ListGroupDirective, ListGroupItemDirective], imports: [ɵngcc1.CommonModule], exports: [ListGroupDirective, ListGroupItemDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListGroupModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [ListGroupDirective, ListGroupItemDirective],
                exports: [
                    ListGroupDirective,
                    ListGroupItemDirective
                ],
                imports: [
                    i1.CommonModule
                ]
            }]
    }], function () { return []; }, null); })();
        return ListGroupModule;
    }());

    var MediaDirective = /** @class */ (function () {
        function MediaDirective() {
            this.madiaClass = true;
        }
MediaDirective.ɵfac = function MediaDirective_Factory(t) { return new (t || MediaDirective)(); };
MediaDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MediaDirective, selectors: [["", "cMedia", ""]], hostVars: 2, hostBindings: function MediaDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("media", ctx.madiaClass);
    } } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cMedia]'
            }]
    }], function () { return []; }, { madiaClass: [{
            type: i0.HostBinding,
            args: ['class.media']
        }] }); })();
        return MediaDirective;
    }());
    MediaDirective.propDecorators = {
        madiaClass: [{ type: i0.HostBinding, args: ['class.media',] }]
    };

    var MediaComponent = /** @class */ (function (_super) {
        __extends(MediaComponent, _super);
        function MediaComponent() {
            return _super.call(this) || this;
        }
MediaComponent.ɵfac = function MediaComponent_Factory(t) { return new (t || MediaComponent)(); };
MediaComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MediaComponent, selectors: [["c-media"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MediaComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-media',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return []; }, null); })();
        return MediaComponent;
    }(MediaDirective));
    MediaComponent.ctorParameters = function () { return []; };

    var MediaBodyComponent = /** @class */ (function () {
        function MediaBodyComponent() {
            this.mediaBodyClass = true;
        }
MediaBodyComponent.ɵfac = function MediaBodyComponent_Factory(t) { return new (t || MediaBodyComponent)(); };
MediaBodyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MediaBodyComponent, selectors: [["c-media-body"]], hostVars: 2, hostBindings: function MediaBodyComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("media-body", ctx.mediaBodyClass);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function MediaBodyComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaBodyComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-media-body',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return []; }, { mediaBodyClass: [{
            type: i0.HostBinding,
            args: ['class.media-body']
        }] }); })();
        return MediaBodyComponent;
    }());
    MediaBodyComponent.propDecorators = {
        mediaBodyClass: [{ type: i0.HostBinding, args: ['class.media-body',] }]
    };

    var MediaModule = /** @class */ (function () {
        function MediaModule() {
        }
MediaModule.ɵfac = function MediaModule_Factory(t) { return new (t || MediaModule)(); };
MediaModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MediaModule });
MediaModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[i1.CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MediaModule, { declarations: [MediaComponent, MediaBodyComponent, MediaDirective], imports: [ɵngcc1.CommonModule], exports: [MediaDirective, MediaComponent, MediaBodyComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [MediaComponent, MediaBodyComponent, MediaDirective],
                imports: [i1.CommonModule],
                exports: [MediaDirective, MediaComponent, MediaBodyComponent]
            }]
    }], function () { return []; }, null); })();
        return MediaModule;
    }());

    var ModalComponent = /** @class */ (function () {
        function ModalComponent(document, renderer, elementRef, changeDetectorRef) {
            this.document = document;
            this.renderer = renderer;
            this.elementRef = elementRef;
            this.changeDetectorRef = changeDetectorRef;
            this.closeOnBackdrop = true;
            this.size = '';
            this.color = '';
            this.modalClasses = {
                modal: true,
                fade: true
            };
            this.dialogClasses = {
                'modal-dialog': true
            };
            this.backdropClasses = {
                'modal-backdrop': true,
                fade: true,
                show: true
            };
            this.visible = false;
            this.visibleAnimate = false;
        }
        ModalComponent.prototype.ngOnInit = function () {
            this.setClasses();
        };
        ModalComponent.prototype.ngOnDestroy = function () {
            this.hide();
        };
        ModalComponent.prototype.setClasses = function () {
            this.dialogClasses["modal-" + this.size] = !!this.size;
            this.dialogClasses["modal-" + this.color] = !!this.color;
        };
        ModalComponent.prototype.show = function () {
            var _this = this;
            this.renderer.addClass(this.document.body, 'modal-open');
            this.visible = true;
            this.modalClasses["d-block"] = true;
            setTimeout(function () {
                _this.visibleAnimate = true;
            });
        };
        ModalComponent.prototype.hide = function () {
            var _this = this;
            this.renderer.removeClass(this.document.body, 'modal-open');
            this.visibleAnimate = false;
            setTimeout(function () {
                _this.visible = false;
                _this.modalClasses["d-block"] = false;
                _this.changeDetectorRef.markForCheck();
            }, 200);
        };
        ModalComponent.prototype.onContainerClicked = function (event) {
            if (event.target.classList.contains('modal') && this.isTopmost() && this.closeOnBackdrop) {
                this.hide();
            }
        };
        ModalComponent.prototype.onKeyDownHandler = function (event) {
            if (event.key === 'Escape' && this.isTopmost()) {
                this.hide();
            }
        };
        ModalComponent.prototype.isTopmost = function () {
            var isTopmost = !this.elementRef.nativeElement.querySelector(':scope c-modal > .modal');
            return isTopmost;
        };
ModalComponent.ɵfac = function ModalComponent_Factory(t) { return new (t || ModalComponent)(ɵngcc0.ɵɵdirectiveInject(i1.DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ModalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ModalComponent, selectors: [["c-modal"]], contentQueries: function ModalComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c13, 3);
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c14, 3);
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c15, 3);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.header = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.body = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footer = _t.first);
    } }, hostBindings: function ModalComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ModalComponent_click_HostBindingHandler($event) { return ctx.onContainerClicked($event); })("keydown", function ModalComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDownHandler($event); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { closeOnBackdrop: "closeOnBackdrop", size: "size", color: "color" }, decls: 2, vars: 2, consts: [["role", "dialog", "tabindex", "-1", 3, "show", "ngClass", 4, "ngIf"], [3, "ngClass", 4, "ngIf"], ["role", "dialog", "tabindex", "-1", 3, "ngClass"], ["role", "document", 3, "ngClass"], [1, "modal-content"], [1, "modal-header"], ["class", "modal-title", 4, "ngTemplateOutlet"], ["data-dismiss", "modal", "type", "button", "aria-label", "Close", 1, "close", 3, "click"], [1, "modal-body"], [4, "ngTemplateOutlet"], [1, "modal-footer"], [1, "modal-title"], [3, "ngClass"]], template: function ModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ModalComponent_div_0_Template, 11, 7, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ModalComponent_div_1_Template, 1, 1, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.visible);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.visibleAnimate);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgTemplateOutlet], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-modal',
                template: "<div\n  role=\"dialog\"\n  tabindex=\"-1\"\n  [class.show]=\"visibleAnimate\"\n  [ngClass]=\"modalClasses\"\n  *ngIf=\"visible\">\n  <div [ngClass]=\"dialogClasses\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <ng-container *ngTemplateOutlet=\"header\" class=\"modal-title\"></ng-container>\n        <button class=\"close\" data-dismiss=\"modal\" type=\"button\" aria-label=\"Close\" (click)=\"hide()\">\u00D7</button>\n      </div>\n      <div class=\"modal-body\">\n        <ng-container *ngTemplateOutlet=\"body\"></ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <ng-container *ngTemplateOutlet=\"footer\"></ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<div\n  *ngIf=\"visibleAnimate\"\n  [ngClass]=\"backdropClasses\">\n</div>\n",
                styles: [""]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: i0.Inject,
                args: [i1.DOCUMENT]
            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { closeOnBackdrop: [{
            type: i0.Input
        }], size: [{
            type: i0.Input
        }], color: [{
            type: i0.Input
        }], onContainerClicked: [{
            type: i0.HostListener,
            args: ['click', ['$event']]
        }], onKeyDownHandler: [{
            type: i0.HostListener,
            args: ['document:keydown', ['$event']]
        }], header: [{
            type: i0.ContentChild,
            args: ['modalHeader', { static: true }]
        }], body: [{
            type: i0.ContentChild,
            args: ['modalBody', { static: true }]
        }], footer: [{
            type: i0.ContentChild,
            args: ['modalFooter', { static: true }]
        }] }); })();
        return ModalComponent;
    }());
    ModalComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Inject, args: [i1.DOCUMENT,] }] },
        { type: i0.Renderer2 },
        { type: i0.ElementRef },
        { type: i0.ChangeDetectorRef }
    ]; };
    ModalComponent.propDecorators = {
        header: [{ type: i0.ContentChild, args: ['modalHeader', { static: true },] }],
        body: [{ type: i0.ContentChild, args: ['modalBody', { static: true },] }],
        footer: [{ type: i0.ContentChild, args: ['modalFooter', { static: true },] }],
        closeOnBackdrop: [{ type: i0.Input }],
        size: [{ type: i0.Input }],
        color: [{ type: i0.Input }],
        onContainerClicked: [{ type: i0.HostListener, args: ['click', ['$event'],] }],
        onKeyDownHandler: [{ type: i0.HostListener, args: ['document:keydown', ['$event'],] }]
    };

    var ModalModule = /** @class */ (function () {
        function ModalModule() {
        }
ModalModule.ɵfac = function ModalModule_Factory(t) { return new (t || ModalModule)(); };
ModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ModalModule });
ModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModalModule, { declarations: [ModalComponent], imports: [ɵngcc1.CommonModule], exports: [ModalComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [ModalComponent],
                exports: [ModalComponent],
                imports: [
                    i1.CommonModule
                ]
            }]
    }], function () { return []; }, null); })();
        return ModalModule;
    }());

    var NavComponent = /** @class */ (function () {
        function NavComponent() {
            this.variant = '';
        }
        Object.defineProperty(NavComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var verticalSuffix = this.vertical === true ? '' : "-" + this.vertical;
                var classes = classNames__default['default']((_a = {
                        nav: true
                    },
                    _a["nav-" + this.variant] = this.variant,
                    _a["flex" + verticalSuffix + "-column"] = this.vertical,
                    _a['nav-fill'] = this.fill,
                    _a['nav-justified'] = this.justified,
                    _a["card-header-" + this.variant] = this.inCard && this.variant,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        NavComponent.prototype.ngOnInit = function () { };
NavComponent.ɵfac = function NavComponent_Factory(t) { return new (t || NavComponent)(); };
NavComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NavComponent, selectors: [["c-nav"]], hostVars: 2, hostBindings: function NavComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { variant: "variant", fill: "fill", justified: "justified", vertical: "vertical", inCard: "inCard" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function NavComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%] > .nav-link[_ngcontent-%COMP%]:focus{outline:0}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-nav',
                template: "<ng-content></ng-content>\n",
                styles: [":host>.nav-link:focus{outline:0}"]
            }]
    }], function () { return []; }, { variant: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], fill: [{
            type: i0.Input
        }], justified: [{
            type: i0.Input
        }], vertical: [{
            type: i0.Input
        }], inCard: [{
            type: i0.Input
        }] }); })();
        return NavComponent;
    }());
    NavComponent.ctorParameters = function () { return []; };
    NavComponent.propDecorators = {
        variant: [{ type: i0.Input }],
        fill: [{ type: i0.Input }],
        justified: [{ type: i0.Input }],
        vertical: [{ type: i0.Input }],
        inCard: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var NavItemComponent = /** @class */ (function () {
        function NavItemComponent() {
        }
        Object.defineProperty(NavItemComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavItemComponent.prototype, "hostClasses", {
            get: function () {
                var classes = classNames__default['default']({
                    'nav-item': true,
                });
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        NavItemComponent.prototype.ngOnInit = function () {
        };
NavItemComponent.ɵfac = function NavItemComponent_Factory(t) { return new (t || NavItemComponent)(); };
NavItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NavItemComponent, selectors: [["c-nav-item"]], hostVars: 2, hostBindings: function NavItemComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function NavItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{display:list-item;text-align:match-parent}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavItemComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-nav-item',
                template: "<ng-content></ng-content>\n",
                styles: [":host{display:list-item;text-align:match-parent}"]
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }] }); })();
        return NavItemComponent;
    }());
    NavItemComponent.ctorParameters = function () { return []; };
    NavItemComponent.propDecorators = {
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var NavLinkDirective = /** @class */ (function () {
        function NavLinkDirective() {
            this.disabled = null;
            this.tabindex = null;
        }
        Object.defineProperty(NavLinkDirective.prototype, "isDisabled", {
            get: function () {
                return (this.disabled !== 'false' && this.disabled !== false && this.disabled !== null) ? this.disabled : null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavLinkDirective.prototype, "getTabindex", {
            get: function () {
                return this.disabled ? null : this.tabindex != null ? this.tabindex : '0';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavLinkDirective.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavLinkDirective.prototype, "hostClasses", {
            get: function () {
                var classes = classNames__default['default']({
                    'nav-link': true,
                    disabled: this.disabled,
                    active: this.active
                });
                return classes;
            },
            enumerable: false,
            configurable: true
        });
NavLinkDirective.ɵfac = function NavLinkDirective_Factory(t) { return new (t || NavLinkDirective)(); };
NavLinkDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NavLinkDirective, selectors: [["", "cNavLink", ""]], hostVars: 4, hostBindings: function NavLinkDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-disabled", ctx.isDisabled)("tabindex", ctx.getTabindex);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { disabled: "disabled", tabindex: "tabindex", active: "active" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavLinkDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cNavLink]'
            }]
    }], function () { return []; }, { disabled: [{
            type: i0.Input
        }], tabindex: [{
            type: i0.Input
        }], isDisabled: [{
            type: i0.HostBinding,
            args: ['attr.aria-disabled']
        }], getTabindex: [{
            type: i0.HostBinding,
            args: ['attr.tabindex']
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], active: [{
            type: i0.Input
        }] }); })();
        return NavLinkDirective;
    }());
    NavLinkDirective.ctorParameters = function () { return []; };
    NavLinkDirective.propDecorators = {
        disabled: [{ type: i0.Input }],
        tabindex: [{ type: i0.Input }],
        active: [{ type: i0.Input }],
        isDisabled: [{ type: i0.HostBinding, args: ['attr.aria-disabled',] }],
        getTabindex: [{ type: i0.HostBinding, args: ['attr.tabindex',] }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var NavModule = /** @class */ (function () {
        function NavModule() {
        }
NavModule.ɵfac = function NavModule_Factory(t) { return new (t || NavModule)(); };
NavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NavModule });
NavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NavModule, { declarations: [NavComponent, NavItemComponent, NavLinkDirective], imports: [ɵngcc1.CommonModule], exports: [NavComponent, NavItemComponent, NavLinkDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [NavComponent, NavItemComponent, NavLinkDirective],
                imports: [
                    i1.CommonModule
                ],
                exports: [NavComponent, NavItemComponent, NavLinkDirective]
            }]
    }], function () { return []; }, null); })();
        return NavModule;
    }());

    var NavbarComponent = /** @class */ (function () {
        function NavbarComponent(hostElement, breakpointObserver) {
            this.hostElement = hostElement;
            this.breakpointObserver = breakpointObserver;
        }
        Object.defineProperty(NavbarComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavbarComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var expandClassSuffix = this.expandable === true ? '' : "-" + this.expandable;
                var classes = classNames__default['default']((_a = {
                        navbar: true,
                        'navbar-light': this.light,
                        'navbar-dark': !this.light
                    },
                    _a["navbar-expand" + expandClassSuffix] = !!this.expandable,
                    _a["bg-" + this.color] = !!this.color,
                    _a["fixed-" + this.fixed] = !!this.fixed,
                    _a['sticky-top'] = this.sticky,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavbarComponent.prototype, "breakpoint", {
            get: function () {
                if (typeof this.expandable === 'string') {
                    return getComputedStyle(this.hostElement.nativeElement).getPropertyValue("--breakpoint-" + this.expandable);
                }
            },
            enumerable: false,
            configurable: true
        });
        NavbarComponent.prototype.ngOnInit = function () { };
        NavbarComponent.prototype.ngAfterContentInit = function () {
            var _this = this;
            if (this.breakpoint) {
                var onBreakpoint = "(min-width: " + this.breakpoint + ")";
                this.breakpointObserver.observe([onBreakpoint]).subscribe(function (result) {
                    var animate = Object.assign({}, _this.collapse).animate;
                    _this.collapse._animate = false;
                    _this.collapse.show = false;
                    setTimeout(function () {
                        _this.collapse.show = result.matches;
                    }, 0);
                    setTimeout(function () {
                        _this.collapse._animate = animate;
                    });
                });
            }
        };
NavbarComponent.ɵfac = function NavbarComponent_Factory(t) { return new (t || NavbarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.BreakpointObserver)); };
NavbarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NavbarComponent, selectors: [["c-navbar"]], contentQueries: function NavbarComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, CollapseDirective, 1);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.collapse = _t.first);
    } }, hostVars: 2, hostBindings: function NavbarComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { light: "light", color: "color", fixed: "fixed", sticky: "sticky", expandable: "expandable" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function NavbarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavbarComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-navbar',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc7.BreakpointObserver }]; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], light: [{
            type: i0.Input
        }], color: [{
            type: i0.Input
        }], fixed: [{
            type: i0.Input
        }], sticky: [{
            type: i0.Input
        }], expandable: [{
            type: i0.Input
        }], collapse: [{
            type: i0.ContentChild,
            args: [CollapseDirective]
        }] }); })();
        return NavbarComponent;
    }());
    NavbarComponent.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: layout.BreakpointObserver }
    ]; };
    NavbarComponent.propDecorators = {
        light: [{ type: i0.Input }],
        color: [{ type: i0.Input }],
        fixed: [{ type: i0.Input }],
        sticky: [{ type: i0.Input }],
        expandable: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }],
        collapse: [{ type: i0.ContentChild, args: [CollapseDirective,] }]
    };

    var NavbarBrandComponent = /** @class */ (function () {
        function NavbarBrandComponent() {
            this.navbarBrand = true;
            this.role = 'button';
        }
        NavbarBrandComponent.prototype.ngOnInit = function () { };
NavbarBrandComponent.ɵfac = function NavbarBrandComponent_Factory(t) { return new (t || NavbarBrandComponent)(); };
NavbarBrandComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NavbarBrandComponent, selectors: [["c-navbar-brand"]], hostVars: 3, hostBindings: function NavbarBrandComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role);
        ɵngcc0.ɵɵclassProp("navbar-brand", ctx.navbarBrand);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function NavbarBrandComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{outline:inherit}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavbarBrandComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-navbar-brand',
                template: "<ng-content></ng-content>\n",
                styles: [":host{outline:inherit}"]
            }]
    }], function () { return []; }, { navbarBrand: [{
            type: i0.HostBinding,
            args: ['class.navbar-brand']
        }], role: [{
            type: i0.HostBinding,
            args: ['attr.role']
        }] }); })();
        return NavbarBrandComponent;
    }());
    NavbarBrandComponent.ctorParameters = function () { return []; };
    NavbarBrandComponent.propDecorators = {
        navbarBrand: [{ type: i0.HostBinding, args: ['class.navbar-brand',] }],
        role: [{ type: i0.HostBinding, args: ['attr.role',] }]
    };

    var NavbarNavComponent = /** @class */ (function () {
        function NavbarNavComponent() {
            this.navbarNav = true;
        }
        NavbarNavComponent.prototype.ngOnInit = function () { };
NavbarNavComponent.ɵfac = function NavbarNavComponent_Factory(t) { return new (t || NavbarNavComponent)(); };
NavbarNavComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NavbarNavComponent, selectors: [["c-navbar-nav"]], hostVars: 2, hostBindings: function NavbarNavComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("navbar-nav", ctx.navbarNav);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function NavbarNavComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavbarNavComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-navbar-nav',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return []; }, { navbarNav: [{
            type: i0.HostBinding,
            args: ['class.navbar-nav']
        }] }); })();
        return NavbarNavComponent;
    }());
    NavbarNavComponent.ctorParameters = function () { return []; };
    NavbarNavComponent.propDecorators = {
        navbarNav: [{ type: i0.HostBinding, args: ['class.navbar-nav',] }]
    };

    var NavbarTextComponent = /** @class */ (function () {
        function NavbarTextComponent() {
            this.navbarTextClass = true;
        }
        NavbarTextComponent.prototype.ngOnInit = function () { };
NavbarTextComponent.ɵfac = function NavbarTextComponent_Factory(t) { return new (t || NavbarTextComponent)(); };
NavbarTextComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NavbarTextComponent, selectors: [["c-navbar-text"]], hostVars: 2, hostBindings: function NavbarTextComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("navbar-text", ctx.navbarTextClass);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function NavbarTextComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavbarTextComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-navbar-text',
                template: "<ng-content></ng-content>\n"
            }]
    }], function () { return []; }, { navbarTextClass: [{
            type: i0.HostBinding,
            args: ['class.navbar-text']
        }] }); })();
        return NavbarTextComponent;
    }());
    NavbarTextComponent.ctorParameters = function () { return []; };
    NavbarTextComponent.propDecorators = {
        navbarTextClass: [{ type: i0.HostBinding, args: ['class.navbar-text',] }]
    };

    var NavbarModule = /** @class */ (function () {
        function NavbarModule() {
        }
NavbarModule.ɵfac = function NavbarModule_Factory(t) { return new (t || NavbarModule)(); };
NavbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NavbarModule });
NavbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule,
            i1$1.RouterModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NavbarModule, { declarations: [NavbarComponent, NavbarBrandComponent, NavbarNavComponent, NavbarTextComponent], imports: [ɵngcc1.CommonModule, ɵngcc4.RouterModule], exports: [NavbarComponent, NavbarBrandComponent, NavbarNavComponent, NavbarTextComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavbarModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    NavbarComponent,
                    NavbarBrandComponent,
                    NavbarNavComponent,
                    NavbarTextComponent
                ],
                exports: [
                    NavbarComponent,
                    NavbarBrandComponent,
                    NavbarNavComponent,
                    NavbarTextComponent
                ],
                imports: [
                    i1.CommonModule,
                    i1$1.RouterModule
                ]
            }]
    }], function () { return []; }, null); })();
        return NavbarModule;
    }());

    var ProgressComponent = /** @class */ (function () {
        function ProgressComponent() {
        }
        Object.defineProperty(ProgressComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProgressComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        progress: true
                    },
                    _a["progress-" + this.size] = !!this.size,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
ProgressComponent.ɵfac = function ProgressComponent_Factory(t) { return new (t || ProgressComponent)(); };
ProgressComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ProgressComponent, selectors: [["c-progress"]], hostVars: 2, hostBindings: function ProgressComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ProgressComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{width:100%;display:flex}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProgressComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-progress',
                template: "<ng-content></ng-content>\n<!--<ng-template [ngIf]=\"stacked.length>0\">-->\n<!--  <c-progress-bar *ngFor=\"let item of stacked\"-->\n<!--                    [value]=\"item.value\"-->\n<!--                    [variant]=\"item.variant\"-->\n<!--                    [animate]=\"item.animate\"-->\n<!--                    [striped]=\"item.striped\"-->\n<!--                    [min]=\"item.min || min || 0\"-->\n<!--                    [max]=\"item.max || max || 100\">-->\n<!--    {{item.label || (item.value/100 | percent)}}-->\n<!--  </c-progress-bar>-->\n<!--</ng-template>-->\n",
                styles: [":host{width:100%;display:flex}"]
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], size: [{
            type: i0.Input
        }] }); })();
        return ProgressComponent;
    }());
    ProgressComponent.propDecorators = {
        size: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var ProgressBarComponent = /** @class */ (function () {
        function ProgressBarComponent(renderer, hostElement) {
            this.renderer = renderer;
            this.hostElement = hostElement;
            this.state = {
                percent: 0,
                min: 0,
                max: 100
            };
            this.animated = false;
            this.striped = false;
            this.precision = 0;
            this.value = 0;
            this.role = 'progressbar';
            this.host = this.hostElement.nativeElement;
        }
        Object.defineProperty(ProgressBarComponent.prototype, "min", {
            get: function () {
                return this.state.min;
            },
            set: function (value) {
                this.state.min = isNaN(value) ? 0 : value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProgressBarComponent.prototype, "max", {
            get: function () {
                return this.state.max;
            },
            set: function (value) {
                this.state.max = isNaN(value) || value <= 0 || value === this.min ? 100 : value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProgressBarComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProgressBarComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'progress-bar': true,
                        'progress-bar-animated': this.animated,
                        'progress-bar-striped': this.striped || this.animated
                    },
                    _a["bg-" + this.color] = !!this.color,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        ProgressBarComponent.prototype.ngOnInit = function () {
            this.setValues();
        };
        ProgressBarComponent.prototype.setPercent = function () {
            this.state.percent = +((this.value / (this.max - this.min)) * 100).toFixed(this.precision);
        };
        ProgressBarComponent.prototype.setValues = function () {
            this.setPercent();
            this.renderer.setStyle(this.host, 'width', this.state.percent + "%");
            this.renderer.setAttribute(this.host, 'aria-valuenow', String(this.value));
            this.renderer.setAttribute(this.host, 'aria-valuemin', String(this.min));
            this.renderer.setAttribute(this.host, 'aria-valuemax', String(this.max));
        };
        ProgressBarComponent.prototype.ngOnChanges = function (changes) {
            if (changes.color) {
                this.renderer.removeClass(this.host, "bg-" + changes.color.previousValue);
            }
            this.setValues();
        };
ProgressBarComponent.ɵfac = function ProgressBarComponent_Factory(t) { return new (t || ProgressBarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ProgressBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ProgressBarComponent, selectors: [["c-progress-bar"]], hostVars: 3, hostBindings: function ProgressBarComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { animated: "animated", striped: "striped", precision: "precision", value: "value", role: "role", min: "min", max: "max", color: "color" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ProgressBarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProgressBarComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-progress-bar',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { animated: [{
            type: i0.Input
        }], striped: [{
            type: i0.Input
        }], precision: [{
            type: i0.Input
        }], value: [{
            type: i0.Input
        }], role: [{
            type: i0.Input
        }, {
            type: i0.HostBinding,
            args: ['attr.role']
        }], min: [{
            type: i0.Input
        }], max: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], color: [{
            type: i0.Input
        }] }); })();
        return ProgressBarComponent;
    }());
    ProgressBarComponent.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef }
    ]; };
    ProgressBarComponent.propDecorators = {
        color: [{ type: i0.Input }],
        animated: [{ type: i0.Input }],
        striped: [{ type: i0.Input }],
        precision: [{ type: i0.Input }],
        value: [{ type: i0.Input }],
        min: [{ type: i0.Input }],
        max: [{ type: i0.Input }],
        role: [{ type: i0.Input }, { type: i0.HostBinding, args: ['attr.role',] }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var ProgressModule = /** @class */ (function () {
        function ProgressModule() {
        }
ProgressModule.ɵfac = function ProgressModule_Factory(t) { return new (t || ProgressModule)(); };
ProgressModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ProgressModule });
ProgressModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ProgressModule, { declarations: [ProgressComponent, ProgressBarComponent], imports: [ɵngcc1.CommonModule], exports: [ProgressComponent, ProgressBarComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProgressModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [ProgressComponent, ProgressBarComponent],
                exports: [
                    ProgressComponent,
                    ProgressBarComponent
                ],
                imports: [
                    i1.CommonModule
                ]
            }]
    }], function () { return []; }, null); })();
        return ProgressModule;
    }());

    var ClassToggleService = /** @class */ (function () {
        function ClassToggleService(document, rendererFactory) {
            this.document = document;
            this.rendererFactory = rendererFactory;
            this.renderer = rendererFactory.createRenderer(null, null);
        }
        ClassToggleService.prototype.toggle = function (selector, className) {
            var element = document.querySelector(selector);
            if (element) {
                element.classList.contains(className) ?
                    this.renderer.removeClass(element, className) :
                    this.renderer.addClass(element, className);
            }
        };
ClassToggleService.ɵfac = function ClassToggleService_Factory(t) { return new (t || ClassToggleService)(ɵngcc0.ɵɵinject(i1.DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClassToggleService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: i0.Inject,
                args: [i1.DOCUMENT]
            }] }, { type: ɵngcc0.RendererFactory2 }]; }, null); })();
        return ClassToggleService;
    }());
    ClassToggleService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ClassToggleService_Factory() { return new ClassToggleService(i0.ɵɵinject(i1.DOCUMENT), i0.ɵɵinject(i0.RendererFactory2)); }, token: ClassToggleService, providedIn: "root" });
    ClassToggleService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Inject, args: [i1.DOCUMENT,] }] },
        { type: i0.RendererFactory2 }
    ]; };

    var SidebarBackdropComponent = /** @class */ (function () {
        function SidebarBackdropComponent(elementRef, sidebarService) {
            this.elementRef = elementRef;
            this.sidebarService = sidebarService;
            this._sidebarBackdrop = true;
        }
        SidebarBackdropComponent.prototype.onClick = function ($event) {
            var targetElement = $event.target;
            if (targetElement && !this.elementRef.nativeElement.contains(targetElement)) {
                this.sidebarService.toggle({ open: false });
            }
        };
        SidebarBackdropComponent.prototype.ngOnInit = function () {
        };
SidebarBackdropComponent.ɵfac = function SidebarBackdropComponent_Factory(t) { return new (t || SidebarBackdropComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(SidebarService)); };
SidebarBackdropComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarBackdropComponent, selectors: [["c-sidebar-backdrop"]], hostVars: 2, hostBindings: function SidebarBackdropComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function SidebarBackdropComponent_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("c-sidebar-backdrop", ctx._sidebarBackdrop);
    } }, decls: 0, vars: 0, template: function SidebarBackdropComponent_Template(rf, ctx) { }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarBackdropComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-backdrop',
                template: "",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: SidebarService }]; }, { _sidebarBackdrop: [{
            type: i0.HostBinding,
            args: ['class.c-sidebar-backdrop']
        }], onClick: [{
            type: i0.HostListener,
            args: ['click', ['$event']]
        }] }); })();
        return SidebarBackdropComponent;
    }());
    SidebarBackdropComponent.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: SidebarService }
    ]; };
    SidebarBackdropComponent.propDecorators = {
        _sidebarBackdrop: [{ type: i0.HostBinding, args: ['class.c-sidebar-backdrop',] }],
        onClick: [{ type: i0.HostListener, args: ['click', ['$event'],] }]
    };

    var SidebarBrandComponent = /** @class */ (function () {
        function SidebarBrandComponent() {
            this.brandText = { icon: '🅲', text: '🅲 CoreUI' };
            this.routerLink = '';
            this._sidebarBrand = true;
        }
        SidebarBrandComponent.prototype.ngOnInit = function () {
            this.brandImg = Boolean(this.brand || this.brandFull || this.brandMinimized);
        };
SidebarBrandComponent.ɵfac = function SidebarBrandComponent_Factory(t) { return new (t || SidebarBrandComponent)(); };
SidebarBrandComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarBrandComponent, selectors: [["c-sidebar-brand"]], hostVars: 2, hostBindings: function SidebarBrandComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("c-sidebar-brand", ctx._sidebarBrand);
    } }, inputs: { brandText: "brandText", routerLink: "routerLink", brand: "brand", brandFull: "brandFull", brandMinimized: "brandMinimized" }, decls: 3, vars: 3, consts: [[3, "routerLink"], [3, "ngIf"], [3, "cHtmlAttr", "ngClass", 4, "ngIf"], [3, "cHtmlAttr", "ngClass"], [1, "c-sidebar-brand-full", 3, "innerHTML"], [1, "c-sidebar-brand-minimized", 3, "innerHTML"]], template: function SidebarBrandComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "a", 0);
        ɵngcc0.ɵɵtemplate(1, SidebarBrandComponent_ng_template_1_Template, 2, 2, "ng-template", 1);
        ɵngcc0.ɵɵtemplate(2, SidebarBrandComponent_ng_template_2_Template, 2, 2, "ng-template", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("routerLink", ctx.routerLink);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.brandImg);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.brandImg);
    } }, directives: [ɵngcc4.RouterLinkWithHref, ɵngcc1.NgIf, HtmlAttributesDirective, ɵngcc1.NgClass], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarBrandComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-brand',
                template: "<a [routerLink]=\"routerLink\">\r\n  <ng-template [ngIf]=\"brandImg\">\r\n<!--    <img *ngIf=\"brand\"-->\r\n<!--         [cHtmlAttr]=\"brand\"-->\r\n<!--         [ngClass]=\"'c-sidebar-brand'\">-->\r\n    <img *ngIf=\"brandFull\"\r\n         [cHtmlAttr]=\"brandFull\"\r\n         [ngClass]=\"'c-sidebar-brand-full'\">\r\n    <img *ngIf=\"brandMinimized\"\r\n         [cHtmlAttr]=\"brandMinimized\"\r\n         [ngClass]=\"'c-sidebar-brand-minimized'\">\r\n  </ng-template>\r\n  <ng-template [ngIf]=\"!brandImg\">\r\n    <div class=\"c-sidebar-brand-full\" [innerHTML]=\"brandText.text\"></div>\r\n    <div class=\"c-sidebar-brand-minimized\" [innerHTML]=\"brandText.icon\"></div>\r\n  </ng-template>\r\n</a>\r\n"
            }]
    }], function () { return []; }, { brandText: [{
            type: i0.Input
        }], routerLink: [{
            type: i0.Input
        }], _sidebarBrand: [{
            type: i0.HostBinding,
            args: ['class.c-sidebar-brand']
        }], brand: [{
            type: i0.Input
        }], brandFull: [{
            type: i0.Input
        }], brandMinimized: [{
            type: i0.Input
        }] }); })();
        return SidebarBrandComponent;
    }());
    SidebarBrandComponent.ctorParameters = function () { return []; };
    SidebarBrandComponent.propDecorators = {
        brand: [{ type: i0.Input }],
        brandFull: [{ type: i0.Input }],
        brandMinimized: [{ type: i0.Input }],
        brandText: [{ type: i0.Input }],
        routerLink: [{ type: i0.Input }],
        _sidebarBrand: [{ type: i0.HostBinding, args: ['class.c-sidebar-brand',] }]
    };

    var SidebarFooterComponent = /** @class */ (function () {
        function SidebarFooterComponent(renderer, hostElement) {
            this.renderer = renderer;
            this.hostElement = hostElement;
            renderer.addClass(hostElement.nativeElement, 'c-sidebar-footer');
        }
        SidebarFooterComponent.prototype.ngOnInit = function () { };
SidebarFooterComponent.ɵfac = function SidebarFooterComponent_Factory(t) { return new (t || SidebarFooterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SidebarFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarFooterComponent, selectors: [["c-sidebar-footer"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function SidebarFooterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarFooterComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-footer',
                template: "<ng-content></ng-content>"
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();
        return SidebarFooterComponent;
    }());
    SidebarFooterComponent.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef }
    ]; };

    var SidebarFormComponent = /** @class */ (function () {
        function SidebarFormComponent(renderer, hostElement) {
            this.renderer = renderer;
            this.hostElement = hostElement;
            renderer.addClass(hostElement.nativeElement, 'c-sidebar-form');
        }
        SidebarFormComponent.prototype.ngOnInit = function () { };
SidebarFormComponent.ɵfac = function SidebarFormComponent_Factory(t) { return new (t || SidebarFormComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SidebarFormComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarFormComponent, selectors: [["c-sidebar-form"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function SidebarFormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarFormComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-form',
                template: "<ng-content></ng-content>"
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();
        return SidebarFormComponent;
    }());
    SidebarFormComponent.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef }
    ]; };

    var SidebarHeaderComponent = /** @class */ (function () {
        function SidebarHeaderComponent(renderer, hostElement) {
            this.renderer = renderer;
            this.hostElement = hostElement;
            renderer.addClass(hostElement.nativeElement, 'c-sidebar-header');
        }
        SidebarHeaderComponent.prototype.ngOnInit = function () { };
SidebarHeaderComponent.ɵfac = function SidebarHeaderComponent_Factory(t) { return new (t || SidebarHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SidebarHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarHeaderComponent, selectors: [["c-sidebar-header"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function SidebarHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarHeaderComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-header',
                template: "<ng-content></ng-content>"
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();
        return SidebarHeaderComponent;
    }());
    SidebarHeaderComponent.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef }
    ]; };

    var SidebarMinimizerComponent = /** @class */ (function () {
        function SidebarMinimizerComponent() {
            this.role = 'button';
            this._sidebarMinimizerClass = true;
        }
SidebarMinimizerComponent.ɵfac = function SidebarMinimizerComponent_Factory(t) { return new (t || SidebarMinimizerComponent)(); };
SidebarMinimizerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarMinimizerComponent, selectors: [["c-sidebar-minimizer"]], hostVars: 3, hostBindings: function SidebarMinimizerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role);
        ɵngcc0.ɵɵclassProp("c-sidebar-minimizer", ctx._sidebarMinimizerClass);
    } }, decls: 0, vars: 0, template: function SidebarMinimizerComponent_Template(rf, ctx) { }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarMinimizerComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-minimizer',
                template: ""
            }]
    }], function () { return []; }, { role: [{
            type: i0.HostBinding,
            args: ['attr.role']
        }], _sidebarMinimizerClass: [{
            type: i0.HostBinding,
            args: ['class.c-sidebar-minimizer']
        }] }); })();
        return SidebarMinimizerComponent;
    }());
    SidebarMinimizerComponent.propDecorators = {
        role: [{ type: i0.HostBinding, args: ['attr.role',] }],
        _sidebarMinimizerClass: [{ type: i0.HostBinding, args: ['class.c-sidebar-minimizer',] }]
    };

    var SidebarMinimizeDirective = /** @class */ (function () {
        function SidebarMinimizeDirective(sidebarService) {
            this.sidebarService = sidebarService;
        }
        SidebarMinimizeDirective.prototype.toggleMinimize = function ($event) {
            $event.preventDefault();
            this.sidebarService.toggle({ minimize: 'toggle', id: this.id });
        };
SidebarMinimizeDirective.ɵfac = function SidebarMinimizeDirective_Factory(t) { return new (t || SidebarMinimizeDirective)(ɵngcc0.ɵɵdirectiveInject(SidebarService)); };
SidebarMinimizeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SidebarMinimizeDirective, selectors: [["", "cSidebarMinimize", ""]], hostBindings: function SidebarMinimizeDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function SidebarMinimizeDirective_click_HostBindingHandler($event) { return ctx.toggleMinimize($event); });
    } }, inputs: { id: ["cSidebarMinimize", "id"] }, exportAs: ["cSidebarMinimize"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarMinimizeDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cSidebarMinimize]',
                exportAs: 'cSidebarMinimize'
            }]
    }], function () { return [{ type: SidebarService }]; }, { toggleMinimize: [{
            type: i0.HostListener,
            args: ['click', ['$event']]
        }], id: [{
            type: i0.Input,
            args: ['cSidebarMinimize']
        }] }); })();
        return SidebarMinimizeDirective;
    }());
    SidebarMinimizeDirective.ctorParameters = function () { return [
        { type: SidebarService }
    ]; };
    SidebarMinimizeDirective.propDecorators = {
        id: [{ type: i0.Input, args: ['cSidebarMinimize',] }],
        toggleMinimize: [{ type: i0.HostListener, args: ['click', ['$event'],] }]
    };

    var SidebarToggleDirective = /** @class */ (function () {
        function SidebarToggleDirective(sidebarService) {
            this.sidebarService = sidebarService;
        }
        SidebarToggleDirective.prototype.toggleOpen = function ($event) {
            $event.preventDefault();
            this.sidebarService.toggle({ open: 'toggle', id: this.id });
        };
SidebarToggleDirective.ɵfac = function SidebarToggleDirective_Factory(t) { return new (t || SidebarToggleDirective)(ɵngcc0.ɵɵdirectiveInject(SidebarService)); };
SidebarToggleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SidebarToggleDirective, selectors: [["", "cSidebarToggle", ""]], hostBindings: function SidebarToggleDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function SidebarToggleDirective_click_HostBindingHandler($event) { return ctx.toggleOpen($event); });
    } }, inputs: { id: ["cSidebarToggle", "id"] }, exportAs: ["cSidebarToggle"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarToggleDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cSidebarToggle]',
                exportAs: 'cSidebarToggle'
            }]
    }], function () { return [{ type: SidebarService }]; }, { toggleOpen: [{
            type: i0.HostListener,
            args: ['click', ['$event']]
        }], id: [{
            type: i0.Input,
            args: ['cSidebarToggle']
        }] }); })();
        return SidebarToggleDirective;
    }());
    SidebarToggleDirective.ctorParameters = function () { return [
        { type: SidebarService }
    ]; };
    SidebarToggleDirective.propDecorators = {
        id: [{ type: i0.Input, args: ['cSidebarToggle',] }],
        toggleOpen: [{ type: i0.HostListener, args: ['click', ['$event'],] }]
    };

    var SidebarComponent = /** @class */ (function () {
        function SidebarComponent(document, renderer, hostElement, breakpointObserver, sidebarService) {
            this.document = document;
            this.renderer = renderer;
            this.hostElement = hostElement;
            this.breakpointObserver = breakpointObserver;
            this.sidebarService = sidebarService;
            this.fixed = true;
            this.unfoldable = false;
            this.overlaid = false;
            this.minimize = false;
            this.breakpoint = 'lg';
            this.mobile = 'lg';
            this.size = '';
            this.hideOnMobileClick = true;
            this.colorScheme = 'dark';
            this.minimized = this.minimize;
        }
        Object.defineProperty(SidebarComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SidebarComponent.prototype, "getDesktopBreakpoint", {
            get: function () {
                return getComputedStyle(this.hostElement.nativeElement).getPropertyValue("--breakpoint-" + this.breakpoint);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SidebarComponent.prototype, "hasBreakpoint", {
            get: function () {
                return !!this.breakpoint;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SidebarComponent.prototype, "getMobileBreakpoint", {
            get: function () {
                return getComputedStyle(this.hostElement.nativeElement).getPropertyValue("--breakpoint-" + this.mobile);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SidebarComponent.prototype, "isOnMobile", {
            get: function () {
                var isMobile = Boolean(this._isOnMobile);
                return isMobile;
            },
            set: function (value) {
                this._isOnMobile = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SidebarComponent.prototype, "isOnDesktop", {
            get: function () {
                return this._isOnDesktop;
            },
            set: function (value) {
                this._isOnDesktop = this.hasBreakpoint ? value : false;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SidebarComponent.prototype, "isOpen", {
            get: function () {
                var opened;
                if (this.isOnDesktop) {
                    opened = this.openDesktop;
                }
                else {
                    opened = (this.openMobile === true);
                }
                return opened;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SidebarComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'c-sidebar': true,
                        'c-sidebar-fixed': this.fixed && !this.overlaid,
                        'c-sidebar-right': this.aside,
                        'c-sidebar-minimized': this.minimize && !this.unfoldable,
                        'c-sidebar-unfoldable': this.minimize && this.unfoldable,
                        'c-sidebar-overlaid': this.overlaid,
                        'c-sidebar-show': this.openMobile === true
                    },
                    _a["c-sidebar-" + this.breakpoint + "-show"] = (!!this.breakpoint) && this.openDesktop,
                    _a["c-sidebar-" + this.colorScheme] = !!this.colorScheme,
                    _a["c-sidebar-" + this.size] = !!this.size,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        SidebarComponent.prototype.ngOnInit = function () {
            this.stateToggleSubscribe();
            this.layoutChangeSubscribe();
            this.setInitialState();
        };
        SidebarComponent.prototype.layoutChangeSubscribe = function (subscribe) {
            var _this = this;
            if (subscribe === void 0) { subscribe = true; }
            var onDesktop = "(min-width: " + this.getDesktopBreakpoint + ")";
            var onMobile = this.breakpoint === false ? "(max-width: " + this.getMobileBreakpoint + ")" : "(max-width: " + this.getDesktopBreakpoint + ")";
            if (subscribe) {
                var layoutChanges = this.breakpointObserver.observe([
                    onDesktop,
                    onMobile,
                ]);
                this.layoutChangesSubscription = layoutChanges.subscribe(function (result) {
                    _this.isOnMobile = result.breakpoints[onMobile];
                    _this.isOnDesktop = result.breakpoints[onDesktop];
                    var openMobile = _this.isOnMobile ? false : _this.isOpen ? _this.isOpen : _this.show;
                    _this.sidebarService.toggle({ open: openMobile, sidebar: _this });
                });
            }
            else {
                this.layoutChangesSubscription.unsubscribe();
            }
        };
        SidebarComponent.prototype.ngOnDestroy = function () {
            this.stateToggleSubscribe(false);
            this.layoutChangeSubscribe(false);
        };
        SidebarComponent.prototype.setInitialState = function () {
            this.openMobile = this.isOnDesktop ? false : this.isOnMobile ? false : this.show;
            this.openDesktop = this.hasBreakpoint;
            this.sidebarService.toggle({ minimize: this.minimize, open: this.isOpen, sidebar: this });
        };
        SidebarComponent.prototype.getState = function () {
            return { opened: this.isOpen, minimized: this.minimized, id: this.id };
        };
        SidebarComponent.prototype.open = function (state) {
            var toggle = (state.open === 'toggle');
            if (this.isOnDesktop) {
                this.openDesktop = toggle ? !this.openDesktop : state.open;
                this.openMobile = false;
            }
            else {
                this.openMobile = toggle ? !this.openMobile : state.open;
                if (this.openMobile && this.isOnMobile) {
                    this.setBackdrop();
                }
                else {
                    this.clearBackdrop();
                }
            }
        };
        SidebarComponent.prototype.stateToggleSubscribe = function (subscribe) {
            var _this = this;
            if (subscribe === void 0) { subscribe = true; }
            if (subscribe) {
                this.stateToggleSubscription = this.sidebarService.sidebarState$.subscribe(function (state) {
                    if (_this === state.sidebar || _this.id === state.id) {
                        if ('minimize' in state) {
                            _this.minimizeSidebar(state);
                        }
                        if ('open' in state) {
                            _this.open(state);
                        }
                    }
                });
            }
            else {
                this.stateToggleSubscription.unsubscribe();
            }
        };
        SidebarComponent.prototype.hideMobile = function (e) {
            if (this.isOpen) {
                if (!e.target.closest('[cSidebarNavDropdownToggle]')) {
                    this.sidebarService.toggle({ open: false, sidebar: this });
                }
            }
        };
        SidebarComponent.prototype.setBackdrop = function () {
            var _this = this;
            var backdrop = this.document.getElementsByClassName('c-sidebar-backdrop');
            if (backdrop.length === 0) {
                this.backdrop = this.renderer.createElement('div');
                this.renderer.addClass(this.backdrop, 'c-sidebar-backdrop');
                this.renderer.appendChild(this.document.body, this.backdrop);
                this.renderer.listen(this.backdrop, 'click', function (e) {
                    _this.hideMobile(e);
                });
            }
            if (this.backdrop && this.isOnMobile && this.isOpen) {
                this.renderer.addClass(this.backdrop, 'c-show');
                this.renderer.removeClass(this.backdrop, 'd-none');
            }
            else {
                this.renderer.addClass(this.backdrop, 'd-none');
                this.renderer.removeClass(this.backdrop, 'c-show');
            }
        };
        SidebarComponent.prototype.clearBackdrop = function () {
            if (this.backdrop) {
                this.renderer.listen(this.backdrop, 'click', function (e) { });
                this.renderer.removeChild(this.document.body, this.backdrop);
            }
        };
        SidebarComponent.prototype.minimizeSidebar = function (state) {
            var toggle = (state.minimize === 'toggle');
            this.minimize = toggle ? !this.minimize : !!state.minimize;
        };
        SidebarComponent.prototype.ngOnChanges = function (changes) {
            if (changes.breakpoint) {
                var _a = Object.assign({}, changes.breakpoint), previousValue = _a.previousValue, currentValue = _a.currentValue;
                if (typeof currentValue === 'string') {
                    this.renderer.addClass(this.hostElement.nativeElement, "c-sidebar-" + currentValue + "-show");
                }
                this.renderer.removeClass(this.hostElement.nativeElement, "c-sidebar-" + previousValue + "-show");
            }
            if (changes.size) {
                var _b = Object.assign({}, changes.size), previousValue = _b.previousValue, currentValue = _b.currentValue;
                if (typeof currentValue === 'string') {
                    this.renderer.addClass(this.hostElement.nativeElement, "c-sidebar-" + currentValue);
                }
                this.renderer.removeClass(this.hostElement.nativeElement, "c-sidebar-" + previousValue);
            }
            if (changes.colorScheme) {
                var _c = Object.assign({}, changes.colorScheme), previousValue = _c.previousValue, currentValue = _c.currentValue;
                if (typeof currentValue === 'string') {
                    this.renderer.addClass(this.hostElement.nativeElement, "c-sidebar-" + currentValue);
                }
                this.renderer.removeClass(this.hostElement.nativeElement, "c-sidebar-" + previousValue);
            }
        };
SidebarComponent.ɵfac = function SidebarComponent_Factory(t) { return new (t || SidebarComponent)(ɵngcc0.ɵɵdirectiveInject(i1.DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.BreakpointObserver), ɵngcc0.ɵɵdirectiveInject(SidebarService)); };
SidebarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarComponent, selectors: [["c-sidebar"]], hostVars: 2, hostBindings: function SidebarComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { fixed: "fixed", unfoldable: "unfoldable", overlaid: "overlaid", minimize: "minimize", breakpoint: "breakpoint", mobile: "mobile", size: "size", hideOnMobileClick: "hideOnMobileClick", colorScheme: "colorScheme", show: "show", aside: "aside", id: "id" }, exportAs: ["cSidebar"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function SidebarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar',
                exportAs: 'cSidebar',
                template: "<ng-content></ng-content>"
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: i0.Inject,
                args: [i1.DOCUMENT]
            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc7.BreakpointObserver }, { type: SidebarService }]; }, { fixed: [{
            type: i0.Input
        }], unfoldable: [{
            type: i0.Input
        }], overlaid: [{
            type: i0.Input
        }], minimize: [{
            type: i0.Input
        }], breakpoint: [{
            type: i0.Input
        }], mobile: [{
            type: i0.Input
        }], size: [{
            type: i0.Input
        }], hideOnMobileClick: [{
            type: i0.Input
        }], colorScheme: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], show: [{
            type: i0.Input
        }], aside: [{
            type: i0.Input
        }], id: [{
            type: i0.Input
        }] }); })();
        return SidebarComponent;
    }());
    SidebarComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Inject, args: [i1.DOCUMENT,] }] },
        { type: i0.Renderer2 },
        { type: i0.ElementRef },
        { type: layout.BreakpointObserver },
        { type: SidebarService }
    ]; };
    SidebarComponent.propDecorators = {
        fixed: [{ type: i0.Input }],
        unfoldable: [{ type: i0.Input }],
        overlaid: [{ type: i0.Input }],
        minimize: [{ type: i0.Input }],
        breakpoint: [{ type: i0.Input }],
        mobile: [{ type: i0.Input }],
        show: [{ type: i0.Input }],
        size: [{ type: i0.Input }],
        aside: [{ type: i0.Input }],
        hideOnMobileClick: [{ type: i0.Input }],
        colorScheme: [{ type: i0.Input }],
        id: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var SidebarNavService = /** @class */ (function () {
        function SidebarNavService() {
        }
SidebarNavService.ɵfac = function SidebarNavService_Factory(t) { return new (t || SidebarNavService)(); };
SidebarNavService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SidebarNavService, factory: function (t) { return SidebarNavService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavService, [{
        type: i0.Injectable
    }], function () { return []; }, null); })();
        return SidebarNavService;
    }());
    var SidebarNavHelper = /** @class */ (function () {
        function SidebarNavHelper() {
            this.hasBadge = function (item) { return Boolean(item.badge); };
            this.hasIcon = function (item) { return Boolean(item.icon) || item.icon === ''; };
        }
        SidebarNavHelper.prototype.itemType = function (item) {
            if (item.divider) {
                return 'divider';
            }
            else if (item.title) {
                return 'title';
            }
            else if (item.children && item.children.length > 0) {
                return 'dropdown';
            }
            else if (item.label) {
                return 'label';
            }
            else if (!Object.keys(item).length) {
                return 'empty';
            }
            else {
                return 'link';
            }
        };
        SidebarNavHelper.prototype.isActive = function (router, item) {
            return router.isActive(item.url, false);
        };
        SidebarNavHelper.prototype.getIconClass = function (item) {
            var classes = {
                'c-sidebar-nav-icon': true
            };
            var icon = item.icon;
            classes[icon] = this.hasIcon(item);
            return classes;
        };
SidebarNavHelper.ɵfac = function SidebarNavHelper_Factory(t) { return new (t || SidebarNavHelper)(); };
SidebarNavHelper.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SidebarNavHelper, factory: function (t) { return SidebarNavHelper.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavHelper, [{
        type: i0.Injectable
    }], function () { return []; }, null); })();
        return SidebarNavHelper;
    }());

    var SidebarNavComponent = /** @class */ (function () {
        function SidebarNavComponent(sidebar, helper, router, renderer, hostElement, sidebarService) {
            this.sidebar = sidebar;
            this.helper = helper;
            this.router = router;
            this.renderer = renderer;
            this.hostElement = hostElement;
            this.sidebarService = sidebarService;
            this.navItems = [];
            this.dropdownMode = 'closeInactive';
            this.role = 'nav';
            this.navItemsArray = [];
        }
        Object.defineProperty(SidebarNavComponent.prototype, "sidebarNavClass", {
            get: function () {
                return !this.dropdownItems;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SidebarNavComponent.prototype, "sidebarNavDropdownItemsClass", {
            get: function () {
                return this.dropdownItems;
            },
            enumerable: false,
            configurable: true
        });
        SidebarNavComponent.prototype.ngOnChanges = function (changes) {
            this.navItemsArray = Array.isArray(this.navItems) ? this.navItems.slice() : [];
        };
        SidebarNavComponent.prototype.hideMobile = function () {
            if (this.sidebar && this.sidebar.hideOnMobileClick && this.sidebar.isOnMobile) {
                this.sidebarService.toggle({ open: false, sidebar: this.sidebar });
            }
        };
SidebarNavComponent.ɵfac = function SidebarNavComponent_Factory(t) { return new (t || SidebarNavComponent)(ɵngcc0.ɵɵdirectiveInject(SidebarComponent, 8), ɵngcc0.ɵɵdirectiveInject(SidebarNavHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(SidebarService)); };
SidebarNavComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarNavComponent, selectors: [["c-sidebar-nav"]], hostVars: 5, hostBindings: function SidebarNavComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role);
        ɵngcc0.ɵɵclassProp("c-sidebar-nav", ctx.sidebarNavClass)("c-sidebar-nav-dropdown-items", ctx.sidebarNavDropdownItemsClass);
    } }, inputs: { navItems: "navItems", dropdownMode: "dropdownMode", dropdownItems: "dropdownItems" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[4, "ngFor", "ngForOf"], [3, "ngSwitch"], [3, "item", "ngClass", 4, "ngSwitchCase"], [3, "item", "ngClass", "cHtmlAttr", 4, "ngSwitchCase"], [4, "ngSwitchCase"], [3, "item", "ngClass", "linkClick", 4, "ngSwitchDefault"], [3, "item", "ngClass"], [3, "item", "ngClass", "cHtmlAttr"], [3, "item", "ngClass", "linkClick"]], template: function SidebarNavComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SidebarNavComponent_ng_container_0_Template, 8, 6, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.navItemsArray);
    } }, directives: function () { return [ɵngcc1.NgForOf, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, SidebarNavDropdownComponent, ɵngcc1.NgClass, SidebarNavDividerComponent, HtmlAttributesDirective, SidebarNavTitleComponent, SidebarNavLabelComponent, SidebarNavLinkComponent]; }, pipes: function () { return [SidebarNavItemClassPipe]; }, styles: ["[_nghost-%COMP%] {flex: 1;}", ".c-sidebar-minimized   [_nghost-%COMP%] {overflow: visible !important;}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-nav',
                template: "<!--<c-sidebar-nav-items-->\r\n<!--  class=\"c-sidebar-nav\"-->\r\n<!--  [items]=\"navItemsArray\">-->\r\n<!--</c-sidebar-nav-items>-->\r\n<ng-container *ngFor=\"let item of navItemsArray\">\r\n  <ng-container [ngSwitch]=\"helper.itemType(item)\">\r\n    <c-sidebar-nav-dropdown\r\n      *ngSwitchCase=\"'dropdown'\"\r\n      [item]=\"item\"\r\n      [ngClass]=\"item | cSidebarNavItemClass\">\r\n    </c-sidebar-nav-dropdown>\r\n<!--\r\n    <c-sidebar-nav-dropdown\r\n      *ngSwitchCase=\"'dropdown'\"\r\n      [item]=\"item\"\r\n      [class.c-show]=\"helper.isActive(router, item)\"\r\n      [ngClass]=\"item | cSidebarNavItemClass\"\r\n      cSidebarNavDropdown\r\n      [dropdownMode]=\"dropdownMode\"\r\n      [routerLinkActive]=\"'c-show'\">\r\n    </c-sidebar-nav-dropdown>\r\n-->\r\n    <c-sidebar-nav-divider\r\n      *ngSwitchCase=\"'divider'\"\r\n      [item]=\"item\"\r\n      [ngClass]=\"item | cSidebarNavItemClass\"\r\n      [cHtmlAttr]=\"item.attributes\">\r\n    </c-sidebar-nav-divider>\r\n    <c-sidebar-nav-title\r\n      *ngSwitchCase=\"'title'\"\r\n      [item]=\"item\"\r\n      [ngClass]=\"item | cSidebarNavItemClass\"\r\n      [cHtmlAttr]=\"item.attributes\">\r\n    </c-sidebar-nav-title>\r\n    <c-sidebar-nav-label\r\n      *ngSwitchCase=\"'label'\"\r\n      [item]=\"item\"\r\n      [ngClass]=\"item | cSidebarNavItemClass\">\r\n    </c-sidebar-nav-label>\r\n    <ng-container\r\n      *ngSwitchCase=\"'empty'\">\r\n    </ng-container>\r\n    <c-sidebar-nav-link\r\n      *ngSwitchDefault\r\n      [item]=\"item\"\r\n      [ngClass]=\"item | cSidebarNavItemClass\"\r\n      (linkClick)=\"hideMobile()\"\r\n    >\r\n    </c-sidebar-nav-link>\r\n  </ng-container>\r\n</ng-container>\r\n",
                styles: [':host {flex: 1;}',
                    '.c-sidebar-minimized :host {overflow: visible !important;}']
            }]
    }], function () { return [{ type: SidebarComponent, decorators: [{
                type: i0.Optional
            }] }, { type: SidebarNavHelper }, { type: ɵngcc4.Router }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: SidebarService }]; }, { navItems: [{
            type: i0.Input
        }], dropdownMode: [{
            type: i0.Input
        }], role: [{
            type: i0.HostBinding,
            args: ['attr.role']
        }], sidebarNavClass: [{
            type: i0.HostBinding,
            args: ['class.c-sidebar-nav']
        }], sidebarNavDropdownItemsClass: [{
            type: i0.HostBinding,
            args: ['class.c-sidebar-nav-dropdown-items']
        }], dropdownItems: [{
            type: i0.Input
        }] }); })();
        return SidebarNavComponent;
    }());
    SidebarNavComponent.ctorParameters = function () { return [
        { type: SidebarComponent, decorators: [{ type: i0.Optional }] },
        { type: SidebarNavHelper },
        { type: i1$1.Router },
        { type: i0.Renderer2 },
        { type: i0.ElementRef },
        { type: SidebarService }
    ]; };
    SidebarNavComponent.propDecorators = {
        navItems: [{ type: i0.Input }],
        dropdownMode: [{ type: i0.Input }],
        dropdownItems: [{ type: i0.Input }],
        sidebarNavClass: [{ type: i0.HostBinding, args: ['class.c-sidebar-nav',] }],
        sidebarNavDropdownItemsClass: [{ type: i0.HostBinding, args: ['class.c-sidebar-nav-dropdown-items',] }],
        role: [{ type: i0.HostBinding, args: ['attr.role',] }]
    };

    var SidebarNavDividerComponent = /** @class */ (function () {
        function SidebarNavDividerComponent() {
        }
        SidebarNavDividerComponent.prototype.ngOnInit = function () { };
SidebarNavDividerComponent.ɵfac = function SidebarNavDividerComponent_Factory(t) { return new (t || SidebarNavDividerComponent)(); };
SidebarNavDividerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarNavDividerComponent, selectors: [["c-sidebar-nav-divider"]], inputs: { item: "item" }, decls: 0, vars: 0, template: function SidebarNavDividerComponent_Template(rf, ctx) { }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavDividerComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-nav-divider',
                template: ""
            }]
    }], function () { return []; }, { item: [{
            type: i0.Input
        }] }); })();
        return SidebarNavDividerComponent;
    }());
    SidebarNavDividerComponent.ctorParameters = function () { return []; };
    SidebarNavDividerComponent.propDecorators = {
        item: [{ type: i0.Input }]
    };

    var SidebarNavDropdownComponent = /** @class */ (function () {
        function SidebarNavDropdownComponent(router, helper) {
            this.router = router;
            this.helper = helper;
            this.dropdownMode = 'closeInactive';
            this.navItems = [];
            this.navigationEndObservable = router.events.pipe(operators.filter(function (event) { return event instanceof i1$1.NavigationEnd; }));
        }
        Object.defineProperty(SidebarNavDropdownComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        SidebarNavDropdownComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.navItems = __spread(this.item.children);
            this.navSubscription = this.navigationEndObservable.subscribe(function (event) {
                var itemArray = _this.item.url.split('/');
                var urlArray = event.url.split('/');
                var samePath = itemArray.every(function (value, index) { return value === urlArray[index]; });
                _this.openDropdown(samePath);
            });
        };
        SidebarNavDropdownComponent.prototype.openDropdown = function (open) {
            this.open = open;
        };
        SidebarNavDropdownComponent.prototype.toggleDropdown = function () {
            this.open = !this.open;
        };
        SidebarNavDropdownComponent.prototype.ngOnDestroy = function () {
            this.navSubscription.unsubscribe();
        };
        Object.defineProperty(SidebarNavDropdownComponent.prototype, "hostClasses", {
            get: function () {
                var classes = classNames__default['default'](this.ngClass, this.class, {
                    'c-sidebar-nav-dropdown': true,
                    'c-show': this.open,
                });
                return classes;
            },
            enumerable: false,
            configurable: true
        });
SidebarNavDropdownComponent.ɵfac = function SidebarNavDropdownComponent_Factory(t) { return new (t || SidebarNavDropdownComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Router), ɵngcc0.ɵɵdirectiveInject(SidebarNavHelper)); };
SidebarNavDropdownComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarNavDropdownComponent, selectors: [["c-sidebar-nav-dropdown"]], hostVars: 2, hostBindings: function SidebarNavDropdownComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { dropdownMode: "dropdownMode", item: "item", show: "show", class: "class", ngClass: "ngClass" }, features: [ɵngcc0.ɵɵProvidersFeature([SidebarNavHelper])], decls: 6, vars: 6, consts: [["cSidebarNavDropdownToggle", "", 1, "c-sidebar-nav-dropdown-toggle", 3, "cHtmlAttr"], [3, "ngClass", 4, "ngIf"], [3, "dropdownItems", "navItems"], [3, "ngClass"]], template: function SidebarNavDropdownComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "a", 0);
        ɵngcc0.ɵɵtemplate(1, SidebarNavDropdownComponent_i_1_Template, 2, 3, "i", 1);
        ɵngcc0.ɵɵelementContainerStart(2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵtemplate(4, SidebarNavDropdownComponent_span_4_Template, 3, 4, "span", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(5, "c-sidebar-nav", 2);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("cHtmlAttr", ctx.item.attributes);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.helper.hasIcon(ctx.item));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.item.name);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.helper.hasBadge(ctx.item));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("dropdownItems", true)("navItems", ctx.navItems);
    } }, directives: function () { return [SidebarNavDropdownToggleDirective, HtmlAttributesDirective, ɵngcc1.NgIf, SidebarNavComponent, ɵngcc1.NgClass]; }, pipes: function () { return [SidebarNavIconPipe, SidebarNavBadgePipe]; }, styles: [".c-sidebar-nav-dropdown-toggle[_ngcontent-%COMP%]{cursor:pointer}.c-sidebar-nav-dropdown-items[_ngcontent-%COMP%]{display:block}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavDropdownComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-nav-dropdown',
                template: "\n    <a class=\"c-sidebar-nav-dropdown-toggle\"\n       cSidebarNavDropdownToggle\n       [cHtmlAttr]=\"item.attributes\">\n      <i *ngIf=\"helper.hasIcon(item)\" [ngClass]=\"item | cSidebarNavIcon\"></i>\n      <ng-container>{{ item.name }}</ng-container>\n      <span *ngIf=\"helper.hasBadge(item)\" [ngClass]=\"item | cSidebarNavBadge\">{{ item.badge.text }}</span>\n    </a>\n    <c-sidebar-nav\n      [dropdownItems]=\"true\"\n      [navItems]=\"navItems\">\n    </c-sidebar-nav>\n  ",
                providers: [SidebarNavHelper],
                styles: [".c-sidebar-nav-dropdown-toggle{cursor:pointer}.c-sidebar-nav-dropdown-items{display:block}"]
            }]
    }], function () { return [{ type: ɵngcc4.Router }, { type: SidebarNavHelper }]; }, { dropdownMode: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], item: [{
            type: i0.Input
        }], show: [{
            type: i0.Input
        }], class: [{
            type: i0.Input
        }], ngClass: [{
            type: i0.Input
        }] }); })();
        return SidebarNavDropdownComponent;
    }());
    SidebarNavDropdownComponent.ctorParameters = function () { return [
        { type: i1$1.Router },
        { type: SidebarNavHelper }
    ]; };
    SidebarNavDropdownComponent.propDecorators = {
        item: [{ type: i0.Input }],
        dropdownMode: [{ type: i0.Input }],
        show: [{ type: i0.Input }],
        class: [{ type: i0.Input }],
        ngClass: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var SidebarNavItemsComponent = /** @class */ (function () {
        function SidebarNavItemsComponent(router, helper) {
            this.router = router;
            this.helper = helper;
        }
        Object.defineProperty(SidebarNavItemsComponent.prototype, "items", {
            get: function () {
                return this._items;
            },
            set: function (items) {
                this._items = __spread(items);
            },
            enumerable: false,
            configurable: true
        });
SidebarNavItemsComponent.ɵfac = function SidebarNavItemsComponent_Factory(t) { return new (t || SidebarNavItemsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Router), ɵngcc0.ɵɵdirectiveInject(SidebarNavHelper)); };
SidebarNavItemsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarNavItemsComponent, selectors: [["c-sidebar-nav-items"]], inputs: { items: "items" }, decls: 1, vars: 1, consts: [[4, "ngFor", "ngForOf"], [3, "ngSwitch"], ["cSidebarNavDropdown", "", "routerLinkActive", "c-show", 3, "item", "c-show", "ngClass", 4, "ngSwitchCase"], [3, "item", "ngClass", "cHtmlAttr", 4, "ngSwitchCase"], [3, "item", "ngClass", 4, "ngSwitchCase"], [4, "ngSwitchCase"], [3, "item", "ngClass", 4, "ngSwitchDefault"], ["cSidebarNavDropdown", "", "routerLinkActive", "c-show", 3, "item", "ngClass"], [3, "item", "ngClass", "cHtmlAttr"], [3, "item", "ngClass"]], template: function SidebarNavItemsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SidebarNavItemsComponent_ng_container_0_Template, 8, 6, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.items);
    } }, directives: function () { return [ɵngcc1.NgForOf, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, SidebarNavDropdownComponent, ɵngcc4.RouterLinkActive, ɵngcc1.NgClass, SidebarNavDividerComponent, HtmlAttributesDirective, SidebarNavTitleComponent, SidebarNavLabelComponent, SidebarNavLinkComponent]; }, pipes: function () { return [SidebarNavItemClassPipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavItemsComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-nav-items',
                template: "\n    <ng-container *ngFor=\"let item of items\">\n      <ng-container [ngSwitch]=\"helper.itemType(item)\">\n        <c-sidebar-nav-dropdown\n          *ngSwitchCase=\"'dropdown'\"\n          [item]=\"item\"\n          [class.c-show]=\"helper.isActive(router, item)\"\n          [ngClass]=\"item | cSidebarNavItemClass\"\n          cSidebarNavDropdown\n          routerLinkActive=\"c-show\">\n        </c-sidebar-nav-dropdown>\n        <c-sidebar-nav-divider\n          *ngSwitchCase=\"'divider'\"\n          [item]=\"item\"\n          [ngClass]=\"item | cSidebarNavItemClass\"\n          [cHtmlAttr]=\"item.attributes\">\n        </c-sidebar-nav-divider>\n        <c-sidebar-nav-title\n          *ngSwitchCase=\"'title'\"\n          [item]=\"item\"\n          [ngClass]=\"item | cSidebarNavItemClass\"\n          [cHtmlAttr]=\"item.attributes\">\n        </c-sidebar-nav-title>\n        <c-sidebar-nav-label\n          *ngSwitchCase=\"'label'\"\n          [item]=\"item\"\n          [ngClass]=\"item | cSidebarNavItemClass\">\n        </c-sidebar-nav-label>\n        <ng-container\n          *ngSwitchCase=\"'empty'\">\n        </ng-container>\n        <c-sidebar-nav-link\n          *ngSwitchDefault\n          [item]=\"item\"\n          [ngClass]=\"item | cSidebarNavItemClass\"\n        >\n        </c-sidebar-nav-link>\n      </ng-container>\n    </ng-container>\n  "
            }]
    }], function () { return [{ type: ɵngcc4.Router }, { type: SidebarNavHelper }]; }, { items: [{
            type: i0.Input
        }] }); })();
        return SidebarNavItemsComponent;
    }());
    SidebarNavItemsComponent.ctorParameters = function () { return [
        { type: i1$1.Router },
        { type: SidebarNavHelper }
    ]; };
    SidebarNavItemsComponent.propDecorators = {
        items: [{ type: i0.Input }]
    };

    var SidebarNavLinkContentComponent = /** @class */ (function () {
        function SidebarNavLinkContentComponent(helper) {
            this.helper = helper;
        }
SidebarNavLinkContentComponent.ɵfac = function SidebarNavLinkContentComponent_Factory(t) { return new (t || SidebarNavLinkContentComponent)(ɵngcc0.ɵɵdirectiveInject(SidebarNavHelper)); };
SidebarNavLinkContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarNavLinkContentComponent, selectors: [["c-sidebar-nav-link-content"]], inputs: { item: "item" }, features: [ɵngcc0.ɵɵProvidersFeature([SidebarNavHelper])], decls: 1, vars: 1, consts: [[4, "ngIf"]], template: function SidebarNavLinkContentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SidebarNavLinkContentComponent_ng_container_0_Template, 3, 1, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", true);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavLinkContentComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-nav-link-content',
                template: "\n    <ng-container *ngIf=\"true\">\n      <ng-container>{{item.name}}</ng-container>\n    </ng-container>\n  ",
                providers: [SidebarNavHelper]
            }]
    }], function () { return [{ type: SidebarNavHelper }]; }, { item: [{
            type: i0.Input
        }] }); })();
        return SidebarNavLinkContentComponent;
    }());
    SidebarNavLinkContentComponent.ctorParameters = function () { return [
        { type: SidebarNavHelper }
    ]; };
    SidebarNavLinkContentComponent.propDecorators = {
        item: [{ type: i0.Input }]
    };
    var SidebarNavLinkComponent = /** @class */ (function () {
        function SidebarNavLinkComponent(router, renderer, hostElement, sidebarService) {
            this.router = router;
            this.renderer = renderer;
            this.hostElement = hostElement;
            this.sidebarService = sidebarService;
            this.linkClick = new i0.EventEmitter();
            this.navigationEndObservable = router.events.pipe(operators.filter(function (event) {
                return event instanceof i1$1.NavigationEnd;
            }));
        }
        Object.defineProperty(SidebarNavLinkComponent.prototype, "item", {
            get: function () {
                return this._item;
            },
            set: function (item) {
                this._item = JSON.parse(JSON.stringify(item));
            },
            enumerable: false,
            configurable: true
        });
        SidebarNavLinkComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.url = typeof this.item.url === 'string' ? this.item.url : this.router.serializeUrl(this.router.createUrlTree(this.item.url));
            this.linkType = this.getLinkType();
            this.href = this.isDisabled() ? '' : (this.item.href || this.url);
            this.linkActive = this.router.url.split(/[?#(;]/)[0] === this.href.split(/[?#(;]/)[0];
            this.navSubscription = this.navigationEndObservable.subscribe(function (event) {
                var itemUrlArray = _this.href.split(/[?#(;]/)[0].split('/');
                var urlArray = event.urlAfterRedirects.split(/[?#(;]/)[0].split('/');
                _this.linkActive = itemUrlArray.every(function (value, index) { return value === urlArray[index]; });
            });
        };
        SidebarNavLinkComponent.prototype.ngOnDestroy = function () {
            this.navSubscription.unsubscribe();
        };
        SidebarNavLinkComponent.prototype.getLinkType = function () {
            return this.isDisabled() ? 'disabled' : this.isExternalLink() ? 'external' : 'link';
        };
        SidebarNavLinkComponent.prototype.isDisabled = function () {
            return (this.item.attributes && this.item.attributes.disabled) ? true : null;
        };
        SidebarNavLinkComponent.prototype.isExternalLink = function () {
            var linkPath = Array.isArray(this.item.url) ? this.item.url[0] : this.item.url;
            return !!this.item.href || linkPath.substring(0, 4) === 'http';
        };
        SidebarNavLinkComponent.prototype.linkClicked = function () {
            this.linkClick.emit();
        };
SidebarNavLinkComponent.ɵfac = function SidebarNavLinkComponent_Factory(t) { return new (t || SidebarNavLinkComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(SidebarService)); };
SidebarNavLinkComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarNavLinkComponent, selectors: [["c-sidebar-nav-link"]], inputs: { item: "item" }, outputs: { linkClick: "linkClick" }, features: [ɵngcc0.ɵɵProvidersFeature([SidebarNavHelper])], decls: 4, vars: 3, consts: [[3, "ngSwitch"], [3, "ngClass", "cHtmlAttr", 4, "ngSwitchCase"], [3, "ngClass", "href", "cHtmlAttr", "click", 4, "ngSwitchCase"], [3, "ngClass", "cHtmlAttr", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "routerLink", "c-active", "click", 4, "ngSwitchDefault"], [3, "ngClass", "cHtmlAttr"], [3, "ngClass", 4, "ngIf"], [3, "item"], [3, "ngClass"], [3, "ngClass", "href", "cHtmlAttr", "click"], [3, "ngClass", "cHtmlAttr", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "routerLink", "click"]], template: function SidebarNavLinkComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementContainerStart(0, 0);
        ɵngcc0.ɵɵtemplate(1, SidebarNavLinkComponent_a_1_Template, 6, 8, "a", 1);
        ɵngcc0.ɵɵtemplate(2, SidebarNavLinkComponent_a_2_Template, 6, 9, "a", 2);
        ɵngcc0.ɵɵtemplate(3, SidebarNavLinkComponent_a_3_Template, 6, 19, "a", 3);
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngSwitch", ctx.linkType);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "disabled");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "external");
    } }, directives: function () { return [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, ɵngcc1.NgClass, HtmlAttributesDirective, ɵngcc1.NgIf, SidebarNavLinkContentComponent, ɵngcc4.RouterLinkWithHref]; }, pipes: function () { return [SidebarNavLinkPipe, SidebarNavIconPipe, SidebarNavBadgePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavLinkComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-nav-link',
                template: "<ng-container [ngSwitch]=\"linkType\">\r\n  <a *ngSwitchCase=\"'disabled'\"\r\n     [ngClass]=\"item | cSidebarNavLink\"\r\n     [cHtmlAttr]=\"item.attributes\"\r\n  >\r\n    <i *ngIf=\"item?.icon\" [ngClass]=\"item | cSidebarNavIcon\"></i>\r\n    <span *ngIf=\"!item?.icon\" [ngClass]=\"item | cSidebarNavIcon\"></span>\r\n    <c-sidebar-nav-link-content [item]=\"item\"></c-sidebar-nav-link-content>\r\n    <span *ngIf=\"item.badge\" [ngClass]=\"item | cSidebarNavBadge\">{{ item.badge?.text }}</span>\r\n  </a>\r\n  <a *ngSwitchCase=\"'external'\"\r\n     [ngClass]=\"item | cSidebarNavLink\"\r\n     [href]=\"href\"\r\n     [cHtmlAttr]=\"item.attributes\"\r\n     (click)=\"linkClicked()\"\r\n  >\r\n    <i *ngIf=\"item?.icon\" [ngClass]=\"item | cSidebarNavIcon\"></i>\r\n    <span *ngIf=\"!item?.icon\" [ngClass]=\"item | cSidebarNavIcon\"></span>\r\n    <c-sidebar-nav-link-content [item]=\"item\"></c-sidebar-nav-link-content>\r\n    <span *ngIf=\"item.badge\" [ngClass]=\"item | cSidebarNavBadge\">{{ item.badge?.text }}</span>\r\n  </a>\r\n  <a *ngSwitchDefault\r\n     [ngClass]=\"item | cSidebarNavLink\"\r\n     [cHtmlAttr]=\"item.attributes\"\r\n     [target]=\"item.attributes?.target\"\r\n     [queryParams]=\"item.linkProps?.queryParams\"\r\n     [fragment]=\"item.linkProps?.fragment\"\r\n     [queryParamsHandling]=\"item.linkProps?.queryParamsHandling\"\r\n     [preserveFragment]=\"item.linkProps?.preserveFragment\"\r\n     [skipLocationChange]=\"item.linkProps?.skipLocationChange\"\r\n     [replaceUrl]=\"item.linkProps?.replaceUrl\"\r\n     [state]=\"item.linkProps?.state\"\r\n     [routerLink]=\"item.url\"\r\n     [class.c-active]=\"linkActive\"\r\n     (click)=\"linkClicked()\"\r\n  >\r\n    <i *ngIf=\"item?.icon\" [ngClass]=\"item | cSidebarNavIcon\"></i>\r\n    <span *ngIf=\"!item?.icon\" [ngClass]=\"item | cSidebarNavIcon\"></span>\r\n    <c-sidebar-nav-link-content [item]=\"item\"></c-sidebar-nav-link-content>\r\n    <span *ngIf=\"item.badge\" [ngClass]=\"item | cSidebarNavBadge\">{{ item.badge?.text }}</span>\r\n  </a>\r\n</ng-container>\r\n",
                providers: [SidebarNavHelper]
            }]
    }], function () { return [{ type: ɵngcc4.Router }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: SidebarService }]; }, { linkClick: [{
            type: i0.Output
        }], item: [{
            type: i0.Input
        }] }); })();
        return SidebarNavLinkComponent;
    }());
    SidebarNavLinkComponent.ctorParameters = function () { return [
        { type: i1$1.Router },
        { type: i0.Renderer2 },
        { type: i0.ElementRef },
        { type: SidebarService }
    ]; };
    SidebarNavLinkComponent.propDecorators = {
        item: [{ type: i0.Input }],
        linkClick: [{ type: i0.Output }]
    };

    var SidebarNavTitleComponent = /** @class */ (function () {
        function SidebarNavTitleComponent(el, renderer) {
            this.el = el;
            this.renderer = renderer;
        }
        SidebarNavTitleComponent.prototype.ngOnInit = function () {
            var nativeElement = this.el.nativeElement;
            var name = this.renderer.createText(this.item.name);
            if (this.item.class) {
                var classes = this.item.class;
                this.renderer.addClass(nativeElement, classes);
            }
            if (this.item.wrapper) {
                var wrapper = this.renderer.createElement(this.item.wrapper.element);
                this.addAttribs(this.item.wrapper.attributes, wrapper);
                this.renderer.appendChild(wrapper, name);
                this.renderer.appendChild(nativeElement, wrapper);
            }
            else {
                this.renderer.appendChild(nativeElement, name);
            }
        };
        SidebarNavTitleComponent.prototype.addAttribs = function (attribs, element) {
            if (attribs) {
                for (var attr in attribs) {
                    if (attr === 'style' && typeof (attribs[attr]) === 'object') {
                        this.setStyle(attribs[attr], element);
                    }
                    else if (attr === 'class') {
                        this.addClass(attribs[attr], element);
                    }
                    else {
                        this.setAttrib(attr, attribs[attr], element);
                    }
                }
            }
        };
        SidebarNavTitleComponent.prototype.setStyle = function (styles, el) {
            for (var style in styles) {
                if (style) {
                    this.renderer.setStyle(el, style, styles[style]);
                }
            }
        };
        SidebarNavTitleComponent.prototype.addClass = function (classes, el) {
            var _this = this;
            var classArray = (Array.isArray(classes) ? classes : classes.split(' '));
            classArray.filter(function (element) { return element.length > 0; }).forEach(function (element) {
                _this.renderer.addClass(el, element);
            });
        };
        SidebarNavTitleComponent.prototype.setAttrib = function (key, value, el) {
            this.renderer.setAttribute(el, key, value);
        };
SidebarNavTitleComponent.ɵfac = function SidebarNavTitleComponent_Factory(t) { return new (t || SidebarNavTitleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
SidebarNavTitleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarNavTitleComponent, selectors: [["c-sidebar-nav-title"]], inputs: { item: "item" }, decls: 0, vars: 0, template: function SidebarNavTitleComponent_Template(rf, ctx) { }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavTitleComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-nav-title',
                template: ''
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { item: [{
            type: i0.Input
        }] }); })();
        return SidebarNavTitleComponent;
    }());
    SidebarNavTitleComponent.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: i0.Renderer2 }
    ]; };
    SidebarNavTitleComponent.propDecorators = {
        item: [{ type: i0.Input }]
    };

    var SidebarNavLabelComponent = /** @class */ (function () {
        function SidebarNavLabelComponent(helper) {
            this.helper = helper;
            this.classes = {
                'c-nav-label': true,
                'c-active': true
            };
            this.iconClasses = {};
        }
        SidebarNavLabelComponent.prototype.ngOnInit = function () {
            this.iconClasses = this.helper.getIconClass(this.item);
        };
        SidebarNavLabelComponent.prototype.getItemClass = function () {
            var itemClass = this.item.class;
            this.classes[itemClass] = !!itemClass;
            return this.classes;
        };
        SidebarNavLabelComponent.prototype.getLabelIconClass = function () {
            var variant = "text-" + this.item.label.variant;
            this.iconClasses[variant] = !!this.item.label.variant;
            var labelClass = this.item.label.class;
            this.iconClasses[labelClass] = !!labelClass;
            return this.iconClasses;
        };
SidebarNavLabelComponent.ɵfac = function SidebarNavLabelComponent_Factory(t) { return new (t || SidebarNavLabelComponent)(ɵngcc0.ɵɵdirectiveInject(SidebarNavHelper)); };
SidebarNavLabelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarNavLabelComponent, selectors: [["c-sidebar-nav-label"]], inputs: { item: "item" }, decls: 5, vars: 6, consts: [[3, "ngClass", "href", "cHtmlAttr"], [3, "ngClass", 4, "ngIf"], [3, "ngClass"]], template: function SidebarNavLabelComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "a", 0);
        ɵngcc0.ɵɵtemplate(1, SidebarNavLabelComponent_i_1_Template, 1, 1, "i", 1);
        ɵngcc0.ɵɵelementContainerStart(2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵtemplate(4, SidebarNavLabelComponent_span_4_Template, 3, 4, "span", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate("href", ctx.item.url, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getItemClass())("cHtmlAttr", ctx.item.attributes);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.helper.hasIcon(ctx.item));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.item.name);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.helper.hasBadge(ctx.item));
    } }, directives: function () { return [ɵngcc1.NgClass, HtmlAttributesDirective, ɵngcc1.NgIf]; }, pipes: function () { return [SidebarNavBadgePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavLabelComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-sidebar-nav-label',
                template: "<a [ngClass]=\"getItemClass()\"\r\n   href=\"{{item.url}}\"\r\n   [cHtmlAttr]=\"item.attributes\">\r\n  <i *ngIf=\"helper.hasIcon(item)\" [ngClass]=\"getLabelIconClass()\"></i>\r\n  <ng-container>{{ item.name }}</ng-container>\r\n  <span *ngIf=\"helper.hasBadge(item)\" [ngClass]=\"item | cSidebarNavBadge\">{{ item.badge.text }}</span>\r\n</a>\r\n"
            }]
    }], function () { return [{ type: SidebarNavHelper }]; }, { item: [{
            type: i0.Input
        }] }); })();
        return SidebarNavLabelComponent;
    }());
    SidebarNavLabelComponent.ctorParameters = function () { return [
        { type: SidebarNavHelper }
    ]; };
    SidebarNavLabelComponent.propDecorators = {
        item: [{ type: i0.Input }]
    };

    var SidebarNavIconPipe = /** @class */ (function () {
        function SidebarNavIconPipe() {
        }
        SidebarNavIconPipe.prototype.transform = function (item, args) {
            var classes = {
                'c-sidebar-nav-icon': true
            };
            var icon = item.icon;
            classes[icon] = !!item.icon;
            return classes;
        };
SidebarNavIconPipe.ɵfac = function SidebarNavIconPipe_Factory(t) { return new (t || SidebarNavIconPipe)(); };
SidebarNavIconPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "cSidebarNavIcon", type: SidebarNavIconPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavIconPipe, [{
        type: i0.Pipe,
        args: [{
                name: 'cSidebarNavIcon'
            }]
    }], function () { return []; }, null); })();
        return SidebarNavIconPipe;
    }());

    var SidebarNavBadgePipe = /** @class */ (function () {
        function SidebarNavBadgePipe() {
        }
        SidebarNavBadgePipe.prototype.transform = function (item, args) {
            var classes = {
                badge: true
            };
            var variant = "badge-" + item.badge.variant;
            classes[variant] = !!item.badge.variant;
            classes[item.badge.class] = !!item.badge.class;
            return classes;
        };
SidebarNavBadgePipe.ɵfac = function SidebarNavBadgePipe_Factory(t) { return new (t || SidebarNavBadgePipe)(); };
SidebarNavBadgePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "cSidebarNavBadge", type: SidebarNavBadgePipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavBadgePipe, [{
        type: i0.Pipe,
        args: [{
                name: 'cSidebarNavBadge'
            }]
    }], function () { return []; }, null); })();
        return SidebarNavBadgePipe;
    }());

    var SidebarNavItemClassPipe = /** @class */ (function () {
        function SidebarNavItemClassPipe(helper) {
            this.helper = helper;
        }
        SidebarNavItemClassPipe.prototype.transform = function (item, args) {
            var itemType = this.helper.itemType(item);
            var itemClass;
            if (['divider', 'title'].includes(itemType)) {
                itemClass = "c-sidebar-nav-" + itemType;
            }
            else if (itemType === 'dropdown') {
                itemClass = '';
            }
            else {
                itemClass = 'c-sidebar-nav-item';
            }
            return item.class ? itemClass + " " + item.class : itemClass;
        };
SidebarNavItemClassPipe.ɵfac = function SidebarNavItemClassPipe_Factory(t) { return new (t || SidebarNavItemClassPipe)(ɵngcc0.ɵɵdirectiveInject(SidebarNavHelper)); };
SidebarNavItemClassPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "cSidebarNavItemClass", type: SidebarNavItemClassPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavItemClassPipe, [{
        type: i0.Pipe,
        args: [{
                name: 'cSidebarNavItemClass'
            }]
    }], function () { return [{ type: SidebarNavHelper }]; }, null); })();
        return SidebarNavItemClassPipe;
    }());
    SidebarNavItemClassPipe.ctorParameters = function () { return [
        { type: SidebarNavHelper }
    ]; };

    var SidebarNavLinkPipe = /** @class */ (function () {
        function SidebarNavLinkPipe() {
        }
        SidebarNavLinkPipe.prototype.transform = function (item) {
            var _a;
            var disabled = (_a = item === null || item === void 0 ? void 0 : item.attributes) === null || _a === void 0 ? void 0 : _a.disabled;
            var classes = {
                'c-sidebar-nav-link': true,
                disabled: disabled,
                'btn-link': disabled,
            };
            classes["c-sidebar-nav-link-" + item.variant] = !!item.variant;
            return classes;
        };
SidebarNavLinkPipe.ɵfac = function SidebarNavLinkPipe_Factory(t) { return new (t || SidebarNavLinkPipe)(); };
SidebarNavLinkPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "cSidebarNavLink", type: SidebarNavLinkPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavLinkPipe, [{
        type: i0.Pipe,
        args: [{
                name: 'cSidebarNavLink'
            }]
    }], function () { return []; }, null); })();
        return SidebarNavLinkPipe;
    }());

    var SidebarNavDropdownToggleDirective = /** @class */ (function () {
        function SidebarNavDropdownToggleDirective(sidebarNavDropdown) {
            this.sidebarNavDropdown = sidebarNavDropdown;
        }
        SidebarNavDropdownToggleDirective.prototype.toggleOpen = function ($event) {
            $event.preventDefault();
            this.sidebarNavDropdown.toggleDropdown();
        };
SidebarNavDropdownToggleDirective.ɵfac = function SidebarNavDropdownToggleDirective_Factory(t) { return new (t || SidebarNavDropdownToggleDirective)(ɵngcc0.ɵɵdirectiveInject(SidebarNavDropdownComponent)); };
SidebarNavDropdownToggleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SidebarNavDropdownToggleDirective, selectors: [["", "cSidebarNavDropdownToggle", ""]], hostBindings: function SidebarNavDropdownToggleDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function SidebarNavDropdownToggleDirective_click_HostBindingHandler($event) { return ctx.toggleOpen($event); });
    } }, exportAs: ["cSidebarNavDropdownToggle"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavDropdownToggleDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cSidebarNavDropdownToggle]',
                exportAs: 'cSidebarNavDropdownToggle'
            }]
    }], function () { return [{ type: SidebarNavDropdownComponent }]; }, { toggleOpen: [{
            type: i0.HostListener,
            args: ['click', ['$event']]
        }] }); })();
        return SidebarNavDropdownToggleDirective;
    }());
    SidebarNavDropdownToggleDirective.ctorParameters = function () { return [
        { type: SidebarNavDropdownComponent }
    ]; };
    SidebarNavDropdownToggleDirective.propDecorators = {
        toggleOpen: [{ type: i0.HostListener, args: ['click', ['$event'],] }]
    };

    var SidebarModule = /** @class */ (function () {
        function SidebarModule() {
        }
SidebarModule.ɵfac = function SidebarModule_Factory(t) { return new (t || SidebarModule)(); };
SidebarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SidebarModule });
SidebarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [
        OutClickService,
        SidebarService,
        SidebarNavHelper,
    ], imports: [[
            i1.CommonModule,
            i1$1.RouterModule,
            SharedModule
        ], SharedModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SidebarModule, { declarations: [SidebarBrandComponent, SidebarFooterComponent, SidebarFormComponent, SidebarHeaderComponent, SidebarMinimizerComponent, SidebarComponent, SidebarNavItemsComponent, SidebarNavComponent, SidebarNavDividerComponent, SidebarNavDropdownComponent, SidebarNavLinkComponent, SidebarNavLinkContentComponent, SidebarNavTitleComponent, SidebarNavDropdownToggleDirective, SidebarNavLabelComponent, SidebarNavIconPipe, SidebarNavBadgePipe, SidebarNavItemClassPipe, SidebarNavLinkPipe, SidebarBackdropComponent, SidebarToggleDirective, SidebarMinimizeDirective], imports: [ɵngcc1.CommonModule, ɵngcc4.RouterModule, SharedModule], exports: [SidebarBrandComponent, SidebarFooterComponent, SidebarFormComponent, SidebarHeaderComponent, SidebarMinimizerComponent, SidebarComponent, SidebarNavItemsComponent, SidebarNavComponent, SidebarNavDividerComponent, SidebarNavDropdownComponent, SidebarNavLinkComponent, SidebarNavLinkContentComponent, SidebarNavTitleComponent, SidebarToggleDirective, SidebarMinimizeDirective, SharedModule] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    i1.CommonModule,
                    i1$1.RouterModule,
                    SharedModule
                ],
                exports: [
                    SidebarBrandComponent,
                    SidebarFooterComponent,
                    SidebarFormComponent,
                    SidebarHeaderComponent,
                    SidebarMinimizerComponent,
                    SidebarComponent,
                    SidebarNavItemsComponent,
                    SidebarNavComponent,
                    SidebarNavDividerComponent,
                    SidebarNavDropdownComponent,
                    SidebarNavLinkComponent,
                    SidebarNavLinkContentComponent,
                    SidebarNavTitleComponent,
                    SidebarToggleDirective,
                    SidebarMinimizeDirective,
                    SharedModule
                ],
                declarations: [
                    SidebarBrandComponent,
                    SidebarFooterComponent,
                    SidebarFormComponent,
                    SidebarHeaderComponent,
                    SidebarMinimizerComponent,
                    SidebarComponent,
                    SidebarNavItemsComponent,
                    SidebarNavComponent,
                    SidebarNavDividerComponent,
                    SidebarNavDropdownComponent,
                    SidebarNavLinkComponent,
                    SidebarNavLinkContentComponent,
                    SidebarNavTitleComponent,
                    SidebarNavDropdownToggleDirective,
                    SidebarNavLabelComponent,
                    SidebarNavIconPipe,
                    SidebarNavBadgePipe,
                    SidebarNavItemClassPipe,
                    SidebarNavLinkPipe,
                    SidebarBackdropComponent,
                    SidebarToggleDirective,
                    SidebarMinimizeDirective
                ],
                providers: [
                    OutClickService,
                    SidebarService,
                    SidebarNavHelper,
                ]
            }]
    }], function () { return []; }, null); })();
        return SidebarModule;
    }());

    var SpinkitComponent = /** @class */ (function () {
        function SpinkitComponent() {
            this.center = true;
            this.name = 'plane';
        }
        Object.defineProperty(SpinkitComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SpinkitComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {},
                    _a["sk-" + this.name] = true,
                    _a['sk-center'] = this.center,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        SpinkitComponent.prototype.ngOnInit = function () { };
SpinkitComponent.ɵfac = function SpinkitComponent_Factory(t) { return new (t || SpinkitComponent)(); };
SpinkitComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SpinkitComponent, selectors: [["c-spinkit"]], hostVars: 2, hostBindings: function SpinkitComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { center: "center", name: "name" }, decls: 14, vars: 13, consts: [[3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], [1, "sk-chase-dot"], [1, "sk-bounce-dot"], [1, "sk-wave-rect"], [1, "sk-flow-dot"], [1, "sk-swing-dot"], [1, "sk-circle-dot"], [1, "sk-circle-fade-dot"], [1, "sk-grid-cube"], [1, "sk-fold-cube"], [1, "sk-wander-cube"]], template: function SpinkitComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementContainerStart(0, 0);
        ɵngcc0.ɵɵtemplate(1, SpinkitComponent_ng_container_1_Template, 1, 0, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(2, SpinkitComponent_ng_container_2_Template, 7, 0, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(3, SpinkitComponent_ng_container_3_Template, 3, 0, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(4, SpinkitComponent_ng_container_4_Template, 6, 0, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(5, SpinkitComponent_ng_container_5_Template, 1, 0, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(6, SpinkitComponent_ng_container_6_Template, 4, 0, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(7, SpinkitComponent_ng_container_7_Template, 3, 0, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(8, SpinkitComponent_ng_container_8_Template, 13, 0, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(9, SpinkitComponent_ng_container_9_Template, 13, 0, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(10, SpinkitComponent_ng_container_10_Template, 10, 0, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(11, SpinkitComponent_ng_container_11_Template, 5, 0, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(12, SpinkitComponent_ng_container_12_Template, 5, 0, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(13, SpinkitComponent_ng_container_13_Template, 1, 0, "ng-container", 2);
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngSwitch", ctx.name);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "plane");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "chase");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "bounce");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "wave");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "pulse");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "flow");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "swing");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "circle");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "circle-fade");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "grid");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "fold");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "wander");
    } }, directives: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault], styles: ["[_nghost-%COMP%]{display:block}.sk-wave[_nghost-%COMP%]{display:flex}.sk-flow[_nghost-%COMP%]{display:flex;align-items:center}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SpinkitComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-spinkit',
                template: "<ng-container [ngSwitch]=\"name\">\n  <ng-container *ngSwitchCase=\"'plane'\"></ng-container>\n  <ng-container *ngSwitchCase=\"'chase'\">\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'bounce'\">\n    <div class=\"sk-bounce-dot\"></div>\n    <div class=\"sk-bounce-dot\"></div>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'wave'\">\n    <div class=\"sk-wave-rect\"></div>\n    <div class=\"sk-wave-rect\"></div>\n    <div class=\"sk-wave-rect\"></div>\n    <div class=\"sk-wave-rect\"></div>\n    <div class=\"sk-wave-rect\"></div>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'pulse'\"></ng-container>\n  <ng-container *ngSwitchCase=\"'flow'\">\n    <div class=\"sk-flow-dot\"></div>\n    <div class=\"sk-flow-dot\"></div>\n    <div class=\"sk-flow-dot\"></div>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'swing'\">\n    <div class=\"sk-swing-dot\"></div>\n    <div class=\"sk-swing-dot\"></div>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'circle'\">\n    <div class=\"sk-circle-dot\"></div>\n    <div class=\"sk-circle-dot\"></div>\n    <div class=\"sk-circle-dot\"></div>\n    <div class=\"sk-circle-dot\"></div>\n    <div class=\"sk-circle-dot\"></div>\n    <div class=\"sk-circle-dot\"></div>\n    <div class=\"sk-circle-dot\"></div>\n    <div class=\"sk-circle-dot\"></div>\n    <div class=\"sk-circle-dot\"></div>\n    <div class=\"sk-circle-dot\"></div>\n    <div class=\"sk-circle-dot\"></div>\n    <div class=\"sk-circle-dot\"></div>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'circle-fade'\">\n    <div class=\"sk-circle-fade-dot\"></div>\n    <div class=\"sk-circle-fade-dot\"></div>\n    <div class=\"sk-circle-fade-dot\"></div>\n    <div class=\"sk-circle-fade-dot\"></div>\n    <div class=\"sk-circle-fade-dot\"></div>\n    <div class=\"sk-circle-fade-dot\"></div>\n    <div class=\"sk-circle-fade-dot\"></div>\n    <div class=\"sk-circle-fade-dot\"></div>\n    <div class=\"sk-circle-fade-dot\"></div>\n    <div class=\"sk-circle-fade-dot\"></div>\n    <div class=\"sk-circle-fade-dot\"></div>\n    <div class=\"sk-circle-fade-dot\"></div>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'grid'\">\n    <div class=\"sk-grid-cube\"></div>\n    <div class=\"sk-grid-cube\"></div>\n    <div class=\"sk-grid-cube\"></div>\n    <div class=\"sk-grid-cube\"></div>\n    <div class=\"sk-grid-cube\"></div>\n    <div class=\"sk-grid-cube\"></div>\n    <div class=\"sk-grid-cube\"></div>\n    <div class=\"sk-grid-cube\"></div>\n    <div class=\"sk-grid-cube\"></div>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'fold'\">\n    <div class=\"sk-fold-cube\"></div>\n    <div class=\"sk-fold-cube\"></div>\n    <div class=\"sk-fold-cube\"></div>\n    <div class=\"sk-fold-cube\"></div>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'wander'\">\n    <div class=\"sk-wander-cube\"></div>\n    <div class=\"sk-wander-cube\"></div>\n    <div class=\"sk-wander-cube\"></div>\n    <div class=\"sk-wander-cube\"></div>\n  </ng-container>\n  <ng-container *ngSwitchDefault></ng-container>\n</ng-container>\n",
                styles: [":host{display:block}:host.sk-wave{display:flex}:host.sk-flow{display:flex;align-items:center}"]
            }]
    }], function () { return []; }, { center: [{
            type: i0.Input
        }], name: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }] }); })();
        return SpinkitComponent;
    }());
    SpinkitComponent.ctorParameters = function () { return []; };
    SpinkitComponent.propDecorators = {
        center: [{ type: i0.Input }],
        name: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var SpinkitModule = /** @class */ (function () {
        function SpinkitModule() {
        }
SpinkitModule.ɵfac = function SpinkitModule_Factory(t) { return new (t || SpinkitModule)(); };
SpinkitModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SpinkitModule });
SpinkitModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SpinkitModule, { declarations: [SpinkitComponent], imports: [ɵngcc1.CommonModule], exports: [SpinkitComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SpinkitModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [SpinkitComponent],
                exports: [
                    SpinkitComponent
                ],
                imports: [
                    i1.CommonModule
                ]
            }]
    }], function () { return []; }, null); })();
        return SpinkitModule;
    }());

    var SpinnerComponent = /** @class */ (function () {
        function SpinnerComponent() {
            this.color = '';
            this.grow = false;
            this.size = '';
            this.role = 'status';
        }
        Object.defineProperty(SpinnerComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SpinnerComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var shape = this.grow ? 'grow' : 'border';
                var classes = classNames__default['default']((_a = {},
                    _a["spinner-" + shape] = true,
                    _a["text-" + this.color] = !!this.color,
                    _a["spinner-" + shape + "-" + this.size] = !!this.size,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
SpinnerComponent.ɵfac = function SpinnerComponent_Factory(t) { return new (t || SpinnerComponent)(); };
SpinnerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SpinnerComponent, selectors: [["c-spinner"]], hostVars: 3, hostBindings: function SpinnerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { color: "color", grow: "grow", size: "size", role: "role" }, decls: 2, vars: 0, consts: [[1, "sr-only"]], template: function SpinnerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵtext(1, "Loading...");
        ɵngcc0.ɵɵelementEnd();
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SpinnerComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-spinner',
                template: "<!--<div [ngClass]=\"classes\" [attr.role]=\"role\" [ngStyle]=\"styles\">-->\n  <span class=\"sr-only\">Loading...</span>\n<!--</div>-->\n",
                styles: [""]
            }]
    }], function () { return []; }, { color: [{
            type: i0.Input
        }], grow: [{
            type: i0.Input
        }], size: [{
            type: i0.Input
        }], role: [{
            type: i0.Input
        }, {
            type: i0.HostBinding,
            args: ['attr.role']
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }] }); })();
        return SpinnerComponent;
    }());
    SpinnerComponent.propDecorators = {
        color: [{ type: i0.Input }],
        grow: [{ type: i0.Input }],
        size: [{ type: i0.Input }],
        role: [{ type: i0.Input }, { type: i0.HostBinding, args: ['attr.role',] }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var SpinnerModule = /** @class */ (function () {
        function SpinnerModule() {
        }
SpinnerModule.ɵfac = function SpinnerModule_Factory(t) { return new (t || SpinnerModule)(); };
SpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SpinnerModule });
SpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule,
            SharedModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SpinnerModule, { declarations: [SpinnerComponent], imports: [ɵngcc1.CommonModule, SharedModule], exports: [SpinnerComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SpinnerModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    SpinnerComponent
                ],
                exports: [
                    SpinnerComponent
                ],
                imports: [
                    i1.CommonModule,
                    SharedModule
                ]
            }]
    }], function () { return []; }, null); })();
        return SpinnerModule;
    }());

    var SwitchComponent = /** @class */ (function () {
        function SwitchComponent(renderer, hostElement) {
            this.renderer = renderer;
            this.hostElement = hostElement;
            this.variant = '';
            this.labelOn = '';
            this.labelOff = '';
            this.size = '';
            this.shape = '';
            this.tabindex = '0';
            this.type = 'checkbox';
            this.value = 'on';
            this.data = {};
            this._props = {
                autofocus: false,
                checked: false,
                disabled: false,
                required: false,
            };
            this.hostTabIndex = -1;
            this.toggle = new i0.EventEmitter();
            this.classes = {};
            this.host = this.hostElement.nativeElement;
        }
        Object.defineProperty(SwitchComponent.prototype, "label", {
            get: function () {
                return !!this.labelOn || !!this.labelOff;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SwitchComponent.prototype, "autofocus", {
            get: function () {
                return this._props.autofocus;
            },
            set: function (value) {
                this._props.autofocus = typeof value === 'string' || !!value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SwitchComponent.prototype, "checked", {
            get: function () {
                return this._props.checked;
            },
            set: function (value) {
                this._props.checked = typeof value === 'string' || !!value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SwitchComponent.prototype, "disabled", {
            get: function () {
                return this._props.disabled;
            },
            set: function (value) {
                this._props.disabled = typeof value === 'string' || !!value;
                this.tabindex = this._props.disabled ? -1 : this.tabindex;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SwitchComponent.prototype, "required", {
            get: function () {
                return this._props.required;
            },
            set: function (value) {
                this._props.required = typeof value === 'string' || !!value;
            },
            enumerable: false,
            configurable: true
        });
        SwitchComponent.prototype.ngOnInit = function () {
            this.data = {
                'data-checked': this.labelOn,
                'data-unchecked': this.labelOff
            };
            this.setClasses();
        };
        SwitchComponent.prototype.setClasses = function () {
            var variant = this.variant ? "-" + this.variant : '';
            this.classes['c-switch'] = true;
            this.classes['form-check-label'] = true;
            this.classes["c-switch-" + this.size] = !!this.size;
            this.classes["c-switch-" + this.shape] = !!this.shape;
            this.classes["c-switch" + variant + "-" + this.color] = !!this.color;
            this.classes['c-switch-label'] = !!this.label || typeof this.label === 'string';
        };
        SwitchComponent.prototype.ngOnChanges = function (changes) {
            if (changes.color) {
                this.classes["c-switch-" + changes.color.previousValue] = false;
            }
            if (changes.size) {
                this.classes["c-switch-" + changes.size.previousValue] = false;
            }
            if (changes.variant) {
                this.classes["c-switch-variant-" + changes.variant.previousValue + "-alt"] = false;
                this.classes["c-switch-variant-" + changes.variant.previousValue] = false;
            }
            if (changes.shape) {
                this.classes["c-switch-" + changes.shape.previousValue] = false;
            }
            this.setClasses();
        };
        SwitchComponent.prototype.onKeyDown = function (e) {
            if (e.code === 'Space' && e.target === this.host.firstChild) {
                e.stopImmediatePropagation();
                e.stopPropagation();
                e.preventDefault();
            }
        };
        SwitchComponent.prototype.onKeyUp = function (e) {
            if (e.key === 'Enter') {
                this.toggleSwitch();
            }
        };
        SwitchComponent.prototype.onClick = function (e) {
            if (e.target.tagName === 'INPUT') {
                if (e instanceof MouseEvent) {
                    this.toggleSwitch();
                }
            }
        };
        SwitchComponent.prototype.toggleSwitch = function () {
            if (this.disabled) {
                return false;
            }
            this.checked = !this.checked;
            this.toggle.emit(this);
        };
SwitchComponent.ɵfac = function SwitchComponent_Factory(t) { return new (t || SwitchComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SwitchComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SwitchComponent, selectors: [["c-switch"]], hostVars: 1, hostBindings: function SwitchComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keydown", function SwitchComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); })("keyup", function SwitchComponent_keyup_HostBindingHandler($event) { return ctx.onKeyUp($event); })("click", function SwitchComponent_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("tabindex", ctx.hostTabIndex);
    } }, inputs: { variant: "variant", labelOn: "labelOn", labelOff: "labelOff", size: "size", shape: "shape", tabindex: "tabindex", type: "type", value: "value", autofocus: "autofocus", checked: "checked", disabled: "disabled", required: "required", color: "color", name: "name" }, outputs: { toggle: "checked" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 12, consts: [[3, "ngClass", "tabindex"], [1, "c-switch-input", "form-check-input", 3, "tabindex", "type", "autofocus", "checked", "disabled", "required", "name", "value"], [1, "c-switch-slider"]], template: function SwitchComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "label", 0);
        ɵngcc0.ɵɵelement(1, "input", 1);
        ɵngcc0.ɵɵelement(2, "span", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.classes)("tabindex", -1);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("tabindex", ctx.tabindex)("type", ctx.type)("autofocus", ctx.autofocus)("checked", ctx.checked)("disabled", ctx.disabled)("required", ctx.required)("name", ctx.name ? ctx.name : "")("value", ctx.value);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("data-checked", ctx.labelOn)("data-unchecked", ctx.labelOff);
    } }, directives: [ɵngcc1.NgClass], styles: ["[_nghost-%COMP%]{outline:0}[_nghost-%COMP%], [_nghost-%COMP%]   .c-switch[_ngcontent-%COMP%], [_nghost-%COMP%]   .c-switch-input[_ngcontent-%COMP%], [_nghost-%COMP%]   .c-switch-slider[_ngcontent-%COMP%]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[_nghost-%COMP%]   .c-switch-label[_ngcontent-%COMP%]:focus{outline:0}.c-switch[_ngcontent-%COMP%]:focus{outline-style:auto;outline-offset:1px}.c-switch-slider[_ngcontent-%COMP%]:focus, .c-switch[_ngcontent-%COMP%]:hover{outline:none}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SwitchComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-switch',
                template: "<label [ngClass]=\"classes\" [tabindex]=\"-1\">\n  <input\n    class=\"c-switch-input form-check-input\"\n    [tabindex]=\"tabindex\"\n    [type]=\"type\"\n    [autofocus]=\"autofocus\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    [required]=\"required\"\n    [name]=\"name ? name : ''\"\n    [value]=\"value\">\n  <span class=\"c-switch-slider\" attr.data-checked=\"{{labelOn}}\" attr.data-unchecked=\"{{labelOff}}\"></span>\n</label>\n",
                styles: [":host{outline:0}:host,:host .c-switch,:host .c-switch-input,:host .c-switch-slider{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host .c-switch-label:focus{outline:0}.c-switch:focus{outline-style:auto;outline-offset:1px}.c-switch-slider:focus,.c-switch:hover{outline:none}"]
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { variant: [{
            type: i0.Input
        }], labelOn: [{
            type: i0.Input
        }], labelOff: [{
            type: i0.Input
        }], size: [{
            type: i0.Input
        }], shape: [{
            type: i0.Input
        }], tabindex: [{
            type: i0.Input
        }], type: [{
            type: i0.Input
        }], value: [{
            type: i0.Input
        }], hostTabIndex: [{
            type: i0.HostBinding,
            args: ['attr.tabindex']
        }], toggle: [{
            type: i0.Output,
            args: ['checked']
        }], autofocus: [{
            type: i0.Input
        }], checked: [{
            type: i0.Input
        }], disabled: [{
            type: i0.Input
        }], required: [{
            type: i0.Input
        }], onKeyDown: [{
            type: i0.HostListener,
            args: ['keydown', ['$event']]
        }], onKeyUp: [{
            type: i0.HostListener,
            args: ['keyup', ['$event']]
        }], onClick: [{
            type: i0.HostListener,
            args: ['click', ['$event']]
        }], color: [{
            type: i0.Input
        }], name: [{
            type: i0.Input
        }] }); })();
        return SwitchComponent;
    }());
    SwitchComponent.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef }
    ]; };
    SwitchComponent.propDecorators = {
        color: [{ type: i0.Input }],
        variant: [{ type: i0.Input }],
        labelOn: [{ type: i0.Input }],
        labelOff: [{ type: i0.Input }],
        size: [{ type: i0.Input }],
        shape: [{ type: i0.Input }],
        name: [{ type: i0.Input }],
        tabindex: [{ type: i0.Input }],
        type: [{ type: i0.Input }],
        value: [{ type: i0.Input }],
        autofocus: [{ type: i0.Input }],
        checked: [{ type: i0.Input }],
        disabled: [{ type: i0.Input }],
        required: [{ type: i0.Input }],
        hostTabIndex: [{ type: i0.HostBinding, args: ['attr.tabindex',] }],
        toggle: [{ type: i0.Output, args: ['checked',] }],
        onKeyDown: [{ type: i0.HostListener, args: ['keydown', ['$event'],] }],
        onKeyUp: [{ type: i0.HostListener, args: ['keyup', ['$event'],] }],
        onClick: [{ type: i0.HostListener, args: ['click', ['$event'],] }]
    };

    var SwitchModule = /** @class */ (function () {
        function SwitchModule() {
        }
SwitchModule.ɵfac = function SwitchModule_Factory(t) { return new (t || SwitchModule)(); };
SwitchModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SwitchModule });
SwitchModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SwitchModule, { declarations: [SwitchComponent], imports: [ɵngcc1.CommonModule], exports: [SwitchComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SwitchModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    SwitchComponent
                ],
                exports: [
                    SwitchComponent
                ],
                imports: [
                    i1.CommonModule,
                ]
            }]
    }], function () { return []; }, null); })();
        return SwitchModule;
    }());

    var TabsetService = /** @class */ (function () {
        function TabsetService() {
            this.activeTab = new rxjs.Subject();
            this.activeTab$ = this.activeTab.asObservable();
        }
        TabsetService.prototype.setActiveTab = function (tab) {
            this.activeTab.next(tab);
        };
TabsetService.ɵfac = function TabsetService_Factory(t) { return new (t || TabsetService)(); };
TabsetService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TabsetService, factory: function (t) { return TabsetService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabsetService, [{
        type: i0.Injectable
    }], function () { return []; }, null); })();
        return TabsetService;
    }());
    TabsetService.ctorParameters = function () { return []; };

    var TabComponent = /** @class */ (function () {
        function TabComponent(renderer, tabsetService) {
            this.renderer = renderer;
            this.tabsetService = tabsetService;
            this.classMap = {};
            this._navItemClass = true;
        }
        Object.defineProperty(TabComponent.prototype, "active", {
            get: function () {
                return this.classMap.active;
            },
            set: function (active) {
                this.classMap.active = active;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabComponent.prototype, "disabled", {
            get: function () {
                return this.classMap.disabled;
            },
            set: function (disabled) {
                this.classMap.disabled = disabled;
            },
            enumerable: false,
            configurable: true
        });
        TabComponent.prototype.onClick = function (e) {
            e.preventDefault();
            if (!this.disabled) {
                this.active = true;
                this.tabsetService.setActiveTab(this);
            }
        };
        TabComponent.prototype.ngOnInit = function () {
            this.classMap = {
                'nav-link': true,
                active: this.active,
                disabled: this.disabled
            };
        };
        TabComponent.prototype.ngOnDestroy = function () {
            this.activeTabUnsubscribe();
        };
        TabComponent.prototype.ngAfterViewInit = function () {
            this.activeTabSubscribe();
        };
        TabComponent.prototype.ngOnChanges = function (changes) {
            this.classMap = {
                active: changes.active ? changes.active.currentValue : this.active,
                disabled: changes.disabled ? changes.disabled.currentValue : this.disabled
            };
            this.classMap = Object.assign(Object.create(null), this.classMap);
        };
        TabComponent.prototype.activeTabSubscribe = function () {
            var _this = this;
            this.activeTabSubscription = this.tabsetService.activeTab$.subscribe(function (activeTab) {
                _this.active = _this.indexKey === activeTab.indexKey;
                _this.classMap.active = _this.indexKey === activeTab.indexKey;
            });
        };
        TabComponent.prototype.activeTabUnsubscribe = function () {
            this.activeTabSubscription.unsubscribe();
        };
TabComponent.ɵfac = function TabComponent_Factory(t) { return new (t || TabComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(TabsetService)); };
TabComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabComponent, selectors: [["c-tab"]], viewQuery: function TabComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c16, 3);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._link = _t.first);
    } }, hostVars: 2, hostBindings: function TabComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function TabComponent_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("nav-item", ctx._navItemClass);
    } }, inputs: { active: "active", disabled: "disabled" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 3, vars: 2, consts: [["href", "", 3, "ngClass", "tabindex"], ["link", ""]], template: function TabComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "a", 0, 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate("tabindex", ctx.disabled ? -1 : 0);
        ɵngcc0.ɵɵproperty("ngClass", ctx.classMap);
    } }, directives: [ɵngcc1.NgClass], styles: ["[_nghost-%COMP%]   .nav-link[_ngcontent-%COMP%]:focus{outline:none!important}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-tab',
                template: "<!--<a #link href=\"javascript:void(0);\" [ngClass]=\"classMap\" (click)=\"onClick($event)\" tabindex=\"{{disabled ? -1 : 0}}\">-->\n<a #link href [ngClass]=\"classMap\" tabindex=\"{{disabled ? -1 : 0}}\">\n  <ng-content></ng-content>\n</a>\n",
                styles: [":host .nav-link:focus{outline:none!important}"]
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: TabsetService }]; }, { _navItemClass: [{
            type: i0.HostBinding,
            args: ['class.nav-item']
        }], active: [{
            type: i0.Input
        }], disabled: [{
            type: i0.Input
        }], onClick: [{
            type: i0.HostListener,
            args: ['click', ['$event']]
        }], _link: [{
            type: i0.ViewChild,
            args: ['link', { static: true }]
        }] }); })();
        return TabComponent;
    }());
    TabComponent.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: TabsetService }
    ]; };
    TabComponent.propDecorators = {
        active: [{ type: i0.Input }],
        disabled: [{ type: i0.Input }],
        _navItemClass: [{ type: i0.HostBinding, args: ['class.nav-item',] }],
        _link: [{ type: i0.ViewChild, args: ['link', { static: true },] }],
        onClick: [{ type: i0.HostListener, args: ['click', ['$event'],] }]
    };

    var TabPaneComponent = /** @class */ (function () {
        function TabPaneComponent(tabsetService) {
            this.tabsetService = tabsetService;
            this.fade = true;
            this._tabPane = true;
            this._tabActive = true;
            this._tabShow = false;
            this._tabFade = this.fade;
        }
        Object.defineProperty(TabPaneComponent.prototype, "active", {
            get: function () {
                return this._tabActive;
            },
            set: function (active) {
                this._tabActive = active;
                this._tabShow = active;
            },
            enumerable: false,
            configurable: true
        });
        TabPaneComponent.prototype.ngOnInit = function () {
            this.activeTabSubscribe();
        };
        TabPaneComponent.prototype.ngOnDestroy = function () {
            this.activeTabUnsubscribe();
        };
        TabPaneComponent.prototype.activeTabSubscribe = function () {
            var _this = this;
            this.activeTabSubscription = this.tabsetService.activeTab$.subscribe(function (activeTab) {
                setTimeout(function () {
                    _this.active = activeTab.indexKey === _this.indexKey;
                });
            });
        };
        TabPaneComponent.prototype.activeTabUnsubscribe = function () {
            this.activeTabSubscription.unsubscribe();
        };
TabPaneComponent.ɵfac = function TabPaneComponent_Factory(t) { return new (t || TabPaneComponent)(ɵngcc0.ɵɵdirectiveInject(TabsetService)); };
TabPaneComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabPaneComponent, selectors: [["c-tab-pane"]], hostVars: 8, hostBindings: function TabPaneComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("tab-pane", ctx._tabPane)("active", ctx._tabActive)("show", ctx._tabShow)("fade", ctx._tabFade);
    } }, inputs: { active: "active" }, ngContentSelectors: _c0, decls: 1, vars: 1, consts: [[4, "ngIf"]], template: function TabPaneComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, TabPaneComponent_ng_content_0_Template, 1, 0, "ng-content", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.active);
    } }, directives: [ɵngcc1.NgIf], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabPaneComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-tab-pane',
                template: "<ng-content *ngIf=\"active\"></ng-content>\n\n",
                styles: [""]
            }]
    }], function () { return [{ type: TabsetService }]; }, { _tabPane: [{
            type: i0.HostBinding,
            args: ['class.tab-pane']
        }], _tabActive: [{
            type: i0.HostBinding,
            args: ['class.active']
        }], _tabShow: [{
            type: i0.HostBinding,
            args: ['class.show']
        }], _tabFade: [{
            type: i0.HostBinding,
            args: ['class.fade']
        }], active: [{
            type: i0.Input
        }] }); })();
        return TabPaneComponent;
    }());
    TabPaneComponent.ctorParameters = function () { return [
        { type: TabsetService }
    ]; };
    TabPaneComponent.propDecorators = {
        active: [{ type: i0.Input }],
        _tabPane: [{ type: i0.HostBinding, args: ['class.tab-pane',] }],
        _tabActive: [{ type: i0.HostBinding, args: ['class.active',] }],
        _tabShow: [{ type: i0.HostBinding, args: ['class.show',] }],
        _tabFade: [{ type: i0.HostBinding, args: ['class.fade',] }]
    };

    var TabListComponent = /** @class */ (function () {
        function TabListComponent() {
            this._navClass = true;
        }
        Object.defineProperty(TabListComponent.prototype, "variant", {
            set: function (variant) {
                this._navTabsClass = variant !== 'pills';
                this._navPillsClass = variant === 'pills';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabListComponent.prototype, "vertical", {
            set: function (vertical) {
                this._navFlexColumn = !!vertical;
                this._navH100 = !!vertical;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabListComponent.prototype, "fill", {
            set: function (fill) {
                this._navFill = !!fill;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabListComponent.prototype, "justified", {
            set: function (justified) {
                this._navJustified = !!justified;
            },
            enumerable: false,
            configurable: true
        });
TabListComponent.ɵfac = function TabListComponent_Factory(t) { return new (t || TabListComponent)(); };
TabListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabListComponent, selectors: [["c-tablist"]], hostVars: 14, hostBindings: function TabListComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("nav", ctx._navClass)("nav-tabs", ctx._navTabsClass)("nav-pills", ctx._navPillsClass)("nav-fill", ctx._navFill)("nav-justified", ctx._navJustified)("flex-column", ctx._navFlexColumn)("h-100", ctx._navH100);
    } }, inputs: { variant: "variant", vertical: "vertical", fill: "fill", justified: "justified" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function TabListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabListComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-tablist',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return []; }, { _navClass: [{
            type: i0.HostBinding,
            args: ['class.nav']
        }], variant: [{
            type: i0.Input
        }], vertical: [{
            type: i0.Input
        }], fill: [{
            type: i0.Input
        }], justified: [{
            type: i0.Input
        }], _navTabsClass: [{
            type: i0.HostBinding,
            args: ['class.nav-tabs']
        }], _navPillsClass: [{
            type: i0.HostBinding,
            args: ['class.nav-pills']
        }], _navFill: [{
            type: i0.HostBinding,
            args: ['class.nav-fill']
        }], _navJustified: [{
            type: i0.HostBinding,
            args: ['class.nav-justified']
        }], _navFlexColumn: [{
            type: i0.HostBinding,
            args: ['class.flex-column']
        }], _navH100: [{
            type: i0.HostBinding,
            args: ['class.h-100']
        }] }); })();
        return TabListComponent;
    }());
    TabListComponent.ctorParameters = function () { return []; };
    TabListComponent.propDecorators = {
        variant: [{ type: i0.Input }],
        vertical: [{ type: i0.Input }],
        fill: [{ type: i0.Input }],
        justified: [{ type: i0.Input }],
        _navClass: [{ type: i0.HostBinding, args: ['class.nav',] }],
        _navTabsClass: [{ type: i0.HostBinding, args: ['class.nav-tabs',] }],
        _navPillsClass: [{ type: i0.HostBinding, args: ['class.nav-pills',] }],
        _navFill: [{ type: i0.HostBinding, args: ['class.nav-fill',] }],
        _navJustified: [{ type: i0.HostBinding, args: ['class.nav-justified',] }],
        _navFlexColumn: [{ type: i0.HostBinding, args: ['class.flex-column',] }],
        _navH100: [{ type: i0.HostBinding, args: ['class.h-100',] }]
    };

    var TabsetComponent = /** @class */ (function () {
        function TabsetComponent(hostElement, renderer, tabsetService) {
            this.hostElement = hostElement;
            this.renderer = renderer;
            this.tabsetService = tabsetService;
            this._activeTab = 0;
            this._tabsArray = [];
            this.variant = 'tabs';
            this.fade = true;
            this.boxed = false;
            this.activeTabChange = new i0.EventEmitter();
            this.host = this.hostElement.nativeElement;
        }
        Object.defineProperty(TabsetComponent.prototype, "activeTab", {
            get: function () {
                return this._activeTab;
            },
            set: function (index) {
                this._activeTab = index >= 0 ? index : this._activeTab;
            },
            enumerable: false,
            configurable: true
        });
        TabsetComponent.prototype.ngOnInit = function () {
            if (typeof this.boxed === 'string') {
                this.renderer.addClass(this.host, "nav-tabs-boxed-" + this.boxed);
            }
            this.activeTabSubscribe();
        };
        TabsetComponent.prototype.ngOnDestroy = function () {
            this.activeTabUnsubscribe();
        };
        TabsetComponent.prototype.ngAfterContentInit = function () {
            this.tabList.variant = this.variant;
            this.tabList.vertical = this.vertical;
            this.tabList.fill = this.fill;
            this.tabList.justified = this.justified;
            this._tabsArray = this.tabs.toArray();
            if (this.tabs.length) {
                this._selectedTab = this.tabs.length - 1 < this.activeTab ? this.tabs.first : this._tabsArray[this.activeTab];
            }
            this.tabs.forEach(function (item, index) {
                item.indexKey = index;
            });
            this.panes.forEach(function (item, index) {
                item.indexKey = index;
            });
            this.tabsetService.setActiveTab(this._selectedTab);
            this.setActiveTab(this._selectedTab);
        };
        TabsetComponent.prototype.ngAfterContentChecked = function () {
        };
        TabsetComponent.prototype.ngOnChanges = function (changes) {
        };
        TabsetComponent.prototype.setActiveTab = function (tab) {
            if (tab === void 0) { tab = this._selectedTab; }
            this.activeTab = tab.indexKey;
            if (!tab.disabled) {
                tab.active = true;
                this.tabsetService.setActiveTab(tab);
                this.activeTabChange.emit(this.activeTab);
            }
        };
        TabsetComponent.prototype.activeTabSubscribe = function () {
            this.activeTabSubscription = this.tabsetService.activeTab$.subscribe(function (activeTab) {
            });
        };
        TabsetComponent.prototype.activeTabUnsubscribe = function () {
            this.activeTabSubscription.unsubscribe();
        };
TabsetComponent.ɵfac = function TabsetComponent_Factory(t) { return new (t || TabsetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(TabsetService)); };
TabsetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabsetComponent, selectors: [["c-tabset"]], contentQueries: function TabsetComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TabListComponent, 3);
        ɵngcc0.ɵɵcontentQuery(dirIndex, TabComponent, 1);
        ɵngcc0.ɵɵcontentQuery(dirIndex, TabPaneComponent, 1);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabList = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabs = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panes = _t);
    } }, hostVars: 2, hostBindings: function TabsetComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("nav-tabs-boxed", ctx.boxed);
    } }, inputs: { variant: "variant", fade: "fade", boxed: "boxed", activeTab: "activeTab", fill: "fill", justified: "justified", vertical: "vertical" }, outputs: { activeTabChange: "activeTabChange" }, features: [ɵngcc0.ɵɵProvidersFeature([TabsetService]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function TabsetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabsetComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-tabset',
                template: "<ng-content></ng-content>\n",
                providers: [TabsetService],
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: TabsetService }]; }, { variant: [{
            type: i0.Input
        }], fade: [{
            type: i0.Input
        }], boxed: [{
            type: i0.HostBinding,
            args: ['class.nav-tabs-boxed']
        }, {
            type: i0.Input
        }], activeTabChange: [{
            type: i0.Output
        }], activeTab: [{
            type: i0.Input
        }], fill: [{
            type: i0.Input
        }], justified: [{
            type: i0.Input
        }], vertical: [{
            type: i0.Input
        }], tabList: [{
            type: i0.ContentChild,
            args: [TabListComponent, { static: true }]
        }], tabs: [{
            type: i0.ContentChildren,
            args: [TabComponent, { descendants: true }]
        }], panes: [{
            type: i0.ContentChildren,
            args: [TabPaneComponent, { descendants: true }]
        }] }); })();
        return TabsetComponent;
    }());
    TabsetComponent.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: i0.Renderer2 },
        { type: TabsetService }
    ]; };
    TabsetComponent.propDecorators = {
        fill: [{ type: i0.Input }],
        justified: [{ type: i0.Input }],
        variant: [{ type: i0.Input }],
        fade: [{ type: i0.Input }],
        vertical: [{ type: i0.Input }],
        activeTab: [{ type: i0.Input }],
        boxed: [{ type: i0.HostBinding, args: ['class.nav-tabs-boxed',] }, { type: i0.Input }],
        activeTabChange: [{ type: i0.Output }],
        tabList: [{ type: i0.ContentChild, args: [TabListComponent, { static: true },] }],
        tabs: [{ type: i0.ContentChildren, args: [TabComponent, { descendants: true },] }],
        panes: [{ type: i0.ContentChildren, args: [TabPaneComponent, { descendants: true },] }]
    };

    var TabContentComponent = /** @class */ (function () {
        function TabContentComponent() {
            this._hasPanes = false;
            this._tabContent = true;
        }
        Object.defineProperty(TabContentComponent.prototype, "hasPanes", {
            get: function () {
                return this._hasPanes ? null : true;
            },
            set: function (hasPanes) {
                this._hasPanes = hasPanes;
            },
            enumerable: false,
            configurable: true
        });
        TabContentComponent.prototype.ngOnInit = function () {
        };
        TabContentComponent.prototype.ngAfterContentChecked = function () {
            this.hasPanes = this.panes.length > 0;
        };
TabContentComponent.ɵfac = function TabContentComponent_Factory(t) { return new (t || TabContentComponent)(); };
TabContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabContentComponent, selectors: [["c-tab-content"]], contentQueries: function TabContentComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TabPaneComponent, 0);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panes = _t);
    } }, hostVars: 3, hostBindings: function TabContentComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("hidden", ctx.hasPanes);
        ɵngcc0.ɵɵclassProp("tab-content", ctx._tabContent);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function TabContentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{display:block}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabContentComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-tab-content',
                template: "<ng-content></ng-content>\n",
                styles: [":host{display:block}"]
            }]
    }], function () { return []; }, { _tabContent: [{
            type: i0.HostBinding,
            args: ['class.tab-content']
        }], hasPanes: [{
            type: i0.HostBinding,
            args: ['attr.hidden']
        }], panes: [{
            type: i0.ContentChildren,
            args: [TabPaneComponent]
        }] }); })();
        return TabContentComponent;
    }());
    TabContentComponent.ctorParameters = function () { return []; };
    TabContentComponent.propDecorators = {
        _tabContent: [{ type: i0.HostBinding, args: ['class.tab-content',] }],
        hasPanes: [{ type: i0.HostBinding, args: ['attr.hidden',] }],
        panes: [{ type: i0.ContentChildren, args: [TabPaneComponent,] }]
    };

    var TabsetModule = /** @class */ (function () {
        function TabsetModule() {
        }
TabsetModule.ɵfac = function TabsetModule_Factory(t) { return new (t || TabsetModule)(); };
TabsetModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TabsetModule });
TabsetModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [
        TabsetService
    ], imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TabsetModule, { declarations: [TabsetComponent, TabListComponent, TabComponent, TabContentComponent, TabPaneComponent], imports: [ɵngcc1.CommonModule], exports: [TabsetComponent, TabListComponent, TabComponent, TabContentComponent, TabPaneComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabsetModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [TabsetComponent, TabListComponent, TabComponent, TabContentComponent, TabPaneComponent],
                exports: [
                    TabsetComponent,
                    TabListComponent,
                    TabComponent,
                    TabContentComponent,
                    TabPaneComponent,
                ],
                imports: [
                    i1.CommonModule
                ],
                providers: [
                    TabsetService
                ]
            }]
    }], function () { return []; }, null); })();
        return TabsetModule;
    }());

    var MASKEDINPUT_VALUE_ACCESSOR = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return TextMaskDirective; }),
        multi: true
    };
    var TextMaskDirective = /** @class */ (function () {
        function TextMaskDirective(platform, _renderer, _elementRef, _compositionMode) {
            this.platform = platform;
            this._renderer = _renderer;
            this._elementRef = _elementRef;
            this._compositionMode = _compositionMode;
            this.textMaskConfig = {
                mask: [],
                guide: true,
                placeholderChar: '_',
                pipe: undefined,
                keepCharPositions: false,
            };
            this.onChange = function (_) { };
            this.onTouched = function () { };
            this._composing = false;
            if (this._compositionMode == null) {
                this._compositionMode = !platform.ANDROID;
            }
        }
        TextMaskDirective.prototype.ngOnChanges = function (changes) {
            this._setupMask(true);
            if (this.textMaskInputElement !== undefined) {
                this.textMaskInputElement.update(this.inputElement.value);
            }
        };
        TextMaskDirective.prototype.writeValue = function (value) {
            this._setupMask();
            var normalizedValue = value == null ? '' : value;
            this._renderer.setProperty(this.inputElement, 'value', normalizedValue);
            if (this.textMaskInputElement !== undefined) {
                this.textMaskInputElement.update(value);
            }
        };
        TextMaskDirective.prototype.registerOnChange = function (fn) { this.onChange = fn; };
        TextMaskDirective.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };
        TextMaskDirective.prototype.setDisabledState = function (isDisabled) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
        };
        TextMaskDirective.prototype._handleInput = function (value) {
            if (!this._compositionMode || (this._compositionMode && !this._composing)) {
                this._setupMask();
                if (this.textMaskInputElement !== undefined) {
                    this.textMaskInputElement.update(value);
                    value = this.inputElement.value;
                    this.onChange(value);
                }
            }
        };
        TextMaskDirective.prototype._setupMask = function (create) {
            if (create === void 0) { create = false; }
            if (!this.inputElement) {
                if (this._elementRef.nativeElement.tagName.toUpperCase() === 'INPUT') {
                    this.inputElement = this._elementRef.nativeElement;
                }
                else {
                    this.inputElement = this._elementRef.nativeElement.getElementsByTagName('INPUT')[0];
                }
            }
            if (this.inputElement && create) {
                this.textMaskInputElement = textMaskCore.createTextMaskInputElement(Object.assign({ inputElement: this.inputElement }, this.textMaskConfig));
            }
        };
        TextMaskDirective.prototype._compositionStart = function () { this._composing = true; };
        TextMaskDirective.prototype._compositionEnd = function (value) {
            this._composing = false;
            this._compositionMode && this._handleInput(value);
        };
TextMaskDirective.ɵfac = function TextMaskDirective_Factory(t) { return new (t || TextMaskDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(forms.COMPOSITION_BUFFER_MODE, 8)); };
TextMaskDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TextMaskDirective, selectors: [["", "textMask", ""]], hostBindings: function TextMaskDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("input", function TextMaskDirective_input_HostBindingHandler($event) { return ctx._handleInput($event.target.value); })("blur", function TextMaskDirective_blur_HostBindingHandler() { return ctx.onTouched(); })("compositionstart", function TextMaskDirective_compositionstart_HostBindingHandler() { return ctx._compositionStart(); })("compositionend", function TextMaskDirective_compositionend_HostBindingHandler($event) { return ctx._compositionEnd($event.target.value); });
    } }, inputs: { textMaskConfig: ["textMask", "textMaskConfig"] }, exportAs: ["textMask"], features: [ɵngcc0.ɵɵProvidersFeature([MASKEDINPUT_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextMaskDirective, [{
        type: i0.Directive,
        args: [{
                host: {
                    '(input)': '_handleInput($event.target.value)',
                    '(blur)': 'onTouched()',
                    '(compositionstart)': '_compositionStart()',
                    '(compositionend)': '_compositionEnd($event.target.value)'
                },
                selector: '[textMask]',
                exportAs: 'textMask',
                providers: [MASKEDINPUT_VALUE_ACCESSOR]
            }]
    }], function () { return [{ type: ɵngcc8.Platform }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: Boolean, decorators: [{
                type: i0.Optional
            }, {
                type: i0.Inject,
                args: [forms.COMPOSITION_BUFFER_MODE]
            }] }]; }, { textMaskConfig: [{
            type: i0.Input,
            args: ['textMask']
        }] }); })();
        return TextMaskDirective;
    }());
    TextMaskDirective.ctorParameters = function () { return [
        { type: platform.Platform },
        { type: i0.Renderer2 },
        { type: i0.ElementRef },
        { type: Boolean, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [forms.COMPOSITION_BUFFER_MODE,] }] }
    ]; };
    TextMaskDirective.propDecorators = {
        textMaskConfig: [{ type: i0.Input, args: ['textMask',] }]
    };

    var TextMaskConfig = /** @class */ (function () {
        function TextMaskConfig() {
        }
        return TextMaskConfig;
    }());

    var TextMaskModule = /** @class */ (function () {
        function TextMaskModule() {
        }
        TextMaskModule.forRoot = function () {
            return {
                ngModule: TextMaskModule
            };
        };
TextMaskModule.ɵfac = function TextMaskModule_Factory(t) { return new (t || TextMaskModule)(); };
TextMaskModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextMaskModule });
TextMaskModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextMaskModule, { declarations: [TextMaskDirective], imports: [ɵngcc1.CommonModule], exports: [TextMaskDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextMaskModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    i1.CommonModule
                ],
                declarations: [
                    TextMaskDirective
                ],
                exports: [
                    TextMaskDirective
                ]
            }]
    }], function () { return []; }, null); })();
        return TextMaskModule;
    }());

    var ToasterService = /** @class */ (function () {
        function ToasterService() {
            this.toasterState = new rxjs.BehaviorSubject({});
            this.toasterState$ = this.toasterState.asObservable();
        }
        ToasterService.prototype.setState = function (state) {
            this.toasterState.next(state);
        };
ToasterService.ɵfac = function ToasterService_Factory(t) { return new (t || ToasterService)(); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToasterService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
        return ToasterService;
    }());
    ToasterService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ToasterService_Factory() { return new ToasterService(); }, token: ToasterService, providedIn: "root" });
    ToasterService.ctorParameters = function () { return []; };

    var ToastComponent = /** @class */ (function () {
        function ToastComponent(hostElement, renderer, ref, toasterService) {
            this.hostElement = hostElement;
            this.renderer = renderer;
            this.ref = ref;
            this.toasterService = toasterService;
            this.autohide = true;
            this.delay = 5000;
            this.fade = true;
            this.shown = new i0.EventEmitter();
            this.hidden = new i0.EventEmitter();
            this.timer = new i0.EventEmitter();
        }
        Object.defineProperty(ToastComponent.prototype, "clock", {
            get: function () {
                return this._clock;
            },
            set: function (value) {
                this._clock = value;
                this.timer.emit(this._clock);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ToastComponent.prototype, "animationDisabled", {
            get: function () {
                return !this.fade;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ToastComponent.prototype, "animateType", {
            get: function () {
                return this.show ? 'show' : 'hide';
            },
            enumerable: false,
            configurable: true
        });
        ToastComponent.prototype.onMouseOver = function () {
            this.clearTimer();
            this.clearClock();
        };
        ToastComponent.prototype.onMouseOut = function () {
            this.setTimer();
        };
        Object.defineProperty(ToastComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ToastComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        toast: true
                    },
                    _a["toast-" + this.color] = !!this.color,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        ToastComponent.prototype.ngOnInit = function () {
            if (this.show) {
                this.toasterService.setState({ toast: this, show: this.show, position: this.position });
                this.setTimer();
            }
            this.stateToasterSubscribe(true);
        };
        ToastComponent.prototype.ngOnDestroy = function () {
            this.clearTimer();
            this.clearClock();
            this.stateToasterSubscribe(false);
        };
        ToastComponent.prototype.ngOnChanges = function (changes) {
            if (changes.color) {
                this.renderer.removeClass(this.hostElement.nativeElement, "toast-" + changes.color.previousValue);
            }
            if (changes.show) {
                this.toasterService.setState({ toast: this, show: this.show, position: this.position });
            }
        };
        ToastComponent.prototype.setTimer = function () {
            var _this = this;
            this.clearTimer();
            if (this.autohide) {
                this.timerId = this.delay > 0 ? setTimeout(function () { return _this.onClose(); }, this.delay) : null;
                this.setClock();
            }
        };
        ToastComponent.prototype.clearTimer = function () {
            clearTimeout(this.timerId);
            this.timerId = null;
        };
        ToastComponent.prototype.onClose = function () {
            this.clearTimer();
            this.show = false;
            this.hidden.emit();
            this.toasterService.setState({ toast: this, show: this.show, position: this.position });
        };
        ToastComponent.prototype.setClock = function () {
            var _this = this;
            this.clearClock();
            this.clock = 0;
            this.clockId = setInterval(function () {
                _this.clock += 1;
            }, 1000);
            this.clockTimerId = setTimeout(function () {
                _this.clearClock();
            }, this.delay);
        };
        ToastComponent.prototype.clearClock = function () {
            clearTimeout(this.clockTimerId);
            clearInterval(this.clockId);
            this.clockId = null;
        };
        ToastComponent.prototype.stateToasterSubscribe = function (subscribe) {
            var _this = this;
            if (subscribe === void 0) { subscribe = true; }
            if (subscribe) {
                var filtered = this.toasterService.toasterState$.pipe(operators.filter(function (state) { return state.toast === _this; }));
                this.stateToasterSubscription = filtered.subscribe(function (state) {
                    _this.state = state.toast;
                });
            }
            else {
                this.stateToasterSubscription.unsubscribe();
            }
        };
ToastComponent.ɵfac = function ToastComponent_Factory(t) { return new (t || ToastComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ToasterService)); };
ToastComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ToastComponent, selectors: [["c-toast"]], hostVars: 4, hostBindings: function ToastComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("mouseover", function ToastComponent_mouseover_HostBindingHandler() { return ctx.onMouseOver(); })("mouseout", function ToastComponent_mouseout_HostBindingHandler() { return ctx.onMouseOut(); });
    } if (rf & 2) {
        ɵngcc0.ɵɵsyntheticHostProperty("@.disabled", ctx.animationDisabled)("@fadeInOut", ctx.animateType);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { autohide: "autohide", delay: "delay", fade: "fade", show: "show", color: "color", index: "index" }, outputs: { shown: "shown", hidden: "hidden", timer: "timer" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ToastComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""], data: { animation: [
            animations.trigger('fadeInOut', [
                animations.state('show', animations.style({ opacity: 1 })),
                animations.state('void', animations.style({ opacity: 0, height: 0, padding: 0, border: 0, margin: 0 })),
                animations.state('hide', animations.style({ opacity: 0, height: 0, padding: 0, border: 0, margin: 0 })),
                animations.transition('show => *', [
                    animations.animate('{{ time }} {{ easing }}', animations.style({ opacity: 0 })),
                    animations.animate('{{ time }} {{ easing }}', animations.style({ height: 0, padding: 0, border: 0, margin: 0 })),
                ], {
                    params: { time: '300ms', easing: 'ease-out' }
                }),
                animations.transition('* => show', [
                    animations.animate('{{ time }} {{ easing }}', animations.style({ opacity: 1, height: '*', padding: '*', border: '*', margin: '*' })),
                ], {
                    params: { time: '300ms', easing: 'ease-in' }
                })
            ])
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-toast',
                template: "<ng-content></ng-content>\n",
                animations: [
                    animations.trigger('fadeInOut', [
                        animations.state('show', animations.style({ opacity: 1 })),
                        animations.state('void', animations.style({ opacity: 0, height: 0, padding: 0, border: 0, margin: 0 })),
                        animations.state('hide', animations.style({ opacity: 0, height: 0, padding: 0, border: 0, margin: 0 })),
                        animations.transition('show => *', [
                            animations.animate('{{ time }} {{ easing }}', animations.style({ opacity: 0 })),
                            animations.animate('{{ time }} {{ easing }}', animations.style({ height: 0, padding: 0, border: 0, margin: 0 })),
                        ], {
                            params: { time: '300ms', easing: 'ease-out' }
                        }),
                        animations.transition('* => show', [
                            animations.animate('{{ time }} {{ easing }}', animations.style({ opacity: 1, height: '*', padding: '*', border: '*', margin: '*' })),
                        ], {
                            params: { time: '300ms', easing: 'ease-in' }
                        })
                    ])
                ],
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }, { type: ToasterService }]; }, { autohide: [{
            type: i0.Input
        }], delay: [{
            type: i0.Input
        }], fade: [{
            type: i0.Input
        }], shown: [{
            type: i0.Output
        }], hidden: [{
            type: i0.Output
        }], timer: [{
            type: i0.Output
        }], animationDisabled: [{
            type: i0.HostBinding,
            args: ['@.disabled']
        }], animateType: [{
            type: i0.HostBinding,
            args: ['@fadeInOut']
        }], onMouseOver: [{
            type: i0.HostListener,
            args: ['mouseover']
        }], onMouseOut: [{
            type: i0.HostListener,
            args: ['mouseout']
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], show: [{
            type: i0.Input
        }], color: [{
            type: i0.Input
        }], index: [{
            type: i0.Input
        }] }); })();
        return ToastComponent;
    }());
    ToastComponent.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: i0.Renderer2 },
        { type: i0.ChangeDetectorRef },
        { type: ToasterService }
    ]; };
    ToastComponent.propDecorators = {
        autohide: [{ type: i0.Input }],
        color: [{ type: i0.Input }],
        delay: [{ type: i0.Input }],
        fade: [{ type: i0.Input }],
        show: [{ type: i0.Input }],
        index: [{ type: i0.Input }],
        shown: [{ type: i0.Output }],
        hidden: [{ type: i0.Output }],
        timer: [{ type: i0.Output }],
        animationDisabled: [{ type: i0.HostBinding, args: ['@.disabled',] }],
        animateType: [{ type: i0.HostBinding, args: ['@fadeInOut',] }],
        onMouseOver: [{ type: i0.HostListener, args: ['mouseover',] }],
        onMouseOut: [{ type: i0.HostListener, args: ['mouseout',] }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var ToastHeaderComponent = /** @class */ (function () {
        function ToastHeaderComponent(toast) {
            this.toast = toast;
            this.closeButton = true;
            this.toastHeaderClass = true;
        }
ToastHeaderComponent.ɵfac = function ToastHeaderComponent_Factory(t) { return new (t || ToastHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(ToastComponent, 8)); };
ToastHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ToastHeaderComponent, selectors: [["c-toast-header"]], hostVars: 2, hostBindings: function ToastHeaderComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("toast-header", ctx.toastHeaderClass);
    } }, inputs: { closeButton: "closeButton" }, ngContentSelectors: _c0, decls: 3, vars: 1, consts: [["class", "close mfs-auto", "aria-label", "close", 3, "style", "cToastClose", 4, "ngIf"], ["aria-label", "close", 1, "close", "mfs-auto", 3, "cToastClose"]], template: function ToastHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementContainerStart(0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵtemplate(2, ToastHeaderComponent_button_2_Template, 2, 4, "button", 0);
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.closeButton);
    } }, directives: function () { return [ɵngcc1.NgIf, ToastCloseDirective]; }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastHeaderComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-toast-header',
                template: "<ng-container>\r\n  <ng-content></ng-content>\r\n  <button *ngIf=\"closeButton\" class=\"close mfs-auto\" aria-label=\"close\" [style]=\"{outline: 0}\" [cToastClose]=\"toast\">\u00D7</button>\r\n</ng-container>\r\n",
                styles: [""]
            }]
    }], function () { return [{ type: ToastComponent, decorators: [{
                type: i0.Optional
            }] }]; }, { closeButton: [{
            type: i0.Input
        }], toastHeaderClass: [{
            type: i0.HostBinding,
            args: ['class.toast-header']
        }] }); })();
        return ToastHeaderComponent;
    }());
    ToastHeaderComponent.ctorParameters = function () { return [
        { type: ToastComponent, decorators: [{ type: i0.Optional }] }
    ]; };
    ToastHeaderComponent.propDecorators = {
        closeButton: [{ type: i0.Input }],
        toastHeaderClass: [{ type: i0.HostBinding, args: ['class.toast-header',] }]
    };

    var ToastBodyComponent = /** @class */ (function () {
        function ToastBodyComponent(toast) {
            this.toast = toast;
            this.toastBodyClass = true;
        }
        ToastBodyComponent.prototype.ngOnInit = function () {
        };
ToastBodyComponent.ɵfac = function ToastBodyComponent_Factory(t) { return new (t || ToastBodyComponent)(ɵngcc0.ɵɵdirectiveInject(ToastComponent, 8)); };
ToastBodyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ToastBodyComponent, selectors: [["c-toast-body"]], hostVars: 2, hostBindings: function ToastBodyComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("toast-body", ctx.toastBodyClass);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ToastBodyComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{display:block}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastBodyComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-toast-body',
                template: "<ng-content></ng-content>\n",
                styles: [":host{display:block}"]
            }]
    }], function () { return [{ type: ToastComponent, decorators: [{
                type: i0.Optional
            }] }]; }, { toastBodyClass: [{
            type: i0.HostBinding,
            args: ['class.toast-body']
        }] }); })();
        return ToastBodyComponent;
    }());
    ToastBodyComponent.ctorParameters = function () { return [
        { type: ToastComponent, decorators: [{ type: i0.Optional }] }
    ]; };
    ToastBodyComponent.propDecorators = {
        toastBodyClass: [{ type: i0.HostBinding, args: ['class.toast-body',] }]
    };

    var ToasterHostDirective = /** @class */ (function () {
        function ToasterHostDirective(viewContainerRef) {
            this.viewContainerRef = viewContainerRef;
        }
ToasterHostDirective.ɵfac = function ToasterHostDirective_Factory(t) { return new (t || ToasterHostDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };
ToasterHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ToasterHostDirective, selectors: [["", "cToasterHost", ""]], exportAs: ["cToasterHost"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToasterHostDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cToasterHost]',
                exportAs: 'cToasterHost'
            }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();
        return ToasterHostDirective;
    }());
    ToasterHostDirective.ctorParameters = function () { return [
        { type: i0.ViewContainerRef }
    ]; };

    (function (ToasterPosition) {
        ToasterPosition["Static"] = "static";
        ToasterPosition["TopCenter"] = "top-center";
        ToasterPosition["TopFull"] = "top-full";
        ToasterPosition["TopLeft"] = "top-left";
        ToasterPosition["TopRight"] = "top-right";
        ToasterPosition["BottomCenter"] = "bottom-center";
        ToasterPosition["BottomFull"] = "bottom-full";
        ToasterPosition["BottomLeft"] = "bottom-left";
        ToasterPosition["BottomRight"] = "bottom-right";
    })(exports.ToasterPosition || (exports.ToasterPosition = {}));
    var ToasterComponent = /** @class */ (function () {
        function ToasterComponent(componentFactoryResolver, hostElement, renderer, toasterService) {
            this.componentFactoryResolver = componentFactoryResolver;
            this.hostElement = hostElement;
            this.renderer = renderer;
            this.toasterService = toasterService;
            this.positions = Object.values(exports.ToasterPosition);
            this.toastsDynamic = [];
            this.position = exports.ToasterPosition.TopRight;
        }
        Object.defineProperty(ToasterComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ToasterComponent.prototype, "hostClasses", {
            get: function () {
                var _c;
                var classes = classNames__default['default']((_c = {
                        toaster: true
                    },
                    _c["toaster-" + this.position] = this.position !== 'static' && !!this.position,
                    _c));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        ToasterComponent.prototype.ngOnInit = function () {
            this.stateToasterSubscribe(true);
        };
        ToasterComponent.prototype.ngOnDestroy = function () {
            this.stateToasterSubscribe(false);
        };
        ToasterComponent.prototype.ngAfterContentChecked = function () {
            this.toasts = this.contentToasts;
        };
        ToasterComponent.prototype.stateToasterSubscribe = function (subscribe) {
            var _this = this;
            if (subscribe === void 0) { subscribe = true; }
            if (subscribe) {
                this.stateToasterSubscription = this.toasterService.toasterState$.subscribe(function (state) {
                    var _a;
                    if (state.show === false) {
                        _this.removeToast(state);
                    }
                    if (state.show === true && ((_a = state.toast) === null || _a === void 0 ? void 0 : _a.dynamic) === undefined) { }
                });
            }
            else {
                this.stateToasterSubscription.unsubscribe();
            }
        };
        ToasterComponent.prototype.addToast = function (toast, options) {
            var e_1, _c;
            var factory = this.componentFactoryResolver.resolveComponentFactory(toast);
            var componentRef = this.toasterHost.viewContainerRef.createComponent(factory);
            this.toastsDynamic.push(componentRef);
            var index = this.toastsDynamic.indexOf(componentRef);
            try {
                for (var _d = __values(Object.entries(options)), _e = _d.next(); !_e.done; _e = _d.next()) {
                    var _f = __read(_e.value, 2), key = _f[0], value = _f[1];
                    componentRef.instance[key] = value;
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_c = _d.return)) _c.call(_d);
                }
                finally { if (e_1) throw e_1.error; }
            }
            componentRef.instance['position'] = this.position;
            componentRef.instance['dynamic'] = true;
            componentRef.instance['index'] = index;
            componentRef.instance['show'] = true;
            componentRef.changeDetectorRef.detectChanges();
            return componentRef;
        };
        ToasterComponent.prototype.removeToast = function (state) {
            var _a, _b;
            (_a = this.toastsDynamic) === null || _a === void 0 ? void 0 : _a.forEach(function (item) {
                if (state.toast.dynamic && (item.instance === state.toast)) {
                    item.destroy();
                }
            });
            (_b = this.toasts) === null || _b === void 0 ? void 0 : _b.forEach(function (item) {
                if (item.element.nativeElement === state.toast.hostElement.nativeElement) {
                    state.toast.show = false;
                    setTimeout(function () {
                        item.element.nativeElement.remove();
                    }, 300);
                }
            });
        };
ToasterComponent.ɵfac = function ToasterComponent_Factory(t) { return new (t || ToasterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ToasterService)); };
ToasterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ToasterComponent, selectors: [["c-toaster"]], contentQueries: function ToasterComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ToastComponent, 0, i0.ViewContainerRef);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentToasts = _t);
    } }, viewQuery: function ToasterComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(ToasterHostDirective, 3);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toasterHost = _t.first);
    } }, hostVars: 2, hostBindings: function ToasterComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { position: "position" }, ngContentSelectors: _c0, decls: 2, vars: 0, consts: [["cToasterHost", ""]], template: function ToasterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ToasterComponent_ng_template_0_Template, 0, 0, "ng-template", 0);
        ɵngcc0.ɵɵprojection(1, 0, ["cToasterHost", ""]);
    } }, directives: [ToasterHostDirective], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToasterComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-toaster',
                template: "<ng-template cToasterHost></ng-template>\n<ng-content cToasterHost></ng-content>\n",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ToasterService }]; }, { position: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], toasterHost: [{
            type: i0.ViewChild,
            args: [ToasterHostDirective, { static: true }]
        }], contentToasts: [{
            type: i0.ContentChildren,
            args: [ToastComponent, { read: i0.ViewContainerRef }]
        }] }); })();
        return ToasterComponent;
    }());
    ToasterComponent.ctorParameters = function () { return [
        { type: i0.ComponentFactoryResolver },
        { type: i0.ElementRef },
        { type: i0.Renderer2 },
        { type: ToasterService }
    ]; };
    ToasterComponent.propDecorators = {
        position: [{ type: i0.Input }],
        toasterHost: [{ type: i0.ViewChild, args: [ToasterHostDirective, { static: true },] }],
        contentToasts: [{ type: i0.ContentChildren, args: [ToastComponent, { read: i0.ViewContainerRef },] }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var ToastCloseDirective = /** @class */ (function () {
        function ToastCloseDirective(toasterService) {
            this.toasterService = toasterService;
        }
        ToastCloseDirective.prototype.toggleOpen = function ($event) {
            $event.preventDefault();
            this.toasterService.setState({ show: false, toast: this.toast });
        };
ToastCloseDirective.ɵfac = function ToastCloseDirective_Factory(t) { return new (t || ToastCloseDirective)(ɵngcc0.ɵɵdirectiveInject(ToasterService)); };
ToastCloseDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ToastCloseDirective, selectors: [["", "cToastClose", ""]], hostBindings: function ToastCloseDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ToastCloseDirective_click_HostBindingHandler($event) { return ctx.toggleOpen($event); });
    } }, inputs: { toast: ["cToastClose", "toast"] }, exportAs: ["cToastClose"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastCloseDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cToastClose]',
                exportAs: 'cToastClose'
            }]
    }], function () { return [{ type: ToasterService }]; }, { toggleOpen: [{
            type: i0.HostListener,
            args: ['click', ['$event']]
        }], toast: [{
            type: i0.Input,
            args: ['cToastClose']
        }] }); })();
        return ToastCloseDirective;
    }());
    ToastCloseDirective.ctorParameters = function () { return [
        { type: ToasterService }
    ]; };
    ToastCloseDirective.propDecorators = {
        toast: [{ type: i0.Input, args: ['cToastClose',] }],
        toggleOpen: [{ type: i0.HostListener, args: ['click', ['$event'],] }]
    };

    var ToastModule = /** @class */ (function () {
        function ToastModule() {
        }
ToastModule.ɵfac = function ToastModule_Factory(t) { return new (t || ToastModule)(); };
ToastModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ToastModule });
ToastModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [ToasterService], imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastModule, { declarations: [ToastComponent, ToastHeaderComponent, ToastBodyComponent, ToasterComponent, ToasterHostDirective, ToastCloseDirective], imports: [ɵngcc1.CommonModule], exports: [ToastComponent, ToastHeaderComponent, ToastBodyComponent, ToasterComponent, ToasterHostDirective, ToastCloseDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [ToastComponent, ToastHeaderComponent, ToastBodyComponent, ToasterComponent, ToasterHostDirective, ToastCloseDirective],
                imports: [
                    i1.CommonModule
                ],
                providers: [ToasterService],
                exports: [ToastComponent, ToastHeaderComponent, ToastBodyComponent, ToasterComponent, ToasterHostDirective, ToastCloseDirective]
            }]
    }], function () { return []; }, null); })();
        return ToastModule;
    }());

    var TogglerComponent = /** @class */ (function () {
        function TogglerComponent(changeDetector) {
            this.changeDetector = changeDetector;
            this.displayFlex = true;
            this.hasContent = true;
        }
        Object.defineProperty(TogglerComponent.prototype, "buttonClass", {
            get: function () {
                if (this.inHeader) {
                    return 'c-header-toggler';
                }
                else if (this.inNavbar) {
                    return 'navbar-toggler';
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TogglerComponent.prototype, "iconClass", {
            get: function () {
                if (this.inHeader) {
                    return 'c-header-toggler-icon';
                }
                else if (this.inNavbar) {
                    return 'navbar-toggler-icon';
                }
            },
            enumerable: false,
            configurable: true
        });
        TogglerComponent.prototype.ngAfterViewInit = function () {
            this.hasContent = this.content.nativeElement.childNodes.length;
            this.changeDetector.detectChanges();
        };
TogglerComponent.ɵfac = function TogglerComponent_Factory(t) { return new (t || TogglerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
TogglerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TogglerComponent, selectors: [["c-toggler"]], viewQuery: function TogglerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c7, 1);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);
    } }, hostVars: 2, hostBindings: function TogglerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("d-flex", ctx.displayFlex);
    } }, inputs: { inHeader: "inHeader", inNavbar: "inNavbar" }, ngContentSelectors: _c0, decls: 3, vars: 2, consts: [["class", "d-flex", 4, "ngIf", "ngIfElse"], ["default", ""], [1, "d-flex"], ["content", ""], ["type", "button"]], template: function TogglerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, TogglerComponent_div_0_Template, 3, 0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, TogglerComponent_ng_template_1_Template, 2, 4, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        var _r1 = ɵngcc0.ɵɵreference(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasContent)("ngIfElse", _r1);
    } }, directives: [ɵngcc1.NgIf], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TogglerComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-toggler',
                template: "<div #content *ngIf = \"hasContent; else default\" class=\"d-flex\"><ng-content></ng-content></div>\n<ng-template #default>\n  <button [class]=\"buttonClass\" type=\"button\">\n    <span [class]=\"iconClass\"></span>\n  </button>\n</ng-template>\n",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { displayFlex: [{
            type: i0.HostBinding,
            args: ['class.d-flex']
        }], inHeader: [{
            type: i0.Input
        }], inNavbar: [{
            type: i0.Input
        }], content: [{
            type: i0.ViewChild,
            args: ['content']
        }] }); })();
        return TogglerComponent;
    }());
    TogglerComponent.ctorParameters = function () { return [
        { type: i0.ChangeDetectorRef }
    ]; };
    TogglerComponent.propDecorators = {
        inHeader: [{ type: i0.Input }],
        inNavbar: [{ type: i0.Input }],
        displayFlex: [{ type: i0.HostBinding, args: ['class.d-flex',] }],
        content: [{ type: i0.ViewChild, args: ['content',] }]
    };

    var TogglerModule = /** @class */ (function () {
        function TogglerModule() {
        }
TogglerModule.ɵfac = function TogglerModule_Factory(t) { return new (t || TogglerModule)(); };
TogglerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TogglerModule });
TogglerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TogglerModule, { declarations: [TogglerComponent], imports: [ɵngcc1.CommonModule], exports: [TogglerComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TogglerModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [TogglerComponent],
                exports: [
                    TogglerComponent
                ],
                imports: [
                    i1.CommonModule
                ]
            }]
    }], function () { return []; }, null); })();
        return TogglerModule;
    }());

    var WidgetSimpleComponent = /** @class */ (function () {
        function WidgetSimpleComponent() {
        }
        WidgetSimpleComponent.prototype.ngOnInit = function () { };
WidgetSimpleComponent.ɵfac = function WidgetSimpleComponent_Factory(t) { return new (t || WidgetSimpleComponent)(); };
WidgetSimpleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WidgetSimpleComponent, selectors: [["c-widget-simple"]], inputs: { header: "header", text: "text" }, ngContentSelectors: _c0, decls: 5, vars: 2, consts: [[1, "card"], [1, "card-body", "text-center"], ["class", "text-muted small text-uppercase font-weight-bold", 4, "ngIf"], ["class", "h2 py-3", 4, "ngIf"], [1, "text-muted", "small", "text-uppercase", "font-weight-bold"], [1, "h2", "py-3"]], template: function WidgetSimpleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, WidgetSimpleComponent_div_2_Template, 2, 1, "div", 2);
        ɵngcc0.ɵɵtemplate(3, WidgetSimpleComponent_div_3_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵprojection(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.header);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.text);
    } }, directives: [ɵngcc1.NgIf], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WidgetSimpleComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-widget-simple',
                template: "<div class=\"card\">\n  <div class=\"card-body text-center\">\n    <div *ngIf=\"!!header\" class=\"text-muted small text-uppercase font-weight-bold\">\n      {{header}}\n    </div>\n    <div *ngIf=\"!!text\" class=\"h2 py-3\">\n      {{text}}\n    </div>\n    <ng-content></ng-content>\n  </div>\n</div>\n",
                styles: [""]
            }]
    }], function () { return []; }, { header: [{
            type: i0.Input
        }], text: [{
            type: i0.Input
        }] }); })();
        return WidgetSimpleComponent;
    }());
    WidgetSimpleComponent.ctorParameters = function () { return []; };
    WidgetSimpleComponent.propDecorators = {
        header: [{ type: i0.Input }],
        text: [{ type: i0.Input }]
    };

    var WidgetBrandComponent = /** @class */ (function () {
        function WidgetBrandComponent() {
        }
        Object.defineProperty(WidgetBrandComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WidgetBrandComponent.prototype, "hostClasses", {
            get: function () {
                var classes = classNames__default['default']({
                    card: true,
                });
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        WidgetBrandComponent.prototype.ngOnInit = function () {
        };
        Object.defineProperty(WidgetBrandComponent.prototype, "headerClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'card-header': true,
                        'content-center': true,
                        'text-white': true,
                        'p-0': true
                    },
                    _a["bg-" + this.color] = !!this.color,
                    _a), this.addHeaderClasses);
                return classes;
            },
            enumerable: false,
            configurable: true
        });
WidgetBrandComponent.ɵfac = function WidgetBrandComponent_Factory(t) { return new (t || WidgetBrandComponent)(); };
WidgetBrandComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WidgetBrandComponent, selectors: [["c-widget-brand"]], hostVars: 2, hostBindings: function WidgetBrandComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { color: "color", rightHeader: "rightHeader", leftHeader: "leftHeader", rightFooter: "rightFooter", leftFooter: "leftFooter", addHeaderClasses: "addHeaderClasses" }, ngContentSelectors: _c0, decls: 11, vars: 6, consts: [[1, "card-body", "row", "text-center"], [1, "col"], ["class", "text-value-lg", 4, "ngIf"], ["class", "text-uppercase text-muted small", 4, "ngIf"], [1, "c-vr"], [1, "text-value-lg"], [1, "text-uppercase", "text-muted", "small"]], template: function WidgetBrandComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementContainerStart(0);
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 0);
        ɵngcc0.ɵɵelementStart(4, "div", 1);
        ɵngcc0.ɵɵtemplate(5, WidgetBrandComponent_div_5_Template, 2, 1, "div", 2);
        ɵngcc0.ɵɵtemplate(6, WidgetBrandComponent_div_6_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(7, "div", 4);
        ɵngcc0.ɵɵelementStart(8, "div", 1);
        ɵngcc0.ɵɵtemplate(9, WidgetBrandComponent_div_9_Template, 2, 1, "div", 2);
        ɵngcc0.ɵɵtemplate(10, WidgetBrandComponent_div_10_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.headerClasses);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.rightHeader);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.rightFooter);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.leftHeader);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.leftFooter);
    } }, directives: [ɵngcc1.NgIf], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WidgetBrandComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-widget-brand',
                template: "<ng-container>\n  <div [class]=\"headerClasses\">\n    <ng-content></ng-content>\n  </div>\n  <!--todo: <ng-content select=\"[slot=body]\"></ng-content>-->\n  <div class=\"card-body row text-center\">\n    <div class=\"col\">\n      <div *ngIf=\"!!rightHeader\" class=\"text-value-lg\">{{rightHeader}}</div>\n      <div *ngIf=\"!!rightFooter\" class=\"text-uppercase text-muted small\">{{rightFooter}}</div>\n    </div>\n    <div class=\"c-vr\"></div>\n    <div class=\"col\">\n      <div *ngIf=\"!!leftHeader\" class=\"text-value-lg\">{{leftHeader}}</div>\n      <div *ngIf=\"!!leftFooter\" class=\"text-uppercase text-muted small\">{{leftFooter}}</div>\n    </div>\n  </div>\n</ng-container>\n",
                styles: [""]
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], color: [{
            type: i0.Input
        }], rightHeader: [{
            type: i0.Input
        }], leftHeader: [{
            type: i0.Input
        }], rightFooter: [{
            type: i0.Input
        }], leftFooter: [{
            type: i0.Input
        }], addHeaderClasses: [{
            type: i0.Input
        }] }); })();
        return WidgetBrandComponent;
    }());
    WidgetBrandComponent.ctorParameters = function () { return []; };
    WidgetBrandComponent.propDecorators = {
        color: [{ type: i0.Input }],
        rightHeader: [{ type: i0.Input }],
        leftHeader: [{ type: i0.Input }],
        rightFooter: [{ type: i0.Input }],
        leftFooter: [{ type: i0.Input }],
        addHeaderClasses: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var WidgetIconComponent = /** @class */ (function () {
        function WidgetIconComponent() {
            this.iconPadding = true;
        }
        Object.defineProperty(WidgetIconComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WidgetIconComponent.prototype, "hostClasses", {
            get: function () {
                var classes = classNames__default['default']({
                    card: true,
                });
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        WidgetIconComponent.prototype.ngOnInit = function () {
        };
        Object.defineProperty(WidgetIconComponent.prototype, "cardBodyClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'card-body': true,
                        'd-flex': true,
                        'align-items-center': true
                    },
                    _a["p-" + (this.iconPadding ? '3' : '0')] = true,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WidgetIconComponent.prototype, "bodySlotClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'mfe-3': true,
                        'text-white': true
                    },
                    _a["bg-" + this.color] = this.color,
                    _a["p-" + (this.iconPadding ? '3' : '4')] = true,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WidgetIconComponent.prototype, "headerClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        'text-value': true
                    },
                    _a["text-" + this.color] = this.color,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
WidgetIconComponent.ɵfac = function WidgetIconComponent_Factory(t) { return new (t || WidgetIconComponent)(); };
WidgetIconComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WidgetIconComponent, selectors: [["c-widget-icon"]], hostVars: 2, hostBindings: function WidgetIconComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { iconPadding: "iconPadding", color: "color", header: "header", text: "text" }, ngContentSelectors: _c19, decls: 8, vars: 6, consts: [[3, "class", 4, "ngIf"], ["class", "text-muted text-uppercase font-weight-bold small", 4, "ngIf"], [1, "text-muted", "text-uppercase", "font-weight-bold", "small"]], template: function WidgetIconComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c18);
        ɵngcc0.ɵɵelementContainerStart(0);
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵelementStart(2, "div");
        ɵngcc0.ɵɵprojection(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div");
        ɵngcc0.ɵɵtemplate(5, WidgetIconComponent_div_5_Template, 2, 3, "div", 0);
        ɵngcc0.ɵɵtemplate(6, WidgetIconComponent_div_6_Template, 2, 1, "div", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(7, 1);
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.cardBodyClasses);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.bodySlotClasses);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.header);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.text);
    } }, directives: [ɵngcc1.NgIf], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WidgetIconComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-widget-icon',
                template: "<ng-container>\n  <div [class]=\"cardBodyClasses\">\n    <div [class]=\"bodySlotClasses\">\n      <ng-content></ng-content>\n    </div>\n    <div>\n      <div *ngIf=\"!!header\" [class]=\"headerClasses\">\n        {{header}}\n      </div>\n      <div *ngIf=\"!!text\" class=\"text-muted text-uppercase font-weight-bold small\">\n        {{text}}\n      </div>\n    </div>\n  </div>\n  <ng-content select=\"[slot=footer]\"></ng-content>\n</ng-container>\n",
                styles: [""]
            }]
    }], function () { return []; }, { iconPadding: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], color: [{
            type: i0.Input
        }], header: [{
            type: i0.Input
        }], text: [{
            type: i0.Input
        }] }); })();
        return WidgetIconComponent;
    }());
    WidgetIconComponent.ctorParameters = function () { return []; };
    WidgetIconComponent.propDecorators = {
        color: [{ type: i0.Input }],
        header: [{ type: i0.Input }],
        text: [{ type: i0.Input }],
        iconPadding: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var WidgetDropdownComponent = /** @class */ (function () {
        function WidgetDropdownComponent() {
        }
        Object.defineProperty(WidgetDropdownComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WidgetDropdownComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        card: true,
                        'text-white': true
                    },
                    _a["bg-" + this.color] = !!this.color,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        WidgetDropdownComponent.prototype.ngOnInit = function () { };
WidgetDropdownComponent.ɵfac = function WidgetDropdownComponent_Factory(t) { return new (t || WidgetDropdownComponent)(); };
WidgetDropdownComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WidgetDropdownComponent, selectors: [["c-widget-dropdown"]], hostVars: 2, hostBindings: function WidgetDropdownComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { color: "color", header: "header", text: "text" }, ngContentSelectors: _c19, decls: 9, vars: 2, consts: [[1, "card-body", "pb-0", "d-flex", "justify-content-between", "align-items-start"], ["v-if", "header", 1, "text-value-lg"], ["v-if", "text"]], template: function WidgetDropdownComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c18);
        ɵngcc0.ɵɵelementContainerStart(0);
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵelementStart(2, "div");
        ɵngcc0.ɵɵelementStart(3, "div", 1);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 2);
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(8, 1);
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ctx.header);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.text);
    } }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WidgetDropdownComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-widget-dropdown',
                template: "<ng-container>\n  <div class=\"card-body pb-0 d-flex justify-content-between align-items-start\">\n    <div>\n      <div v-if=\"header\" class=\"text-value-lg\">{{header}}</div>\n      <div v-if=\"text\">{{text}}</div>\n    </div>\n    <ng-content></ng-content>\n<!--    <ng-content select=\"[dropdown]\" ></ng-content>-->\n  </div>\n  <ng-content select=\"[slot=footer]\"></ng-content>\n</ng-container>\n",
                styles: [""]
            }]
    }], function () { return []; }, { getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], color: [{
            type: i0.Input
        }], header: [{
            type: i0.Input
        }], text: [{
            type: i0.Input
        }] }); })();
        return WidgetDropdownComponent;
    }());
    WidgetDropdownComponent.ctorParameters = function () { return []; };
    WidgetDropdownComponent.propDecorators = {
        color: [{ type: i0.Input }],
        header: [{ type: i0.Input }],
        text: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var WidgetProgressComponent = /** @class */ (function () {
        function WidgetProgressComponent() {
            this.value = 25;
        }
        Object.defineProperty(WidgetProgressComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WidgetProgressComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        card: true,
                        'text-white': this.inverse
                    },
                    _a["bg-" + this.color] = this.inverse && !!this.color,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        WidgetProgressComponent.prototype.ngOnInit = function () {
        };
WidgetProgressComponent.ɵfac = function WidgetProgressComponent_Factory(t) { return new (t || WidgetProgressComponent)(); };
WidgetProgressComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WidgetProgressComponent, selectors: [["c-widget-progress"]], hostVars: 2, hostBindings: function WidgetProgressComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { value: "value", color: "color", footer: "footer", header: "header", text: "text", inverse: "inverse" }, decls: 8, vars: 9, consts: [[1, "card-body"], ["v-if", "header", 1, "h4", "m-0"], ["v-if", "text"], ["size", "xs"], [3, "color", "value"], ["class", "text-muted", 4, "ngIf"], [1, "text-muted"]], template: function WidgetProgressComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "c-progress", 3);
        ɵngcc0.ɵɵelement(6, "c-progress-bar", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, WidgetProgressComponent_small_7_Template, 2, 1, "small", 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.header);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.text);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ɵngcc0.ɵɵpureFunction1(7, _c20, ctx.inverse));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("color", !ctx.inverse ? ctx.color : "")("value", ctx.value);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.footer);
    } }, directives: [ProgressComponent, ProgressBarComponent, ɵngcc1.NgIf], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WidgetProgressComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-widget-progress',
                template: "<div class=\"card-body\">\n  <div v-if=\"header\" class=\"h4 m-0\">{{header}}</div>\n  <div v-if=\"text\">{{text}}</div>\n  <c-progress size=\"xs\" [class]=\"{'my-3': true, 'mb-0': true, 'progress-white': inverse }\">\n    <c-progress-bar\n      [color]=\"!inverse ? color : ''\"\n      [value]=\"value\"\n    ></c-progress-bar>\n  </c-progress>\n  <small *ngIf=\"!!footer\" class=\"text-muted\">\n    {{footer}}\n  </small>\n</div>\n",
                styles: [""]
            }]
    }], function () { return []; }, { value: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], color: [{
            type: i0.Input
        }], footer: [{
            type: i0.Input
        }], header: [{
            type: i0.Input
        }], text: [{
            type: i0.Input
        }], inverse: [{
            type: i0.Input
        }] }); })();
        return WidgetProgressComponent;
    }());
    WidgetProgressComponent.ctorParameters = function () { return []; };
    WidgetProgressComponent.propDecorators = {
        color: [{ type: i0.Input }],
        footer: [{ type: i0.Input }],
        header: [{ type: i0.Input }],
        text: [{ type: i0.Input }],
        inverse: [{ type: i0.Input }],
        value: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var WidgetProgressIconComponent = /** @class */ (function () {
        function WidgetProgressIconComponent() {
            this.value = 25;
        }
        Object.defineProperty(WidgetProgressIconComponent.prototype, "getClasses", {
            get: function () {
                return this.hostClasses;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WidgetProgressIconComponent.prototype, "hostClasses", {
            get: function () {
                var _a;
                var classes = classNames__default['default']((_a = {
                        card: true,
                        'text-white': this.inverse
                    },
                    _a["bg-" + this.color] = this.inverse && !!this.color,
                    _a));
                return classes;
            },
            enumerable: false,
            configurable: true
        });
        WidgetProgressIconComponent.prototype.ngOnInit = function () {
        };
WidgetProgressIconComponent.ɵfac = function WidgetProgressIconComponent_Factory(t) { return new (t || WidgetProgressIconComponent)(); };
WidgetProgressIconComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WidgetProgressIconComponent, selectors: [["c-widget-progress-icon"]], hostVars: 2, hostBindings: function WidgetProgressIconComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { value: "value", color: "color", header: "header", text: "text", inverse: "inverse" }, ngContentSelectors: _c0, decls: 7, vars: 8, consts: [[1, "card-body"], [1, "h1", "text-muted", "text-right", "mb-4"], ["class", "h4 mb-0", 4, "ngIf"], ["class", "text-muted text-uppercase font-weight-bold", 4, "ngIf"], ["size", "xs"], [3, "color", "value"], [1, "h4", "mb-0"], [1, "text-muted", "text-uppercase", "font-weight-bold"]], template: function WidgetProgressIconComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, WidgetProgressIconComponent_div_3_Template, 2, 1, "div", 2);
        ɵngcc0.ɵɵtemplate(4, WidgetProgressIconComponent_small_4_Template, 2, 1, "small", 3);
        ɵngcc0.ɵɵelementStart(5, "c-progress", 4);
        ɵngcc0.ɵɵelement(6, "c-progress-bar", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.header);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.text);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ɵngcc0.ɵɵpureFunction1(6, _c20, ctx.inverse));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("color", !ctx.inverse ? ctx.color : "")("value", ctx.value);
    } }, directives: [ɵngcc1.NgIf, ProgressComponent, ProgressBarComponent], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WidgetProgressIconComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-widget-progress-icon',
                template: "<div class=\"card-body\">\n  <div class=\"h1 text-muted text-right mb-4\">\n    <ng-content></ng-content>\n  </div>\n  <div *ngIf=\"!!header\" class=\"h4 mb-0\">{{header}}</div>\n  <small *ngIf=\"!!text\" class=\"text-muted text-uppercase font-weight-bold\">\n    {{text}}\n  </small>\n<!-- todo  <ng-content slot=\"progress\"></ng-content>-->\n    <c-progress size=\"xs\" [class]=\"{'my-3': true, 'mb-0': true, 'progress-white': inverse }\">\n      <c-progress-bar\n        [color]=\"!inverse ? color : ''\"\n        [value]=\"value\"\n        >\n      </c-progress-bar>\n    </c-progress>\n</div>\n",
                styles: [""]
            }]
    }], function () { return []; }, { value: [{
            type: i0.Input
        }], getClasses: [{
            type: i0.HostBinding,
            args: ['class']
        }], color: [{
            type: i0.Input
        }], header: [{
            type: i0.Input
        }], text: [{
            type: i0.Input
        }], inverse: [{
            type: i0.Input
        }] }); })();
        return WidgetProgressIconComponent;
    }());
    WidgetProgressIconComponent.ctorParameters = function () { return []; };
    WidgetProgressIconComponent.propDecorators = {
        color: [{ type: i0.Input }],
        header: [{ type: i0.Input }],
        text: [{ type: i0.Input }],
        inverse: [{ type: i0.Input }],
        value: [{ type: i0.Input }],
        getClasses: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var WidgetModule = /** @class */ (function () {
        function WidgetModule() {
        }
WidgetModule.ɵfac = function WidgetModule_Factory(t) { return new (t || WidgetModule)(); };
WidgetModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: WidgetModule });
WidgetModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.CommonModule,
            ProgressModule
        ], ProgressModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WidgetModule, { declarations: [WidgetSimpleComponent, WidgetBrandComponent, WidgetIconComponent, WidgetDropdownComponent, WidgetProgressComponent, WidgetProgressIconComponent], imports: [ɵngcc1.CommonModule, ProgressModule], exports: [WidgetSimpleComponent, WidgetBrandComponent, WidgetIconComponent, WidgetDropdownComponent, WidgetProgressComponent, WidgetProgressIconComponent, ProgressModule] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WidgetModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    WidgetSimpleComponent,
                    WidgetBrandComponent,
                    WidgetIconComponent,
                    WidgetDropdownComponent,
                    WidgetProgressComponent,
                    WidgetProgressIconComponent
                ],
                exports: [
                    WidgetSimpleComponent,
                    WidgetBrandComponent,
                    WidgetIconComponent,
                    WidgetDropdownComponent,
                    WidgetProgressComponent,
                    WidgetProgressIconComponent,
                    ProgressModule
                ],
                imports: [
                    i1.CommonModule,
                    ProgressModule
                ]
            }]
    }], function () { return []; }, null); })();
        return WidgetModule;
    }());

    exports.AccordionModule = AccordionModule;
    exports.AlertModule = AlertModule;
    exports.BadgeModule = BadgeModule;
    exports.BodyComponent = BodyComponent;
    exports.BreadcrumbModule = BreadcrumbModule;
    exports.ButtonModule = ButtonModule;
    exports.CalloutModule = CalloutModule;
    exports.CardModule = CardModule;
    exports.CarouselModule = CarouselModule;
    exports.ChartModule = ChartModule;
    exports.ClassToggleService = ClassToggleService;
    exports.CollapseDirective = CollapseDirective;
    exports.CollapseModule = CollapseModule;
    exports.DropdownModule = DropdownModule;
    exports.EmbedModule = EmbedModule;
    exports.FooterComponent = FooterComponent;
    exports.FormModule = FormModule;
    exports.GridModule = GridModule;
    exports.HeaderBrandComponent = HeaderBrandComponent;
    exports.HeaderComponent = HeaderComponent;
    exports.ImgModule = ImgModule;
    exports.LayoutModule = LayoutModule;
    exports.ListGroupModule = ListGroupModule;
    exports.MediaModule = MediaModule;
    exports.ModalModule = ModalModule;
    exports.NavModule = NavModule;
    exports.NavbarModule = NavbarModule;
    exports.ProgressModule = ProgressModule;
    exports.SharedModule = SharedModule;
    exports.SidebarBackdropComponent = SidebarBackdropComponent;
    exports.SidebarBrandComponent = SidebarBrandComponent;
    exports.SidebarComponent = SidebarComponent;
    exports.SidebarFooterComponent = SidebarFooterComponent;
    exports.SidebarFormComponent = SidebarFormComponent;
    exports.SidebarHeaderComponent = SidebarHeaderComponent;
    exports.SidebarMinimizeDirective = SidebarMinimizeDirective;
    exports.SidebarMinimizerComponent = SidebarMinimizerComponent;
    exports.SidebarModule = SidebarModule;
    exports.SidebarNavBadgePipe = SidebarNavBadgePipe;
    exports.SidebarNavComponent = SidebarNavComponent;
    exports.SidebarNavDividerComponent = SidebarNavDividerComponent;
    exports.SidebarNavDropdownComponent = SidebarNavDropdownComponent;
    exports.SidebarNavDropdownToggleDirective = SidebarNavDropdownToggleDirective;
    exports.SidebarNavIconPipe = SidebarNavIconPipe;
    exports.SidebarNavItemClassPipe = SidebarNavItemClassPipe;
    exports.SidebarNavItemsComponent = SidebarNavItemsComponent;
    exports.SidebarNavLabelComponent = SidebarNavLabelComponent;
    exports.SidebarNavLinkComponent = SidebarNavLinkComponent;
    exports.SidebarNavLinkContentComponent = SidebarNavLinkContentComponent;
    exports.SidebarNavLinkPipe = SidebarNavLinkPipe;
    exports.SidebarNavService = SidebarNavService;
    exports.SidebarNavTitleComponent = SidebarNavTitleComponent;
    exports.SidebarService = SidebarService;
    exports.SidebarToggleDirective = SidebarToggleDirective;
    exports.SpinkitModule = SpinkitModule;
    exports.SpinnerModule = SpinnerModule;
    exports.SubheaderComponent = SubheaderComponent;
    exports.SwitchModule = SwitchModule;
    exports.TabsetModule = TabsetModule;
    exports.TextMaskConfig = TextMaskConfig;
    exports.TextMaskDirective = TextMaskDirective;
    exports.TextMaskModule = TextMaskModule;
    exports.ToastBodyComponent = ToastBodyComponent;
    exports.ToastCloseDirective = ToastCloseDirective;
    exports.ToastComponent = ToastComponent;
    exports.ToastHeaderComponent = ToastHeaderComponent;
    exports.ToastModule = ToastModule;
    exports.ToasterComponent = ToasterComponent;
    exports.ToasterHostDirective = ToasterHostDirective;
    exports.ToasterService = ToasterService;
    exports.TogglerModule = TogglerModule;
    exports.WidgetModule = WidgetModule;
    exports.WrapperComponent = WrapperComponent;
    exports.ɵa = AccordionComponent;
    exports.ɵb = AccordionGroupComponent;
    exports.ɵba = CarouselComponent;
    exports.ɵbb = CarouselService;
    exports.ɵbc = CarouselState;
    exports.ɵbd = CarouselConfig;
    exports.ɵbe = CarouselCaptionComponent;
    exports.ɵbf = CarouselControlComponent;
    exports.ɵbg = CarouselIndicatorsComponent;
    exports.ɵbh = CarouselInnerComponent;
    exports.ɵbi = toLeft;
    exports.ɵbj = toRight;
    exports.ɵbk = slideAnimation;
    exports.ɵbl = CarouselItemComponent;
    exports.ɵbm = DropdownDirective;
    exports.ɵbn = DropdownService;
    exports.ɵbo = DropdownState;
    exports.ɵbp = OutClickService;
    exports.ɵbq = DropdownToggleDirective;
    exports.ɵbr = DropdownMenuDirective;
    exports.ɵbs = DropdownHeaderDirective;
    exports.ɵbt = DropdownDividerDirective;
    exports.ɵbu = DropdownItemDirective;
    exports.ɵbv = DropdownDividerComponent;
    exports.ɵbw = EmbedComponent;
    exports.ɵbx = EmbedItemDirective;
    exports.ɵby = FormDirective;
    exports.ɵbz = FormCheckComponent;
    exports.ɵc = CardModule;
    exports.ɵca = FormFeedbackComponent;
    exports.ɵcb = FormGroupComponent;
    exports.ɵcc = FormTextComponent;
    exports.ɵcd = InputDirective;
    exports.ɵce = InputGroupComponent;
    exports.ɵcf = InputGroupTextComponent;
    exports.ɵcg = InputGroupAddonComponent;
    exports.ɵch = InputGroupPrependComponent;
    exports.ɵci = InputGroupAppendComponent;
    exports.ɵcj = TextareaDirective;
    exports.ɵck = SelectDirective;
    exports.ɵcl = LabelDirective;
    exports.ɵcm = ContainerComponent;
    exports.ɵcn = RowComponent;
    exports.ɵco = RowDirective;
    exports.ɵcp = ColComponent;
    exports.ɵcq = ColDirective;
    exports.ɵcr = ImgDirective;
    exports.ɵcs = ListGroupDirective;
    exports.ɵct = ListGroupItemDirective;
    exports.ɵcu = MediaComponent;
    exports.ɵcv = MediaDirective;
    exports.ɵcw = MediaBodyComponent;
    exports.ɵcx = ModalComponent;
    exports.ɵcy = NavComponent;
    exports.ɵcz = NavItemComponent;
    exports.ɵd = CollapseDirective;
    exports.ɵda = NavLinkDirective;
    exports.ɵdb = NavbarComponent;
    exports.ɵdc = NavbarBrandComponent;
    exports.ɵdd = NavbarNavComponent;
    exports.ɵde = NavbarTextComponent;
    exports.ɵdf = ProgressComponent;
    exports.ɵdg = ProgressBarComponent;
    exports.ɵdh = OutClickDirective;
    exports.ɵdi = OutClickService;
    exports.ɵdj = HtmlAttributesDirective;
    exports.ɵdk = SpinkitComponent;
    exports.ɵdl = SpinnerComponent;
    exports.ɵdm = SwitchComponent;
    exports.ɵdn = TabsetComponent;
    exports.ɵdo = TabsetService;
    exports.ɵdp = TabListComponent;
    exports.ɵdq = TabComponent;
    exports.ɵdr = TabPaneComponent;
    exports.ɵds = TabContentComponent;
    exports.ɵdt = ToastComponent;
    exports.ɵdu = ToasterService;
    exports.ɵdv = ToastHeaderComponent;
    exports.ɵdw = ToastBodyComponent;
    exports.ɵdx = ToasterComponent;
    exports.ɵdy = ToasterHostDirective;
    exports.ɵdz = ToastCloseDirective;
    exports.ɵe = AlertComponent;
    exports.ɵea = TogglerComponent;
    exports.ɵeb = WidgetSimpleComponent;
    exports.ɵec = WidgetBrandComponent;
    exports.ɵed = WidgetIconComponent;
    exports.ɵee = WidgetDropdownComponent;
    exports.ɵef = WidgetProgressComponent;
    exports.ɵeg = WidgetProgressIconComponent;
    exports.ɵf = BadgeComponent;
    exports.ɵg = SharedModule;
    exports.ɵh = BreadcrumbComponent;
    exports.ɵi = BreadcrumbDirective;
    exports.ɵj = BreadcrumbService;
    exports.ɵk = ButtonComponent;
    exports.ɵl = ButtonDirective;
    exports.ɵm = ButtonGroupComponent;
    exports.ɵn = ButtonToolbarComponent;
    exports.ɵo = RADIO_CONTROL_VALUE_ACCESSOR$1;
    exports.ɵp = ButtonRadioDirective;
    exports.ɵq = RADIO_CONTROL_VALUE_ACCESSOR;
    exports.ɵr = ButtonRadioGroupDirective;
    exports.ɵs = CalloutComponent;
    exports.ɵt = CardComponent;
    exports.ɵu = CardBodyComponent;
    exports.ɵv = CardFooterComponent;
    exports.ɵw = CardGroupComponent;
    exports.ɵx = CardHeaderComponent;
    exports.ɵy = CardHeaderActionsComponent;
    exports.ɵz = NoZoneBaseChartDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=coreui-angular.umd.js.map