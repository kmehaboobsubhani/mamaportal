import { ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { AnimationEvent } from '@angular/animations';
import * as ɵngcc0 from '@angular/core';
declare type AnimateType = ('hide' | 'show');
export declare class AlertComponent implements OnInit, OnChanges, OnDestroy {
    private sanitizer;
    private hostElement;
    private renderer;
    safeIcon: any;
    timerId: any;
    animate: AnimateType;
    hide: boolean;
    private clockId;
    private _clock;
    get clock(): number;
    color: string;
    closeButton: boolean;
    show: boolean;
    fade: boolean;
    iconHtml: string;
    timeout: number;
    dismissed: EventEmitter<AlertComponent>;
    timer: EventEmitter<number>;
    get animationDisabled(): boolean;
    get animateType(): AnimateType;
    get getClasses(): any;
    get hostClasses(): any;
    constructor(sanitizer: DomSanitizer, hostElement: ElementRef, renderer: Renderer2);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    setTimer(): void;
    clearTimer(): void;
    onClose(): void;
    setClock(): void;
    clearClock(): void;
    onAnimationEvent(event: AnimationEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AlertComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AlertComponent, "c-alert", never, { "color": "color"; "closeButton": "closeButton"; "show": "show"; "fade": "fade"; "iconHtml": "iconHtml"; "timeout": "timeout"; }, { "dismissed": "dismissed"; "timer": "timer"; }, never, ["*"]>;
}
export {};

//# sourceMappingURL=alert.component.d.ts.map