{"version":3,"file":"text-mask.directive.d.ts","sources":["text-mask.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { ElementRef, OnChanges, Provider, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { TextMaskConfig } from './text-mask-config';\r\nexport declare const MASKEDINPUT_VALUE_ACCESSOR: Provider;\r\nexport declare class TextMaskDirective implements ControlValueAccessor, OnChanges {\r\n    platform: Platform;\r\n    private _renderer;\r\n    private _elementRef;\r\n    private readonly _compositionMode;\r\n    constructor(platform: Platform, _renderer: Renderer2, _elementRef: ElementRef, _compositionMode: boolean);\r\n    textMaskConfig: TextMaskConfig;\r\n    onChange: (_: any) => void;\r\n    onTouched: () => void;\r\n    private textMaskInputElement;\r\n    private inputElement;\r\n    private _composing;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: (_: any) => void): void;\r\n    registerOnTouched(fn: () => void): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    _handleInput(value: any): void;\r\n    _setupMask(create?: boolean): void;\r\n    _compositionStart(): void;\r\n    _compositionEnd(value: any): void;\r\n}\r\nexport { conformToMask } from 'text-mask-core/dist/textMaskCore';\r\n"]}