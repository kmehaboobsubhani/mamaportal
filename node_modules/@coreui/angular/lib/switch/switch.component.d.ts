import { ElementRef, EventEmitter, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class SwitchComponent implements OnInit, OnChanges {
    private renderer;
    private hostElement;
    color: string;
    variant: '' | 'outline' | 'opposite' | '3d';
    labelOn: string | 'on' | 'yes';
    labelOff: string | 'off' | 'no';
    size: '' | 'sm' | 'lg';
    shape: '' | 'pill' | 'square';
    name: string;
    tabindex: number | string;
    type: 'checkbox' | 'radio';
    value: any;
    data: {};
    private get label();
    protected _props: {
        autofocus: boolean;
        checked: boolean;
        disabled: boolean;
        required: boolean;
    };
    set autofocus(value: boolean);
    get autofocus(): boolean;
    set checked(value: boolean);
    get checked(): boolean;
    set disabled(value: boolean);
    get disabled(): boolean;
    set required(value: boolean);
    get required(): boolean;
    hostTabIndex: number;
    toggle: EventEmitter<SwitchComponent>;
    private readonly host;
    classes: {};
    constructor(renderer: Renderer2, hostElement: ElementRef);
    ngOnInit(): void;
    setClasses(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onKeyDown(e: any): void;
    onKeyUp(e: any): void;
    onClick(e: any): void;
    toggleSwitch(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SwitchComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SwitchComponent, "c-switch", never, { "variant": "variant"; "labelOn": "labelOn"; "labelOff": "labelOff"; "size": "size"; "shape": "shape"; "tabindex": "tabindex"; "type": "type"; "value": "value"; "autofocus": "autofocus"; "checked": "checked"; "disabled": "disabled"; "required": "required"; "color": "color"; "name": "name"; }, { "toggle": "checked"; }, never, never>;
}

//# sourceMappingURL=switch.component.d.ts.map