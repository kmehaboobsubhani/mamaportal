{"version":3,"file":"sidebar.component.d.ts","sources":["sidebar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { SidebarService } from './sidebar.service';\r\nexport declare class SidebarComponent implements OnInit, OnDestroy, OnChanges {\r\n    private document;\r\n    private renderer;\r\n    private hostElement;\r\n    private breakpointObserver;\r\n    private sidebarService;\r\n    fixed: boolean;\r\n    unfoldable: boolean;\r\n    overlaid: boolean;\r\n    minimize: boolean;\r\n    breakpoint: false | '' | 'sm' | 'md' | 'lg' | 'xl';\r\n    mobile: false | '' | 'sm' | 'md' | 'lg' | 'xl';\r\n    show: boolean;\r\n    size: 'sm' | '' | 'lg' | 'xl';\r\n    aside: boolean;\r\n    hideOnMobileClick: boolean;\r\n    colorScheme: string;\r\n    id: string;\r\n    get getClasses(): any;\r\n    private _isOnMobile;\r\n    private _isOnDesktop;\r\n    private stateToggleSubscription;\r\n    private layoutChangesSubscription;\r\n    private backdrop;\r\n    openMobile: any;\r\n    openDesktop: any;\r\n    minimized: boolean;\r\n    get getDesktopBreakpoint(): string;\r\n    get hasBreakpoint(): boolean;\r\n    get getMobileBreakpoint(): string;\r\n    set isOnMobile(value: boolean);\r\n    get isOnMobile(): boolean;\r\n    set isOnDesktop(value: boolean);\r\n    get isOnDesktop(): boolean;\r\n    get isOpen(): any;\r\n    get hostClasses(): any;\r\n    constructor(document: any, renderer: Renderer2, hostElement: ElementRef, breakpointObserver: BreakpointObserver, sidebarService: SidebarService);\r\n    ngOnInit(): void;\r\n    layoutChangeSubscribe(subscribe?: boolean): void;\r\n    ngOnDestroy(): void;\r\n    setInitialState(): void;\r\n    getState(): {\r\n        opened: any;\r\n        minimized: boolean;\r\n        id: string;\r\n    };\r\n    open(state: any): void;\r\n    private stateToggleSubscribe;\r\n    hideMobile(e: any): void;\r\n    setBackdrop(): void;\r\n    clearBackdrop(): void;\r\n    minimizeSidebar(state: any): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n}\r\n"]}