import { ElementRef, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { BreakpointObserver } from '@angular/cdk/layout';
import { SidebarService } from './sidebar.service';
export declare class SidebarComponent implements OnInit, OnDestroy, OnChanges {
    private document;
    private renderer;
    private hostElement;
    private breakpointObserver;
    private sidebarService;
    fixed: boolean;
    unfoldable: boolean;
    overlaid: boolean;
    minimize: boolean;
    breakpoint: false | '' | 'sm' | 'md' | 'lg' | 'xl';
    mobile: false | '' | 'sm' | 'md' | 'lg' | 'xl';
    show: boolean;
    size: 'sm' | '' | 'lg' | 'xl';
    aside: boolean;
    hideOnMobileClick: boolean;
    colorScheme: string;
    id: string;
    get getClasses(): any;
    private _isOnMobile;
    private _isOnDesktop;
    private stateToggleSubscription;
    private layoutChangesSubscription;
    private backdrop;
    openMobile: any;
    openDesktop: any;
    minimized: boolean;
    get getDesktopBreakpoint(): string;
    get hasBreakpoint(): boolean;
    get getMobileBreakpoint(): string;
    set isOnMobile(value: boolean);
    get isOnMobile(): boolean;
    set isOnDesktop(value: boolean);
    get isOnDesktop(): boolean;
    get isOpen(): any;
    get hostClasses(): any;
    constructor(document: any, renderer: Renderer2, hostElement: ElementRef, breakpointObserver: BreakpointObserver, sidebarService: SidebarService);
    ngOnInit(): void;
    layoutChangeSubscribe(subscribe?: boolean): void;
    ngOnDestroy(): void;
    setInitialState(): void;
    getState(): {
        opened: any;
        minimized: boolean;
        id: string;
    };
    open(state: any): void;
    private stateToggleSubscribe;
    hideMobile(e: any): void;
    setBackdrop(): void;
    clearBackdrop(): void;
    minimizeSidebar(state: any): void;
    ngOnChanges(changes: SimpleChanges): void;
}
