{"version":3,"file":"toaster.component.d.ts","sources":["toaster.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentChecked, ComponentFactoryResolver, ComponentRef, ElementRef, OnDestroy, OnInit, QueryList, Renderer2, ViewContainerRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ToasterService } from './toaster.service';\r\nimport { ToasterHostDirective } from './toaster-host.directive';\r\nexport declare enum ToasterPosition {\r\n    Static = \"static\",\r\n    TopCenter = \"top-center\",\r\n    TopFull = \"top-full\",\r\n    TopLeft = \"top-left\",\r\n    TopRight = \"top-right\",\r\n    BottomCenter = \"bottom-center\",\r\n    BottomFull = \"bottom-full\",\r\n    BottomLeft = \"bottom-left\",\r\n    BottomRight = \"bottom-right\"\r\n}\r\nexport declare type TToasterPosition = ToasterPosition.Static | ToasterPosition.TopCenter | ToasterPosition.TopFull | ToasterPosition.TopLeft | ToasterPosition.TopRight | ToasterPosition.BottomCenter | ToasterPosition.BottomFull | ToasterPosition.BottomLeft | ToasterPosition.BottomRight;\r\nexport declare class ToasterComponent implements OnDestroy, OnInit, AfterContentChecked {\r\n    private componentFactoryResolver;\r\n    private hostElement;\r\n    private renderer;\r\n    private toasterService;\r\n    stateToasterSubscription: Subscription;\r\n    positions: ToasterPosition[];\r\n    toasts: QueryList<ViewContainerRef>;\r\n    toastsDynamic: any[];\r\n    position: TToasterPosition;\r\n    toasterHost: ToasterHostDirective;\r\n    contentToasts: QueryList<ViewContainerRef>;\r\n    get getClasses(): any;\r\n    get hostClasses(): any;\r\n    constructor(componentFactoryResolver: ComponentFactoryResolver, hostElement: ElementRef, renderer: Renderer2, toasterService: ToasterService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngAfterContentChecked(): void;\r\n    private stateToasterSubscribe;\r\n    addToast(toast: any, options: any): ComponentRef<unknown>;\r\n    removeToast(state: any): void;\r\n}\r\n"]}