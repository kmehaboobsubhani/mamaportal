{"version":3,"file":"toast.component.d.ts","sources":["toast.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { ToasterService } from '../toaster/toaster.service';\r\nimport { TToasterPosition } from '../toaster/toaster.component';\r\ndeclare type AnimateType = ('hide' | 'show');\r\nexport declare class ToastComponent implements OnInit, OnDestroy, OnChanges {\r\n    hostElement: ElementRef;\r\n    renderer: Renderer2;\r\n    ref: ChangeDetectorRef;\r\n    toasterService: ToasterService;\r\n    private timerId;\r\n    private clockId;\r\n    private clockTimerId;\r\n    private _clock;\r\n    private state;\r\n    private stateToasterSubscription;\r\n    dynamic: boolean;\r\n    position: TToasterPosition;\r\n    set clock(value: number);\r\n    get clock(): number;\r\n    autohide: boolean;\r\n    color: string;\r\n    delay: number;\r\n    fade: boolean;\r\n    show: boolean;\r\n    index: number;\r\n    shown: EventEmitter<void>;\r\n    hidden: EventEmitter<void>;\r\n    timer: EventEmitter<number>;\r\n    get animationDisabled(): boolean;\r\n    get animateType(): AnimateType;\r\n    onMouseOver(): void;\r\n    onMouseOut(): void;\r\n    get getClasses(): any;\r\n    get hostClasses(): any;\r\n    constructor(hostElement: ElementRef, renderer: Renderer2, ref: ChangeDetectorRef, toasterService: ToasterService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setTimer(): void;\r\n    clearTimer(): void;\r\n    onClose(): void;\r\n    setClock(): void;\r\n    clearClock(): void;\r\n    private stateToasterSubscribe;\r\n}\r\nexport {};\r\n"]}