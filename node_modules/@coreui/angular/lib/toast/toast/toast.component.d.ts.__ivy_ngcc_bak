import { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { ToasterService } from '../toaster/toaster.service';
import { TToasterPosition } from '../toaster/toaster.component';
declare type AnimateType = ('hide' | 'show');
export declare class ToastComponent implements OnInit, OnDestroy, OnChanges {
    hostElement: ElementRef;
    renderer: Renderer2;
    ref: ChangeDetectorRef;
    toasterService: ToasterService;
    private timerId;
    private clockId;
    private clockTimerId;
    private _clock;
    private state;
    private stateToasterSubscription;
    dynamic: boolean;
    position: TToasterPosition;
    set clock(value: number);
    get clock(): number;
    autohide: boolean;
    color: string;
    delay: number;
    fade: boolean;
    show: boolean;
    index: number;
    shown: EventEmitter<void>;
    hidden: EventEmitter<void>;
    timer: EventEmitter<number>;
    get animationDisabled(): boolean;
    get animateType(): AnimateType;
    onMouseOver(): void;
    onMouseOut(): void;
    get getClasses(): any;
    get hostClasses(): any;
    constructor(hostElement: ElementRef, renderer: Renderer2, ref: ChangeDetectorRef, toasterService: ToasterService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    setTimer(): void;
    clearTimer(): void;
    onClose(): void;
    setClock(): void;
    clearClock(): void;
    private stateToasterSubscribe;
}
export {};
