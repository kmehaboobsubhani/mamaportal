import { Component, HostBinding, Input } from '@angular/core';
import { TabsetService } from '../tabset.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../tabset.service';
import * as ɵngcc2 from '@angular/common';

function TabPaneComponent_ng_content_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 0, ["*ngIf", "active"]);
} }
const _c0 = ["*"];
export class TabPaneComponent {
    constructor(tabsetService) {
        this.tabsetService = tabsetService;
        this.fade = true;
        this._tabPane = true;
        this._tabActive = true;
        this._tabShow = false;
        this._tabFade = this.fade;
    }
    set active(active) {
        this._tabActive = active;
        this._tabShow = active;
    }
    get active() {
        return this._tabActive;
    }
    ngOnInit() {
        this.activeTabSubscribe();
    }
    ngOnDestroy() {
        this.activeTabUnsubscribe();
    }
    activeTabSubscribe() {
        this.activeTabSubscription = this.tabsetService.activeTab$.subscribe((activeTab) => {
            setTimeout(() => {
                this.active = activeTab.indexKey === this.indexKey;
            });
        });
    }
    activeTabUnsubscribe() {
        this.activeTabSubscription.unsubscribe();
    }
}
TabPaneComponent.ɵfac = function TabPaneComponent_Factory(t) { return new (t || TabPaneComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TabsetService)); };
TabPaneComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabPaneComponent, selectors: [["c-tab-pane"]], hostVars: 8, hostBindings: function TabPaneComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("tab-pane", ctx._tabPane)("active", ctx._tabActive)("show", ctx._tabShow)("fade", ctx._tabFade);
    } }, inputs: { active: "active" }, ngContentSelectors: _c0, decls: 1, vars: 1, consts: [[4, "ngIf"]], template: function TabPaneComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, TabPaneComponent_ng_content_0_Template, 1, 0, "ng-content", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.active);
    } }, directives: [ɵngcc2.NgIf], styles: [""] });
TabPaneComponent.ctorParameters = () => [
    { type: TabsetService }
];
TabPaneComponent.propDecorators = {
    active: [{ type: Input }],
    _tabPane: [{ type: HostBinding, args: ['class.tab-pane',] }],
    _tabActive: [{ type: HostBinding, args: ['class.active',] }],
    _tabShow: [{ type: HostBinding, args: ['class.show',] }],
    _tabFade: [{ type: HostBinding, args: ['class.fade',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabPaneComponent, [{
        type: Component,
        args: [{
                selector: 'c-tab-pane',
                template: "<ng-content *ngIf=\"active\"></ng-content>\n\n",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc1.TabsetService }]; }, { _tabPane: [{
            type: HostBinding,
            args: ['class.tab-pane']
        }], _tabActive: [{
            type: HostBinding,
            args: ['class.active']
        }], _tabShow: [{
            type: HostBinding,
            args: ['class.show']
        }], _tabFade: [{
            type: HostBinding,
            args: ['class.fade']
        }], active: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLXBhbmUuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL3RhYnNldC90YWItcGFuZS90YWItcGFuZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFzQixTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBb0IsTUFBTSxlQUFlLENBQUM7QUFFcEcsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLG1CQUFtQixDQUFDOzs7Ozs7Ozs7QUFPaEQsTUFBTSxPQUFPLGdCQUFnQjtBQUFJLElBb0IvQixZQUNVLGFBQTRCO0FBQ3BDLFFBRFEsa0JBQWEsR0FBYixhQUFhLENBQWU7QUFDdkMsUUFWUSxTQUFJLEdBQUcsSUFBSSxDQUFDO0FBQ3BCLFFBRWdDLGFBQVEsR0FBRyxJQUFJLENBQUM7QUFDaEQsUUFBOEIsZUFBVSxHQUFHLElBQUksQ0FBQztBQUNoRCxRQUE0QixhQUFRLEdBQUcsS0FBSyxDQUFDO0FBQzdDLFFBQTRCLGFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO0FBRWxELElBRU0sQ0FBQztBQUVQLElBdEJFLElBQ0ksTUFBTSxDQUFDLE1BQWU7QUFDM0IsUUFBRyxJQUFJLENBQUMsVUFBVSxHQUFHLE1BQU0sQ0FBQztBQUM1QixRQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO0FBQzFCLElBQUMsQ0FBQztBQUNGLElBQUMsSUFBSSxNQUFNO0FBQ1gsUUFBRyxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7QUFDMUIsSUFBQyxDQUFDO0FBRUgsSUFhRSxRQUFRO0FBQ1QsUUFBRyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztBQUM3QixJQUFDLENBQUM7QUFFSCxJQUFFLFdBQVc7QUFDWixRQUFHLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO0FBQy9CLElBQUMsQ0FBQztBQUVILElBQVUsa0JBQWtCO0FBQzNCLFFBQUcsSUFBSSxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFO0FBQ3RGLFlBQUssVUFBVSxDQUFDLEdBQUcsRUFBRTtBQUNyQixnQkFBTyxJQUFJLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQyxRQUFRLEtBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQztBQUMxRCxZQUFLLENBQUMsQ0FBQyxDQUFDO0FBQ1IsUUFBRyxDQUFDLENBQUMsQ0FBQztBQUNOLElBQUMsQ0FBQztBQUVILElBQVUsb0JBQW9CO0FBQzdCLFFBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQzVDLElBQUMsQ0FBQztBQUNGOzhDQWhEQSxTQUFTLFNBQUMsbUJBQ1QsUUFBUSxFQUFFLFlBQVksbUJBQ3RCO2dDQUF3Qyw4Q0FFekM7Ozs7Ozs7b0RBQ0s7QUFBRTtBQUEyQyxZQVAzQyxhQUFhO0FBQUk7QUFBSTtBQUcxQixxQkFNQSxLQUFLO0FBQ0wsdUJBWUEsV0FBVyxTQUFDLGdCQUFnQjtBQUFRLHlCQUNwQyxXQUFXLFNBQUMsY0FBYztBQUFRLHVCQUNsQyxXQUFXLFNBQUMsWUFBWTtBQUFRLHVCQUNoQyxXQUFXLFNBQUMsWUFBWTtBQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTNCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUFBLEFBQUEsQUFvQkEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVRBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUlBLEFBQUEsQUFwQkEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQWVBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBL0NBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBTkEsQUFBQSxBQVNBLEFBQUEsQUFhQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QWZ0ZXJDb250ZW50Q2hlY2tlZCwgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7U3Vic2NyaXB0aW9ufSBmcm9tICdyeGpzJztcbmltcG9ydCB7VGFic2V0U2VydmljZX0gZnJvbSAnLi4vdGFic2V0LnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjLXRhYi1wYW5lJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhYi1wYW5lLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdGFiLXBhbmUuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUYWJQYW5lQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95LCBPbkluaXQge1xuXG4gIEBJbnB1dCgpXG4gIHNldCBhY3RpdmUoYWN0aXZlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fdGFiQWN0aXZlID0gYWN0aXZlO1xuICAgIHRoaXMuX3RhYlNob3cgPSBhY3RpdmU7XG4gIH1cbiAgZ2V0IGFjdGl2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fdGFiQWN0aXZlO1xuICB9XG5cbiAgcHVibGljIGluZGV4S2V5OiBudW1iZXI7XG4gIHB1YmxpYyBmYWRlID0gdHJ1ZTtcbiAgcHJpdmF0ZSBhY3RpdmVUYWJTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnRhYi1wYW5lJykgX3RhYlBhbmUgPSB0cnVlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFjdGl2ZScpIF90YWJBY3RpdmUgPSB0cnVlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNob3cnKSBfdGFiU2hvdyA9IGZhbHNlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmZhZGUnKSBfdGFiRmFkZSA9IHRoaXMuZmFkZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHRhYnNldFNlcnZpY2U6IFRhYnNldFNlcnZpY2VcbiAgKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmFjdGl2ZVRhYlN1YnNjcmliZSgpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5hY3RpdmVUYWJVbnN1YnNjcmliZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBhY3RpdmVUYWJTdWJzY3JpYmUoKSB7XG4gICAgdGhpcy5hY3RpdmVUYWJTdWJzY3JpcHRpb24gPSB0aGlzLnRhYnNldFNlcnZpY2UuYWN0aXZlVGFiJC5zdWJzY3JpYmUoKGFjdGl2ZVRhYikgPT4ge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuYWN0aXZlID0gYWN0aXZlVGFiLmluZGV4S2V5ID09PSB0aGlzLmluZGV4S2V5O1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGFjdGl2ZVRhYlVuc3Vic2NyaWJlKCkge1xuICAgIHRoaXMuYWN0aXZlVGFiU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gIH1cbn1cbiJdfQ==