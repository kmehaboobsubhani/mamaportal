import { Component, ContentChildren, HostBinding } from '@angular/core';
import { TabPaneComponent } from '../tab-pane/tab-pane.component';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class TabContentComponent {
    constructor() {
        this._hasPanes = false;
        this._tabContent = true;
    }
    set hasPanes(hasPanes) {
        this._hasPanes = hasPanes;
    }
    get hasPanes() {
        return this._hasPanes ? null : true;
    }
    ngOnInit() {
    }
    ngAfterContentChecked() {
        this.hasPanes = this.panes.length > 0;
    }
}
TabContentComponent.ɵfac = function TabContentComponent_Factory(t) { return new (t || TabContentComponent)(); };
TabContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabContentComponent, selectors: [["c-tab-content"]], contentQueries: function TabContentComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TabPaneComponent, 0);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panes = _t);
    } }, hostVars: 3, hostBindings: function TabContentComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("hidden", ctx.hasPanes);
        ɵngcc0.ɵɵclassProp("tab-content", ctx._tabContent);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function TabContentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{display:block}"] });
TabContentComponent.ctorParameters = () => [];
TabContentComponent.propDecorators = {
    _tabContent: [{ type: HostBinding, args: ['class.tab-content',] }],
    hasPanes: [{ type: HostBinding, args: ['attr.hidden',] }],
    panes: [{ type: ContentChildren, args: [TabPaneComponent,] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabContentComponent, [{
        type: Component,
        args: [{
                selector: 'c-tab-content',
                template: "<ng-content></ng-content>\n",
                styles: [":host{display:block}"]
            }]
    }], function () { return []; }, { _tabContent: [{
            type: HostBinding,
            args: ['class.tab-content']
        }], hasPanes: [{
            type: HostBinding,
            args: ['attr.hidden']
        }], panes: [{
            type: ContentChildren,
            args: [TabPaneComponent]
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWNvbnRlbnQuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL3RhYnNldC90YWItY29udGVudC90YWItY29udGVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF3QyxTQUFTLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBb0IsTUFBTSxlQUFlLENBQUM7QUFDaEksT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sZ0NBQWdDLENBQUM7Ozs7QUFPaEUsTUFBTSxPQUFPLG1CQUFtQjtBQUFJLElBY2xDO0FBQWlCLFFBWlQsY0FBUyxHQUFHLEtBQUssQ0FBQztBQUU1QixRQUFvQyxnQkFBVyxHQUFHLElBQUksQ0FBQztBQUN0RCxJQVNpQixDQUFDO0FBRW5CLElBWEUsSUFDVyxRQUFRLENBQUMsUUFBaUI7QUFDdEMsUUFBRyxJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztBQUM3QixJQUFDLENBQUM7QUFDRixJQUFDLElBQVcsUUFBUTtBQUNwQixRQUFHLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFDdkMsSUFBQyxDQUFDO0FBQ0YsSUFJQyxRQUFRO0FBQ1QsSUFBQyxDQUFDO0FBRUgsSUFBRSxxQkFBcUI7QUFBTSxRQUN6QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztBQUN6QyxJQUNDLENBQUM7QUFFSDtpREE3QkMsU0FBUyxTQUFDLG1CQUNULFFBQVEsRUFBRSxlQUFlO2lCQUN6Qix1Q0FBMkMsa0VBRTVDOzs7Ozs7Ozs7Ozt3REFDSztBQUFFO0FBQWdEO0FBRW5DLDBCQUVsQixXQUFXLFNBQUMsbUJBQW1CO0FBQVEsdUJBQ3ZDLFdBQVcsU0FBQyxhQUFhO0FBQ3RCLG9CQU1ILGVBQWUsU0FBQyxnQkFBZ0I7QUFBTzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFPQSxBQUFBLEFBQUEsQUFBQSxBQWNBLEFBWkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFVQSxBQUFBLEFBVEEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBS0EsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBM0JBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQU9BLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBZnRlckNvbnRlbnRDaGVja2VkLCBBZnRlckNvbnRlbnRJbml0LCBDb21wb25lbnQsIENvbnRlbnRDaGlsZHJlbiwgSG9zdEJpbmRpbmcsIE9uSW5pdCwgUXVlcnlMaXN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VGFiUGFuZUNvbXBvbmVudH0gZnJvbSAnLi4vdGFiLXBhbmUvdGFiLXBhbmUuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYy10YWItY29udGVudCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90YWItY29udGVudC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RhYi1jb250ZW50LmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGFiQ29udGVudENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJDb250ZW50Q2hlY2tlZCB7XG5cbiAgcHJpdmF0ZSBfaGFzUGFuZXMgPSBmYWxzZTtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnRhYi1jb250ZW50JykgX3RhYkNvbnRlbnQgPSB0cnVlO1xuICBASG9zdEJpbmRpbmcoJ2F0dHIuaGlkZGVuJylcbiAgcHVibGljIHNldCBoYXNQYW5lcyhoYXNQYW5lczogYm9vbGVhbikge1xuICAgIHRoaXMuX2hhc1BhbmVzID0gaGFzUGFuZXM7XG4gIH1cbiAgcHVibGljIGdldCBoYXNQYW5lcygpIHtcbiAgICByZXR1cm4gdGhpcy5faGFzUGFuZXMgPyBudWxsIDogdHJ1ZTtcbiAgfVxuICBAQ29udGVudENoaWxkcmVuKFRhYlBhbmVDb21wb25lbnQpIHBhbmVzOiBRdWVyeUxpc3Q8VGFiUGFuZUNvbXBvbmVudD47XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50Q2hlY2tlZCgpOiB2b2lkIHtcbiAgICB0aGlzLmhhc1BhbmVzID0gdGhpcy5wYW5lcy5sZW5ndGggPiAwO1xuICAgIC8vIGNvbnNvbGUubG9nKCduZ0FmdGVyQ29udGVudEluaXQgcGFuZXMnLCB0aGlzLnBhbmVzKTtcbiAgfVxuXG59XG4iXX0=