import { Component, HostBinding, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class TabListComponent {
    constructor() {
        this._navClass = true;
    }
    set variant(variant) {
        this._navTabsClass = variant !== 'pills';
        this._navPillsClass = variant === 'pills';
    }
    set vertical(vertical) {
        this._navFlexColumn = !!vertical;
        this._navH100 = !!vertical;
    }
    set fill(fill) {
        this._navFill = !!fill;
    }
    set justified(justified) {
        this._navJustified = !!justified;
    }
}
TabListComponent.ɵfac = function TabListComponent_Factory(t) { return new (t || TabListComponent)(); };
TabListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabListComponent, selectors: [["c-tablist"]], hostVars: 14, hostBindings: function TabListComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("nav", ctx._navClass)("nav-tabs", ctx._navTabsClass)("nav-pills", ctx._navPillsClass)("flex-column", ctx._navFlexColumn)("h-100", ctx._navH100)("nav-fill", ctx._navFill)("nav-justified", ctx._navJustified);
    } }, inputs: { variant: "variant", vertical: "vertical", fill: "fill", justified: "justified" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function TabListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
TabListComponent.ctorParameters = () => [];
TabListComponent.propDecorators = {
    variant: [{ type: Input }],
    vertical: [{ type: Input }],
    fill: [{ type: Input }],
    justified: [{ type: Input }],
    _navClass: [{ type: HostBinding, args: ['class.nav',] }],
    _navTabsClass: [{ type: HostBinding, args: ['class.nav-tabs',] }],
    _navPillsClass: [{ type: HostBinding, args: ['class.nav-pills',] }],
    _navFill: [{ type: HostBinding, args: ['class.nav-fill',] }],
    _navJustified: [{ type: HostBinding, args: ['class.nav-justified',] }],
    _navFlexColumn: [{ type: HostBinding, args: ['class.flex-column',] }],
    _navH100: [{ type: HostBinding, args: ['class.h-100',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabListComponent, [{
        type: Component,
        args: [{
                selector: 'c-tablist',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return []; }, { _navClass: [{
            type: HostBinding,
            args: ['class.nav']
        }], variant: [{
            type: Input
        }], _navTabsClass: [{
            type: HostBinding,
            args: ['class.nav-tabs']
        }], _navPillsClass: [{
            type: HostBinding,
            args: ['class.nav-pills']
        }], vertical: [{
            type: Input
        }], _navFlexColumn: [{
            type: HostBinding,
            args: ['class.flex-column']
        }], _navH100: [{
            type: HostBinding,
            args: ['class.h-100']
        }], fill: [{
            type: Input
        }], _navFill: [{
            type: HostBinding,
            args: ['class.nav-fill']
        }], justified: [{
            type: Input
        }], _navJustified: [{
            type: HostBinding,
            args: ['class.nav-justified']
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL3RhYnNldC90YWItbGlzdC90YWItbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDOzs7O0FBTzVELE1BQU0sT0FBTyxnQkFBZ0I7QUFFN0IsSUE4QkU7QUFDRSxRQVR3QixjQUFTLEdBQUcsSUFBSSxDQUFDO0FBQzVDLElBUUssQ0FBQztBQUNOLElBaENDLElBQ0ksT0FBTyxDQUFDLE9BQXlCO0FBQ3RDLFFBQUcsSUFBSSxDQUFDLGFBQWEsR0FBRyxPQUFPLEtBQUssT0FBTyxDQUFDO0FBQzVDLFFBQUcsSUFBSSxDQUFDLGNBQWMsR0FBRyxPQUFPLEtBQUssT0FBTyxDQUFDO0FBQzdDLElBQUMsQ0FBQztBQUVILElBQUUsSUFDSSxRQUFRLENBQUMsUUFBaUI7QUFDL0IsUUFBRyxJQUFJLENBQUMsY0FBYyxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUM7QUFDcEMsUUFBRyxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUM7QUFDOUIsSUFBQyxDQUFDO0FBRUgsSUFBRSxJQUNJLElBQUksQ0FBQyxJQUFhO0FBQ3ZCLFFBQUcsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQzFCLElBQUMsQ0FBQztBQUVILElBQUUsSUFDSSxTQUFTLENBQUMsU0FBa0I7QUFDakMsUUFBRyxJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQUM7QUFDcEMsSUFBQyxDQUFDO0FBRUg7OENBN0JDLFNBQVMsU0FBQyxtQkFDVCxRQUFRLEVBQUU7QUFBVyxtQkFDckIsdUNBQXdDLDhDQUV6Qzs7Ozs7eUJBQ0s7QUFBRTtBQUdDO0FBQ04sc0JBRkEsS0FBSztBQUNMLHVCQUtBLEtBQUs7QUFDTCxtQkFLQSxLQUFLO0FBQ0wsd0JBSUEsS0FBSztBQUNMLHdCQUlBLFdBQVcsU0FBQyxXQUFXO0FBQVEsNEJBQy9CLFdBQVcsU0FBQyxnQkFBZ0I7QUFBUSw2QkFDcEMsV0FBVyxTQUFDLGlCQUFpQjtBQUFRLHVCQUNyQyxXQUFXLFNBQUMsZ0JBQWdCO0FBQVEsNEJBQ3BDLFdBQVcsU0FBQyxxQkFBcUI7QUFBUSw2QkFDekMsV0FBVyxTQUFDLG1CQUFtQjtBQUFRLHVCQUN2QyxXQUFXLFNBQUMsYUFBYTtBQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXJDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFPQSxBQUFBLEFBQUEsQUFBQSxBQWdDQSxBQVJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFTQSxBQUFBLEFBL0JBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBM0JBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBR0EsQUFBQSxBQU1BLEFBQUEsQUFNQSxBQUFBLEFBS0EsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2MtdGFibGlzdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90YWItbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RhYi1saXN0LmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGFiTGlzdENvbXBvbmVudCB7XG5cbiAgQElucHV0KClcbiAgc2V0IHZhcmlhbnQodmFyaWFudDogJ3RhYnMnIHwgJ3BpbGxzJykge1xuICAgIHRoaXMuX25hdlRhYnNDbGFzcyA9IHZhcmlhbnQgIT09ICdwaWxscyc7XG4gICAgdGhpcy5fbmF2UGlsbHNDbGFzcyA9IHZhcmlhbnQgPT09ICdwaWxscyc7XG4gIH1cblxuICBASW5wdXQoKVxuICBzZXQgdmVydGljYWwodmVydGljYWw6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9uYXZGbGV4Q29sdW1uID0gISF2ZXJ0aWNhbDtcbiAgICB0aGlzLl9uYXZIMTAwID0gISF2ZXJ0aWNhbDtcbiAgfVxuXG4gIEBJbnB1dCgpXG4gIHNldCBmaWxsKGZpbGw6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9uYXZGaWxsID0gISFmaWxsO1xuICB9XG5cbiAgQElucHV0KClcbiAgc2V0IGp1c3RpZmllZChqdXN0aWZpZWQ6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9uYXZKdXN0aWZpZWQgPSAhIWp1c3RpZmllZDtcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3MubmF2JykgX25hdkNsYXNzID0gdHJ1ZTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5uYXYtdGFicycpIF9uYXZUYWJzQ2xhc3M7XG4gIEBIb3N0QmluZGluZygnY2xhc3MubmF2LXBpbGxzJykgX25hdlBpbGxzQ2xhc3M7XG4gIEBIb3N0QmluZGluZygnY2xhc3MubmF2LWZpbGwnKSBfbmF2RmlsbDtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5uYXYtanVzdGlmaWVkJykgX25hdkp1c3RpZmllZDtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5mbGV4LWNvbHVtbicpIF9uYXZGbGV4Q29sdW1uO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmgtMTAwJykgX25hdkgxMDA7XG5cbiAgY29uc3RydWN0b3IoXG4gICkgeyB9XG59XG4iXX0=