import { Component, Input } from '@angular/core';
import { SidebarService } from '../../sidebar/sidebar.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../sidebar/sidebar.service';
import * as ɵngcc2 from '@angular/router';
import * as ɵngcc3 from '@angular/common';

function HeaderBrandComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function HeaderBrandComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 1);
} }
const _c0 = ["*", "*"];
export class HeaderBrandComponent {
    constructor(sidebarService) {
        this.sidebarService = sidebarService;
        this.routerLink = '';
        this.minimized = false;
    }
    ngOnInit() {
        this.stateToggleSubscribe();
    }
    ngOnDestroy() {
        this.stateToggleSubscribe(false);
    }
    minimize(force) {
        this.minimized = (force === 'toggle') ? !this.minimized : force;
    }
    stateToggleSubscribe(subscribe = true) {
        if (subscribe) {
            this.stateToggleSubscription = this.sidebarService.sidebarState$.subscribe((state) => {
                if (!state.id) {
                    if ('minimize' in state) {
                        this.minimize(state.minimize);
                    }
                }
            });
        }
        else {
            this.stateToggleSubscription.unsubscribe();
        }
    }
}
HeaderBrandComponent.ɵfac = function HeaderBrandComponent_Factory(t) { return new (t || HeaderBrandComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SidebarService)); };
HeaderBrandComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderBrandComponent, selectors: [["c-header-brand"]], inputs: { routerLink: "routerLink", minimized: "minimized" }, ngContentSelectors: _c0, decls: 3, vars: 3, consts: [["role", "button", 1, "c-header-brand", 3, "routerLink"], [3, "ngIf"]], template: function HeaderBrandComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵelementStart(0, "a", 0);
        ɵngcc0.ɵɵtemplate(1, HeaderBrandComponent_ng_template_1_Template, 1, 0, "ng-template", 1);
        ɵngcc0.ɵɵtemplate(2, HeaderBrandComponent_ng_template_2_Template, 1, 0, "ng-template", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("routerLink", ctx.routerLink);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.minimized);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.minimized);
    } }, directives: [ɵngcc2.RouterLinkWithHref, ɵngcc3.NgIf], encapsulation: 2 });
HeaderBrandComponent.ctorParameters = () => [
    { type: SidebarService }
];
HeaderBrandComponent.propDecorators = {
    routerLink: [{ type: Input }],
    minimized: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderBrandComponent, [{
        type: Component,
        args: [{
                selector: 'c-header-brand',
                template: "<a class=\"c-header-brand\" [routerLink]=\"routerLink\" role=\"button\">\r\n  <ng-template [ngIf]=\"minimized\">\r\n    <ng-content></ng-content>\r\n  </ng-template>\r\n  <ng-template [ngIf]=\"!minimized\">\r\n    <ng-content></ng-content>\r\n  </ng-template>\r\n</a>\r\n\r\n"
            }]
    }], function () { return [{ type: ɵngcc1.SidebarService }]; }, { routerLink: [{
            type: Input
        }], minimized: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLWJyYW5kLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9sYXlvdXQvaGVhZGVyL2hlYWRlci1icmFuZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBZSxLQUFLLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBRy9FLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQzs7Ozs7Ozs7Ozs7OztBQU03RCxNQUFNLE9BQU8sb0JBQW9CO0FBQUksSUFRbkMsWUFDVSxjQUE4QjtBQUN2QyxRQURTLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtBQUMxQyxRQVJXLGVBQVUsR0FBbUIsRUFBRSxDQUFDO0FBQzFDLFFBQVUsY0FBUyxHQUFHLEtBQUssQ0FBQztBQUU3QixJQUtNLENBQUM7QUFFUCxJQUFFLFFBQVE7QUFBTSxRQUNaLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO0FBQy9CLElBQUMsQ0FBQztBQUVILElBQUUsV0FBVztBQUFNLFFBQ2YsSUFBSSxDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3BDLElBQUMsQ0FBQztBQUVILElBQUUsUUFBUSxDQUFDLEtBQTBCO0FBQUssUUFDdEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFDbkUsSUFBQyxDQUFDO0FBRUgsSUFBVSxvQkFBb0IsQ0FBQyxZQUFxQixJQUFJO0FBQ3ZELFFBQ0csSUFBSSxTQUFTLEVBQUU7QUFDbEIsWUFBSyxJQUFJLENBQUMsdUJBQXVCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7QUFDMUYsZ0JBQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUU7QUFDdEIsb0JBQVMsSUFBSSxVQUFVLElBQUksS0FBSyxFQUFFO0FBQ2xDLHdCQUFXLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3pDLHFCQUFVO0FBQ1YsaUJBQVE7QUFDUixZQUFLLENBQUMsQ0FBQyxDQUFDO0FBQ1IsU0FBSTtBQUFFLGFBQUk7QUFDVixZQUFLLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNoRCxTQUFJO0FBQ0osSUFBQyxDQUFDO0FBQ0Y7a0RBMUNBLFNBQVMsU0FBQyxtQkFDVCxRQUFRLEVBQUUsZ0JBQWdCLG1CQUMxQjtnUUFBNEMsZUFDN0M7Ozs7Ozs7Ozs7OzttRkFDSztBQUFFO0FBQStDLFlBTi9DLGNBQWM7QUFBSTtBQUFJO0FBRXRCLHlCQU1MLEtBQUs7QUFBTSx3QkFDWCxLQUFLO0FBQUs7Ozs7Ozs7Ozs7OztBQVpBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQU1BLEFBQUEsQUFBQSxBQUFBLEFBUUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVBBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBekNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBTEEsQUFBQSxBQVFBLEFBQUEsQUFDQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7U2lkZWJhclNlcnZpY2V9IGZyb20gJy4uLy4uL3NpZGViYXIvc2lkZWJhci5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYy1oZWFkZXItYnJhbmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vaGVhZGVyLWJyYW5kLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBIZWFkZXJCcmFuZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcblxuICBASW5wdXQoKSByb3V0ZXJMaW5rOiBhbnlbXSB8IHN0cmluZyA9ICcnO1xuICBASW5wdXQoKSBtaW5pbWl6ZWQgPSBmYWxzZTtcblxuICBoZWFkZXJCcmFuZEltZzogYm9vbGVhbjtcbiAgcHJpdmF0ZSBzdGF0ZVRvZ2dsZVN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgc2lkZWJhclNlcnZpY2U6IFNpZGViYXJTZXJ2aWNlLFxuICApIHsgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuc3RhdGVUb2dnbGVTdWJzY3JpYmUoKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuc3RhdGVUb2dnbGVTdWJzY3JpYmUoZmFsc2UpO1xuICB9XG5cbiAgbWluaW1pemUoZm9yY2U/OiBib29sZWFuIHwgJ3RvZ2dsZScpOiB2b2lkIHtcbiAgICB0aGlzLm1pbmltaXplZCA9IChmb3JjZSA9PT0gJ3RvZ2dsZScpID8gIXRoaXMubWluaW1pemVkIDogZm9yY2U7XG4gIH1cblxuICBwcml2YXRlIHN0YXRlVG9nZ2xlU3Vic2NyaWJlKHN1YnNjcmliZTogYm9vbGVhbiA9IHRydWUpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnc3RhdGVUb2dnbGVTdWJzY3JpYmUnLCBzdWJzY3JpYmUpO1xuICAgIGlmIChzdWJzY3JpYmUpIHtcbiAgICAgIHRoaXMuc3RhdGVUb2dnbGVTdWJzY3JpcHRpb24gPSB0aGlzLnNpZGViYXJTZXJ2aWNlLnNpZGViYXJTdGF0ZSQuc3Vic2NyaWJlKChzdGF0ZSkgPT4ge1xuICAgICAgICBpZiAoIXN0YXRlLmlkKSB7XG4gICAgICAgICAgaWYgKCdtaW5pbWl6ZScgaW4gc3RhdGUpIHtcbiAgICAgICAgICAgIHRoaXMubWluaW1pemUoc3RhdGUubWluaW1pemUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc3RhdGVUb2dnbGVTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==