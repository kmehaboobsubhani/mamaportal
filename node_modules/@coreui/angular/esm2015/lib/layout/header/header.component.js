import { Component, Input, HostBinding } from '@angular/core';
import classNames from 'classnames';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class HeaderComponent {
    constructor() {
        this.colorScheme = 'light';
        this.fixed = true;
        this.role = 'header';
    }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const classes = classNames(this.ngClass, this.class, {
            'c-header': true,
            'c-header-fixed': this.fixed,
        }, `c-header-${this.colorScheme}`);
        return classes;
    }
}
HeaderComponent.ɵfac = function HeaderComponent_Factory(t) { return new (t || HeaderComponent)(); };
HeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderComponent, selectors: [["c-header"], ["", "c-header", ""]], hostVars: 3, hostBindings: function HeaderComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { colorScheme: "colorScheme", fixed: "fixed", class: "class", ngClass: "ngClass" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function HeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
HeaderComponent.ctorParameters = () => [];
HeaderComponent.propDecorators = {
    colorScheme: [{ type: Input }],
    fixed: [{ type: Input }],
    class: [{ type: Input }],
    ngClass: [{ type: Input }],
    role: [{ type: HostBinding, args: ['attr.role',] }],
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderComponent, [{
        type: Component,
        args: [{
                selector: 'c-header, [c-header]',
                template: `<ng-content></ng-content>`,
                styles: [""]
            }]
    }], function () { return []; }, { colorScheme: [{
            type: Input
        }], fixed: [{
            type: Input
        }], role: [{
            type: HostBinding,
            args: ['attr.role']
        }], getClasses: [{
            type: HostBinding,
            args: ['class']
        }], class: [{
            type: Input
        }], ngClass: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9sYXlvdXQvaGVhZGVyL2hlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sVUFBVSxNQUFNLFlBQVksQ0FBQzs7OztBQU9wQyxNQUFNLE9BQU8sZUFBZTtBQUM1QixJQTJCRTtBQUNDLFFBM0JRLGdCQUFXLEdBQUcsT0FBTyxDQUFDO0FBQ2pDLFFBQVcsVUFBSyxHQUFHLElBQUksQ0FBQztBQUN4QixRQUc0QixTQUFJLEdBQUcsUUFBUSxDQUFDO0FBQzVDLElBcUJLLENBQUM7QUFDTixJQXJCRSxJQUNJLFVBQVU7QUFDaEIsUUFBSSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7QUFDNUIsSUFBRSxDQUFDO0FBQ0gsSUFDRSxJQUFJLFdBQVc7QUFDakIsUUFDSSxNQUFNLE9BQU8sR0FBRyxVQUFVLENBQ3hCLElBQUksQ0FBQyxPQUFPLEVBQ1osSUFBSSxDQUFDLEtBQUssRUFDVjtBQUNOLFlBQVEsVUFBVSxFQUFFLElBQUk7QUFDeEIsWUFBUSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsS0FBSztBQUNwQyxTQUFPLEVBQ0QsWUFBWSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQy9CLENBQUM7QUFDTixRQUFJLE9BQU8sT0FBTyxDQUFDO0FBQ25CLElBQUUsQ0FBQztBQUNIOzZDQWhDQyxTQUFTLFNBQUMsbUJBQ1QsUUFBUSxFQUFFO2FBQXNCLG1CQUNoQyxRQUFRLEVBQUUsMkJBQTJCLDhDQUV0Qzs7Ozs7O3lCQUNJO0FBQUU7QUFFVTtBQUNDLDBCQURmLEtBQUs7QUFBTSxvQkFDWCxLQUFLO0FBQU0sb0JBQ1gsS0FBSztBQUFNLHNCQUNYLEtBQUs7QUFBTSxtQkFFWCxXQUFXLFNBQUMsV0FBVztBQUFRLHlCQUUvQixXQUFXLFNBQUMsT0FBTztBQUNsQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFsQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUFBLEFBQUEsQUE0QkEsQUExQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFJQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBc0JBLEFBQUEsQUFwQkEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQS9CQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFHQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgSG9zdEJpbmRpbmd9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYy1oZWFkZXIsIFtjLWhlYWRlcl0nLFxyXG4gIHRlbXBsYXRlOiBgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PmAsXHJcbiAgc3R5bGVVcmxzOiBbJy4vaGVhZGVyLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEhlYWRlckNvbXBvbmVudCB7XHJcblxyXG4gIEBJbnB1dCgpIGNvbG9yU2NoZW1lID0gJ2xpZ2h0JztcclxuICBASW5wdXQoKSBmaXhlZCA9IHRydWU7XHJcbiAgQElucHV0KCkgY2xhc3M6IHN0cmluZztcclxuICBASW5wdXQoKSBuZ0NsYXNzOiBzdHJpbmcgfCBzdHJpbmdbXSB8IFNldDxzdHJpbmc+IHwgeyBba2xhc3M6IHN0cmluZ106IGFueTsgfTtcclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLnJvbGUnKSByb2xlID0gJ2hlYWRlcic7XHJcblxyXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKVxyXG4gIGdldCBnZXRDbGFzc2VzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuaG9zdENsYXNzZXM7XHJcbiAgfVxyXG5cclxuICBnZXQgaG9zdENsYXNzZXMoKSB7XHJcblxyXG4gICAgY29uc3QgY2xhc3NlcyA9IGNsYXNzTmFtZXMoXHJcbiAgICAgIHRoaXMubmdDbGFzcyxcclxuICAgICAgdGhpcy5jbGFzcyxcclxuICAgICAge1xyXG4gICAgICAgICdjLWhlYWRlcic6IHRydWUsXHJcbiAgICAgICAgJ2MtaGVhZGVyLWZpeGVkJzogdGhpcy5maXhlZCxcclxuICAgICAgfSxcclxuICAgICAgYGMtaGVhZGVyLSR7dGhpcy5jb2xvclNjaGVtZX1gLFxyXG4gICAgKTtcclxuICAgIHJldHVybiBjbGFzc2VzO1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgKSB7fVxyXG59XHJcbiJdfQ==