import { Component, HostBinding, Input } from '@angular/core';
import classNames from 'classnames';
export class WidgetProgressIconComponent {
    constructor() {
        this.value = 25;
    }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const classes = classNames({
            card: true,
            'text-white': this.inverse,
            [`bg-${this.color}`]: this.inverse && !!this.color
        });
        return classes;
    }
    ngOnInit() {
    }
}
WidgetProgressIconComponent.decorators = [
    { type: Component, args: [{
                selector: 'c-widget-progress-icon',
                template: "<div class=\"card-body\">\n  <div class=\"h1 text-muted text-right mb-4\">\n    <ng-content></ng-content>\n  </div>\n  <div *ngIf=\"!!header\" class=\"h4 mb-0\">{{header}}</div>\n  <small *ngIf=\"!!text\" class=\"text-muted text-uppercase font-weight-bold\">\n    {{text}}\n  </small>\n<!-- todo  <ng-content slot=\"progress\"></ng-content>-->\n    <c-progress size=\"xs\" [class]=\"{'my-3': true, 'mb-0': true, 'progress-white': inverse }\">\n      <c-progress-bar\n        [color]=\"!inverse ? color : ''\"\n        [value]=\"value\"\n        >\n      </c-progress-bar>\n    </c-progress>\n</div>\n",
                styles: [""]
            },] }
];
WidgetProgressIconComponent.ctorParameters = () => [];
WidgetProgressIconComponent.propDecorators = {
    color: [{ type: Input }],
    header: [{ type: Input }],
    text: [{ type: Input }],
    inverse: [{ type: Input }],
    value: [{ type: Input }],
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0LXByb2dyZXNzLWljb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi93aWRnZXQvd2lkZ2V0LXByb2dyZXNzLWljb24vd2lkZ2V0LXByb2dyZXNzLWljb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUN0RSxPQUFPLFVBQVUsTUFBTSxZQUFZLENBQUM7QUFPcEMsTUFBTSxPQUFPLDJCQUEyQjtJQXdCdEM7UUFsQlMsVUFBSyxHQUFHLEVBQUUsQ0FBQztJQWtCSixDQUFDO0lBaEJqQixJQUNJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQztJQUVELElBQUksV0FBVztRQUNiLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FDeEI7WUFDRSxJQUFJLEVBQUcsSUFBSTtZQUNYLFlBQVksRUFBRSxJQUFJLENBQUMsT0FBTztZQUMxQixDQUFDLE1BQU0sSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLE9BQU8sSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUs7U0FDbkQsQ0FDRixDQUFDO1FBQ0YsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQztJQUlELFFBQVE7SUFDUixDQUFDOzs7WUFoQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLG9tQkFBb0Q7O2FBRXJEOzs7O29CQUdFLEtBQUs7cUJBQ0wsS0FBSzttQkFDTCxLQUFLO3NCQUNMLEtBQUs7b0JBQ0wsS0FBSzt5QkFFTCxXQUFXLFNBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2Mtd2lkZ2V0LXByb2dyZXNzLWljb24nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi93aWRnZXQtcHJvZ3Jlc3MtaWNvbi5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vd2lkZ2V0LXByb2dyZXNzLWljb24uY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgV2lkZ2V0UHJvZ3Jlc3NJY29uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQElucHV0KCkgY29sb3I6IHN0cmluZztcclxuICBASW5wdXQoKSBoZWFkZXI6IHN0cmluZztcclxuICBASW5wdXQoKSB0ZXh0OiBzdHJpbmc7XHJcbiAgQElucHV0KCkgaW52ZXJzZTogYm9vbGVhbjtcclxuICBASW5wdXQoKSB2YWx1ZSA9IDI1O1xyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcclxuICBnZXQgZ2V0Q2xhc3NlcygpIHtcclxuICAgIHJldHVybiB0aGlzLmhvc3RDbGFzc2VzO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGhvc3RDbGFzc2VzKCkge1xyXG4gICAgY29uc3QgY2xhc3NlcyA9IGNsYXNzTmFtZXMoXHJcbiAgICAgIHtcclxuICAgICAgICBjYXJkIDogdHJ1ZSxcclxuICAgICAgICAndGV4dC13aGl0ZSc6IHRoaXMuaW52ZXJzZSxcclxuICAgICAgICBbYGJnLSR7dGhpcy5jb2xvcn1gXTogdGhpcy5pbnZlcnNlICYmICEhdGhpcy5jb2xvclxyXG4gICAgICB9LFxyXG4gICAgKTtcclxuICAgIHJldHVybiBjbGFzc2VzO1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=