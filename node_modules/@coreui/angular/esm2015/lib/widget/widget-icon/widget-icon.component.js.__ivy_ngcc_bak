import { Component, HostBinding, Input } from '@angular/core';
import classNames from 'classnames';
export class WidgetIconComponent {
    constructor() {
        this.iconPadding = true;
    }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const classes = classNames({
            card: true,
        });
        return classes;
    }
    ngOnInit() {
    }
    get cardBodyClasses() {
        const classes = classNames({
            'card-body': true,
            'd-flex': true,
            'align-items-center': true,
            [`p-${this.iconPadding ? '3' : '0'}`]: true,
        });
        return classes;
    }
    get bodySlotClasses() {
        const classes = classNames({
            'mfe-3': true,
            'text-white': true,
            [`bg-${this.color}`]: this.color,
            [`p-${this.iconPadding ? '3' : '4'}`]: true,
        });
        return classes;
    }
    get headerClasses() {
        const classes = classNames({
            'text-value': true,
            [`text-${this.color}`]: this.color
        });
        return classes;
    }
}
WidgetIconComponent.decorators = [
    { type: Component, args: [{
                selector: 'c-widget-icon',
                template: "<ng-container>\n  <div [class]=\"cardBodyClasses\">\n    <div [class]=\"bodySlotClasses\">\n      <ng-content></ng-content>\n    </div>\n    <div>\n      <div *ngIf=\"!!header\" [class]=\"headerClasses\">\n        {{header}}\n      </div>\n      <div *ngIf=\"!!text\" class=\"text-muted text-uppercase font-weight-bold small\">\n        {{text}}\n      </div>\n    </div>\n  </div>\n  <ng-content select=\"[slot=footer]\"></ng-content>\n</ng-container>\n",
                styles: [""]
            },] }
];
WidgetIconComponent.ctorParameters = () => [];
WidgetIconComponent.propDecorators = {
    color: [{ type: Input }],
    header: [{ type: Input }],
    text: [{ type: Input }],
    iconPadding: [{ type: Input }],
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0LWljb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi93aWRnZXQvd2lkZ2V0LWljb24vd2lkZ2V0LWljb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUN0RSxPQUFPLFVBQVUsTUFBTSxZQUFZLENBQUM7QUFPcEMsTUFBTSxPQUFPLG1CQUFtQjtJQXFCOUI7UUFoQlMsZ0JBQVcsR0FBRyxJQUFJLENBQUM7SUFnQlosQ0FBQztJQWRqQixJQUNJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQztJQUVELElBQUksV0FBVztRQUNiLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FDeEI7WUFDRSxJQUFJLEVBQUcsSUFBSTtTQUNaLENBQ0YsQ0FBQztRQUNGLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFJRCxRQUFRO0lBQ1IsQ0FBQztJQUVELElBQUksZUFBZTtRQUNqQixNQUFNLE9BQU8sR0FBRyxVQUFVLENBQ3hCO1lBQ0UsV0FBVyxFQUFFLElBQUk7WUFDakIsUUFBUSxFQUFFLElBQUk7WUFDZCxvQkFBb0IsRUFBRSxJQUFJO1lBQzFCLENBQUMsS0FBSyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsSUFBSTtTQUM1QyxDQUNGLENBQUM7UUFDRixPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDO0lBRUQsSUFBSSxlQUFlO1FBQ2pCLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FDeEI7WUFDRSxPQUFPLEVBQUUsSUFBSTtZQUNiLFlBQVksRUFBRSxJQUFJO1lBQ2xCLENBQUMsTUFBTSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSztZQUNoQyxDQUFDLEtBQUssSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLElBQUk7U0FDNUMsQ0FDRixDQUFDO1FBQ0YsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQztJQUVELElBQUksYUFBYTtRQUNmLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FDeEI7WUFDRSxZQUFZLEVBQUUsSUFBSTtZQUNsQixDQUFDLFFBQVEsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLEtBQUs7U0FDbkMsQ0FDRixDQUFDO1FBQ0YsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQzs7O1lBL0RGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZUFBZTtnQkFDekIsa2RBQTJDOzthQUU1Qzs7OztvQkFHRSxLQUFLO3FCQUNMLEtBQUs7bUJBQ0wsS0FBSzswQkFDTCxLQUFLO3lCQUVMLFdBQVcsU0FBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYy13aWRnZXQtaWNvbicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3dpZGdldC1pY29uLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi93aWRnZXQtaWNvbi5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBXaWRnZXRJY29uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQElucHV0KCkgY29sb3I6IHN0cmluZztcclxuICBASW5wdXQoKSBoZWFkZXI6IHN0cmluZztcclxuICBASW5wdXQoKSB0ZXh0OiBzdHJpbmc7XHJcbiAgQElucHV0KCkgaWNvblBhZGRpbmcgPSB0cnVlO1xyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcclxuICBnZXQgZ2V0Q2xhc3NlcygpIHtcclxuICAgIHJldHVybiB0aGlzLmhvc3RDbGFzc2VzO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGhvc3RDbGFzc2VzKCkge1xyXG4gICAgY29uc3QgY2xhc3NlcyA9IGNsYXNzTmFtZXMoXHJcbiAgICAgIHtcclxuICAgICAgICBjYXJkIDogdHJ1ZSxcclxuICAgICAgfSxcclxuICAgICk7XHJcbiAgICByZXR1cm4gY2xhc3NlcztcclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gIH1cclxuXHJcbiAgZ2V0IGNhcmRCb2R5Q2xhc3NlcygpIHtcclxuICAgIGNvbnN0IGNsYXNzZXMgPSBjbGFzc05hbWVzKFxyXG4gICAgICB7XHJcbiAgICAgICAgJ2NhcmQtYm9keSc6IHRydWUsXHJcbiAgICAgICAgJ2QtZmxleCc6IHRydWUsXHJcbiAgICAgICAgJ2FsaWduLWl0ZW1zLWNlbnRlcic6IHRydWUsXHJcbiAgICAgICAgW2BwLSR7dGhpcy5pY29uUGFkZGluZyA/ICczJyA6ICcwJ31gXTogdHJ1ZSxcclxuICAgICAgfSxcclxuICAgICk7XHJcbiAgICByZXR1cm4gY2xhc3NlcztcclxuICB9XHJcblxyXG4gIGdldCBib2R5U2xvdENsYXNzZXMoKSB7XHJcbiAgICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyhcclxuICAgICAge1xyXG4gICAgICAgICdtZmUtMyc6IHRydWUsXHJcbiAgICAgICAgJ3RleHQtd2hpdGUnOiB0cnVlLFxyXG4gICAgICAgIFtgYmctJHt0aGlzLmNvbG9yfWBdOiB0aGlzLmNvbG9yLFxyXG4gICAgICAgIFtgcC0ke3RoaXMuaWNvblBhZGRpbmcgPyAnMycgOiAnNCd9YF06IHRydWUsXHJcbiAgICAgIH0sXHJcbiAgICApO1xyXG4gICAgcmV0dXJuIGNsYXNzZXM7XHJcbiAgfVxyXG5cclxuICBnZXQgaGVhZGVyQ2xhc3NlcygpIHtcclxuICAgIGNvbnN0IGNsYXNzZXMgPSBjbGFzc05hbWVzKFxyXG4gICAgICB7XHJcbiAgICAgICAgJ3RleHQtdmFsdWUnOiB0cnVlLFxyXG4gICAgICAgIFtgdGV4dC0ke3RoaXMuY29sb3J9YF06IHRoaXMuY29sb3JcclxuICAgICAgfSxcclxuICAgICk7XHJcbiAgICByZXR1cm4gY2xhc3NlcztcclxuICB9XHJcbn1cclxuIl19