import { Directive, Host } from '@angular/core';
import { BreadcrumbService } from './breadcrumb.service';
import { BreadcrumbComponent } from './breadcrumb.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './breadcrumb.component';
import * as ɵngcc2 from './breadcrumb.service';
export class BreadcrumbDirective {
    constructor(breadcrumbComponent, service) {
        this.breadcrumbComponent = breadcrumbComponent;
        this.service = service;
    }
    ngOnInit() {
        this.breadcrumbComponent.breadcrumbs = this.service.breadcrumbs$;
    }
}
BreadcrumbDirective.ɵfac = function BreadcrumbDirective_Factory(t) { return new (t || BreadcrumbDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BreadcrumbComponent, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BreadcrumbService)); };
BreadcrumbDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BreadcrumbDirective, selectors: [["", "cBreadcrumbRouter", ""]], exportAs: ["cBreadcrumbRouter"] });
BreadcrumbDirective.ctorParameters = () => [
    { type: BreadcrumbComponent, decorators: [{ type: Host }] },
    { type: BreadcrumbService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbDirective, [{
        type: Directive,
        args: [{
                selector: '[cBreadcrumbRouter]',
                exportAs: 'cBreadcrumbRouter'
            }]
    }], function () { return [{ type: ɵngcc1.BreadcrumbComponent, decorators: [{
                type: Host
            }] }, { type: ɵngcc2.BreadcrumbService }]; }, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvYnJlYWRjcnVtYi9icmVhZGNydW1iLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLElBQUksRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUN0RCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUN2RCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQzs7OztBQU0zRCxNQUFNLE9BQU8sbUJBQW1CO0FBQUksSUFJbEMsWUFDaUIsbUJBQXdDLEVBQ2hELE9BQTBCO0FBQ2xDLFFBRmdCLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7QUFDM0QsUUFBVyxZQUFPLEdBQVAsT0FBTyxDQUFtQjtBQUNyQyxJQUFNLENBQUM7QUFFUCxJQUFFLFFBQVE7QUFBTSxRQUNaLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUM7QUFDcEUsSUFBQyxDQUFDO0FBQ0Y7aURBaEJBLFNBQVMsU0FBQyxtQkFDVCxRQUFRLEVBQUUscUJBQXFCLG1CQUMvQixRQUFRLEVBQUUsbUJBQW1CLGVBQzlCO2dLQUNLO0FBQUU7QUFFUixZQVJRLG1CQUFtQix1QkFXdEIsSUFBSTtBQUFRLFlBWlQsaUJBQWlCO0FBQUk7Ozs7Ozs7Ozs7QUFEQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBTUEsQUFBQSxBQUFBLEFBQUEsQUFJQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBREEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQWZBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUxBLEFBQUEsQUFXQSxBQUFBLEFBWkEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBIb3N0LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtCcmVhZGNydW1iU2VydmljZX0gZnJvbSAnLi9icmVhZGNydW1iLnNlcnZpY2UnO1xuaW1wb3J0IHtCcmVhZGNydW1iQ29tcG9uZW50fSBmcm9tICcuL2JyZWFkY3J1bWIuY29tcG9uZW50JztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2NCcmVhZGNydW1iUm91dGVyXScsXG4gIGV4cG9ydEFzOiAnY0JyZWFkY3J1bWJSb3V0ZXInXG59KVxuZXhwb3J0IGNsYXNzIEJyZWFkY3J1bWJEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIHB1YmxpYyBicmVhZGNydW1icztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASG9zdCgpIHB1YmxpYyBicmVhZGNydW1iQ29tcG9uZW50OiBCcmVhZGNydW1iQ29tcG9uZW50LFxuICAgIHB1YmxpYyBzZXJ2aWNlOiBCcmVhZGNydW1iU2VydmljZSxcbiAgKSB7IH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmJyZWFkY3J1bWJDb21wb25lbnQuYnJlYWRjcnVtYnMgPSB0aGlzLnNlcnZpY2UuYnJlYWRjcnVtYnMkO1xuICB9XG59XG4iXX0=