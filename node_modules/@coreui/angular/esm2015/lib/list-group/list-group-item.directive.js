import { Directive, ElementRef, HostBinding, Input, Renderer2 } from '@angular/core';
import classNames from 'classnames';
import * as ɵngcc0 from '@angular/core';
export class ListGroupItemDirective {
    constructor(renderer, hostElement) {
        this.renderer = renderer;
        this.hostElement = hostElement;
        this.host = this.hostElement.nativeElement;
    }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const classes = classNames({
            'list-group-item': true,
            'list-group-item-action': this.action,
            'list-group-item-divider': this.divider,
            active: this.active,
            disabled: this.disabled,
            [`list-group-item-${this.color}`]: !!this.color,
            [`list-group-item-accent-${this.accent}`]: !!this.accent
        });
        return classes;
    }
    ngOnInit() { }
    ngOnChanges(changes) {
        if (changes.color) {
            this.renderer.addClass(this.host, `list-group-item-${changes.color.currentValue}`);
            this.renderer.removeClass(this.host, `list-group-item-${changes.color.previousValue}`);
        }
        if (changes.accent) {
            this.renderer.addClass(this.host, `list-group-item-accent-${changes.accent.currentValue}`);
            this.renderer.removeClass(this.host, `list-group-item-accent-${changes.accent.previousValue}`);
        }
    }
}
ListGroupItemDirective.ɵfac = function ListGroupItemDirective_Factory(t) { return new (t || ListGroupItemDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ListGroupItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ListGroupItemDirective, selectors: [["", "cListGroupItem", ""], ["c-list-group-item"]], hostVars: 3, hostBindings: function ListGroupItemDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("disabled", ctx.disabled);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { accent: "accent", action: "action", active: "active", color: "color", divider: "divider", disabled: "disabled" }, exportAs: ["cListGroupItem"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });
ListGroupItemDirective.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef }
];
ListGroupItemDirective.propDecorators = {
    accent: [{ type: Input }],
    action: [{ type: Input }],
    active: [{ type: Input }],
    color: [{ type: Input }],
    divider: [{ type: Input }],
    disabled: [{ type: HostBinding, args: ['attr.disabled',] }, { type: Input }],
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListGroupItemDirective, [{
        type: Directive,
        args: [{
                selector: '[cListGroupItem], c-list-group-item',
                exportAs: 'cListGroupItem'
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { getClasses: [{
            type: HostBinding,
            args: ['class']
        }], accent: [{
            type: Input
        }], action: [{
            type: Input
        }], active: [{
            type: Input
        }], color: [{
            type: Input
        }], divider: [{
            type: Input
        }], disabled: [{
            type: HostBinding,
            args: ['attr.disabled']
        }, {
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1ncm91cC1pdGVtLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9saXN0LWdyb3VwL2xpc3QtZ3JvdXAtaXRlbS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBcUIsU0FBUyxFQUFnQixNQUFNLGVBQWUsQ0FBQztBQUNySCxPQUFPLFVBQVUsTUFBTSxZQUFZLENBQUM7O0FBTXBDLE1BQU0sT0FBTyxzQkFBc0I7QUFBSSxJQWlDckMsWUFDVSxRQUFtQixFQUNuQixXQUF1QjtBQUNoQyxRQUZTLGFBQVEsR0FBUixRQUFRLENBQVc7QUFDL0IsUUFBWSxnQkFBVyxHQUFYLFdBQVcsQ0FBWTtBQUNuQyxRQUNJLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUM7QUFDOUMsSUFBQyxDQUFDO0FBRUgsSUE3QkUsSUFDSSxVQUFVO0FBQ2YsUUFBRyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7QUFDM0IsSUFBQyxDQUFDO0FBRUgsSUFBRSxJQUFJLFdBQVc7QUFDaEIsUUFBRyxNQUFNLE9BQU8sR0FBRyxVQUFVLENBQ3hCO0FBQ0wsWUFBTyxpQkFBaUIsRUFBRSxJQUFJO0FBQzlCLFlBQU8sd0JBQXdCLEVBQUUsSUFBSSxDQUFDLE1BQU07QUFDNUMsWUFBTyx5QkFBeUIsRUFBRSxJQUFJLENBQUMsT0FBTztBQUM5QyxZQUFPLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTTtBQUMxQixZQUFPLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtBQUM5QixZQUFPLENBQUMsbUJBQW1CLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSztBQUN0RCxZQUFPLENBQUMsMEJBQTBCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTTtBQUMvRCxTQUFNLENBQ0YsQ0FBQztBQUNMLFFBQUcsT0FBTyxPQUFPLENBQUM7QUFDbEIsSUFBQyxDQUFDO0FBRUgsSUFTRSxRQUFRLEtBQUssQ0FBQztBQUVoQixJQUFFLFdBQVcsQ0FBQyxPQUFzQjtBQUFLLFFBQ3JDLElBQUksT0FBTyxDQUFDLEtBQUssRUFBRTtBQUN0QixZQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsbUJBQW1CLE9BQU8sQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQztBQUMxRixZQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsbUJBQW1CLE9BQU8sQ0FBQyxLQUFLLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztBQUM5RixTQUFJO0FBQ0osUUFBRyxJQUFJLE9BQU8sQ0FBQyxNQUFNLEVBQUU7QUFDdkIsWUFBSyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLDBCQUEwQixPQUFPLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUM7QUFDaEcsWUFBSyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLDBCQUEwQixPQUFPLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7QUFDcEcsU0FBSTtBQUNKLElBQUMsQ0FBQztBQUNGO29EQXhEQSxTQUFTLFNBQUMsbUJBQ1QsUUFBUSxFQUFFLHFDQUFxQyxtQkFDL0MsUUFBUSxFQUFFLGdCQUFnQixlQUMzQjs7Ozs4TUFDSztBQUFFO0FBQWlELFlBUGEsU0FBUztBQUFLLFlBQWpFLFVBQVU7QUFBSTtBQUFJO0FBQTJDLHFCQVM3RSxLQUFLO0FBQU0scUJBQ1gsS0FBSztBQUFNLHFCQUNYLEtBQUs7QUFBTSxvQkFDWCxLQUFLO0FBQU0sc0JBQ1gsS0FBSztBQUFNLHVCQUVYLFdBQVcsU0FBQyxlQUFlLGNBQzNCLEtBQUs7QUFBTSx5QkFFWCxXQUFXLFNBQUMsT0FBTztBQUNqQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFuQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFNQSxBQUFBLEFBQUEsQUFBQSxBQWlDQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBREEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQTNCQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQVdBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUF2REEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBTkEsQUFBQSxBQUFBLEFBQUEsQUFTQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEhvc3RCaW5kaW5nLCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlc30gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2NMaXN0R3JvdXBJdGVtXSwgYy1saXN0LWdyb3VwLWl0ZW0nLFxuICBleHBvcnRBczogJ2NMaXN0R3JvdXBJdGVtJ1xufSlcbmV4cG9ydCBjbGFzcyBMaXN0R3JvdXBJdGVtRGlyZWN0aXZlIGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkluaXQge1xuXG4gIEBJbnB1dCgpIGFjY2VudDogbnVsbCB8IHN0cmluZztcbiAgQElucHV0KCkgYWN0aW9uOiBudWxsIHwgYm9vbGVhbjtcbiAgQElucHV0KCkgYWN0aXZlOiBudWxsIHwgYm9vbGVhbjtcbiAgQElucHV0KCkgY29sb3I6IG51bGwgfCBzdHJpbmc7XG4gIEBJbnB1dCgpIGRpdmlkZXI6IG51bGwgfCBib29sZWFuO1xuXG4gIEBIb3N0QmluZGluZygnYXR0ci5kaXNhYmxlZCcpXG4gIEBJbnB1dCgpIGRpc2FibGVkOiBudWxsIHwgc3RyaW5nIHwgYm9vbGVhbjtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcbiAgZ2V0IGdldENsYXNzZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuaG9zdENsYXNzZXM7XG4gIH1cblxuICBnZXQgaG9zdENsYXNzZXMoKSB7XG4gICAgY29uc3QgY2xhc3NlcyA9IGNsYXNzTmFtZXMoXG4gICAgICB7XG4gICAgICAgICdsaXN0LWdyb3VwLWl0ZW0nOiB0cnVlLFxuICAgICAgICAnbGlzdC1ncm91cC1pdGVtLWFjdGlvbic6IHRoaXMuYWN0aW9uLFxuICAgICAgICAnbGlzdC1ncm91cC1pdGVtLWRpdmlkZXInOiB0aGlzLmRpdmlkZXIsXG4gICAgICAgIGFjdGl2ZTogdGhpcy5hY3RpdmUsXG4gICAgICAgIGRpc2FibGVkOiB0aGlzLmRpc2FibGVkLFxuICAgICAgICBbYGxpc3QtZ3JvdXAtaXRlbS0ke3RoaXMuY29sb3J9YF06ICEhdGhpcy5jb2xvcixcbiAgICAgICAgW2BsaXN0LWdyb3VwLWl0ZW0tYWNjZW50LSR7dGhpcy5hY2NlbnR9YF06ICEhdGhpcy5hY2NlbnRcbiAgICAgIH0sXG4gICAgKTtcbiAgICByZXR1cm4gY2xhc3NlcztcbiAgfVxuXG4gIGhvc3Q6IEhUTUxFbGVtZW50O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICBwcml2YXRlIGhvc3RFbGVtZW50OiBFbGVtZW50UmVmLFxuICApIHtcbiAgICB0aGlzLmhvc3QgPSB0aGlzLmhvc3RFbGVtZW50Lm5hdGl2ZUVsZW1lbnQ7XG4gIH1cblxuICBuZ09uSW5pdCgpIHsgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAoY2hhbmdlcy5jb2xvcikge1xuICAgICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKHRoaXMuaG9zdCwgYGxpc3QtZ3JvdXAtaXRlbS0ke2NoYW5nZXMuY29sb3IuY3VycmVudFZhbHVlfWApO1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKHRoaXMuaG9zdCwgYGxpc3QtZ3JvdXAtaXRlbS0ke2NoYW5nZXMuY29sb3IucHJldmlvdXNWYWx1ZX1gKTtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXMuYWNjZW50KSB7XG4gICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKHRoaXMuaG9zdCwgYGxpc3QtZ3JvdXAtaXRlbS1hY2NlbnQtJHtjaGFuZ2VzLmFjY2VudC5jdXJyZW50VmFsdWV9YCk7XG4gICAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKHRoaXMuaG9zdCwgYGxpc3QtZ3JvdXAtaXRlbS1hY2NlbnQtJHtjaGFuZ2VzLmFjY2VudC5wcmV2aW91c1ZhbHVlfWApO1xuICAgIH1cbiAgfVxufVxuIl19