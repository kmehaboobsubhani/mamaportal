import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { CarouselComponent } from './carousel/carousel.component';
import { CarouselCaptionComponent } from './carousel-caption/carousel-caption.component';
import { CarouselControlComponent } from './carousel-control/carousel-control.component';
import { CarouselIndicatorsComponent } from './carousel-indicators/carousel-indicators.component';
import { CarouselInnerComponent } from './carousel-inner/carousel-inner.component';
import { CarouselItemComponent } from './carousel-item/carousel-item.component';
import { CarouselService } from './carousel.service';
import { CarouselState } from './carousel-state';
import { CarouselConfig } from './carousel.config';
import * as ɵngcc0 from '@angular/core';
export class CarouselModule {
    static forRoot() {
        return { ngModule: CarouselModule, providers: [] };
    }
}
CarouselModule.ɵfac = function CarouselModule_Factory(t) { return new (t || CarouselModule)(); };
CarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CarouselModule });
CarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [CarouselService, CarouselState, CarouselConfig], imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CarouselModule, { declarations: function () { return [CarouselComponent,
        CarouselCaptionComponent,
        CarouselControlComponent,
        CarouselIndicatorsComponent,
        CarouselInnerComponent,
        CarouselItemComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [CarouselComponent,
        CarouselCaptionComponent,
        CarouselControlComponent,
        CarouselIndicatorsComponent,
        CarouselInnerComponent,
        CarouselItemComponent]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    CarouselComponent,
                    CarouselCaptionComponent,
                    CarouselControlComponent,
                    CarouselIndicatorsComponent,
                    CarouselInnerComponent,
                    CarouselItemComponent,
                ],
                imports: [CommonModule],
                providers: [CarouselService, CarouselState, CarouselConfig],
                exports: [
                    CarouselComponent,
                    CarouselCaptionComponent,
                    CarouselControlComponent,
                    CarouselIndicatorsComponent,
                    CarouselInnerComponent,
                    CarouselItemComponent,
                ]
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2Fyb3VzZWwubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL2Nhcm91c2VsL2Nhcm91c2VsLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDekYsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDekYsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0scURBQXFELENBQUM7QUFDbEcsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDbkYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDaEYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7O0FBc0JuRCxNQUFNLE9BQU8sY0FBYztBQUMxQixJQUFDLE1BQU0sQ0FBQyxPQUFPO0FBQU0sUUFDbEIsT0FBTyxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUUsU0FBUyxFQUFFLEVBQUUsRUFBRSxDQUFDO0FBQ3RELElBQUMsQ0FBQztBQUNGOzRDQXhCQSxRQUFRLFNBQUMsbUJBQ1IsWUFBWSxFQUFFO21CQUNaLGlCQUFpQix1QkFDakI7VUFBd0IsdUJBQ3hCLHdCQUF3Qix1QkFDeEIsMkJBQTJCLHVCQUMzQjthQUFzQix1QkFDdEIscUJBQXFCLG9CQUN0QixtQkFDRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsbUJBQ3ZCLFNBQVMsRUFBRSxDQUFDO0FBQWUsRUFBRSxhQUFhLEVBQUUsY0FBYyxDQUFDO2lCQUMzRCxPQUFPLEVBQUU7ZUFDUCxpQkFBaUI7a0JBQ2pCO1VBQXdCLHVCQUN4Qix3QkFBd0IsdUJBQ3hCLDJCQUEyQix1QkFDM0I7a0JBQXNCO09BQ3RCLHFCQUFxQjtjQUN0QixnQkFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFoQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFzQkEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUF2QkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgQ2Fyb3VzZWxDb21wb25lbnQgfSBmcm9tICcuL2Nhcm91c2VsL2Nhcm91c2VsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDYXJvdXNlbENhcHRpb25Db21wb25lbnQgfSBmcm9tICcuL2Nhcm91c2VsLWNhcHRpb24vY2Fyb3VzZWwtY2FwdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ2Fyb3VzZWxDb250cm9sQ29tcG9uZW50IH0gZnJvbSAnLi9jYXJvdXNlbC1jb250cm9sL2Nhcm91c2VsLWNvbnRyb2wuY29tcG9uZW50JztcbmltcG9ydCB7IENhcm91c2VsSW5kaWNhdG9yc0NvbXBvbmVudCB9IGZyb20gJy4vY2Fyb3VzZWwtaW5kaWNhdG9ycy9jYXJvdXNlbC1pbmRpY2F0b3JzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDYXJvdXNlbElubmVyQ29tcG9uZW50IH0gZnJvbSAnLi9jYXJvdXNlbC1pbm5lci9jYXJvdXNlbC1pbm5lci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ2Fyb3VzZWxJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi9jYXJvdXNlbC1pdGVtL2Nhcm91c2VsLWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IENhcm91c2VsU2VydmljZSB9IGZyb20gJy4vY2Fyb3VzZWwuc2VydmljZSc7XG5pbXBvcnQgeyBDYXJvdXNlbFN0YXRlIH0gZnJvbSAnLi9jYXJvdXNlbC1zdGF0ZSc7XG5pbXBvcnQgeyBDYXJvdXNlbENvbmZpZyB9IGZyb20gJy4vY2Fyb3VzZWwuY29uZmlnJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgQ2Fyb3VzZWxDb21wb25lbnQsXG4gICAgQ2Fyb3VzZWxDYXB0aW9uQ29tcG9uZW50LFxuICAgIENhcm91c2VsQ29udHJvbENvbXBvbmVudCxcbiAgICBDYXJvdXNlbEluZGljYXRvcnNDb21wb25lbnQsXG4gICAgQ2Fyb3VzZWxJbm5lckNvbXBvbmVudCxcbiAgICBDYXJvdXNlbEl0ZW1Db21wb25lbnQsXG4gIF0sXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBwcm92aWRlcnM6IFtDYXJvdXNlbFNlcnZpY2UsIENhcm91c2VsU3RhdGUsIENhcm91c2VsQ29uZmlnXSxcbiAgZXhwb3J0czogW1xuICAgIENhcm91c2VsQ29tcG9uZW50LFxuICAgIENhcm91c2VsQ2FwdGlvbkNvbXBvbmVudCxcbiAgICBDYXJvdXNlbENvbnRyb2xDb21wb25lbnQsXG4gICAgQ2Fyb3VzZWxJbmRpY2F0b3JzQ29tcG9uZW50LFxuICAgIENhcm91c2VsSW5uZXJDb21wb25lbnQsXG4gICAgQ2Fyb3VzZWxJdGVtQ29tcG9uZW50LFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBDYXJvdXNlbE1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Q2Fyb3VzZWxNb2R1bGU+IHtcbiAgICByZXR1cm4geyBuZ01vZHVsZTogQ2Fyb3VzZWxNb2R1bGUsIHByb3ZpZGVyczogW10gfTtcbiAgfVxufVxuIl19