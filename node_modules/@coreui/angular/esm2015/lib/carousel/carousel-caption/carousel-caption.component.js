import { Component, HostBinding } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class CarouselCaptionComponent {
    constructor() {
        this.carouselCaptionClass = true;
    }
    ngOnInit() {
    }
}
CarouselCaptionComponent.ɵfac = function CarouselCaptionComponent_Factory(t) { return new (t || CarouselCaptionComponent)(); };
CarouselCaptionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CarouselCaptionComponent, selectors: [["c-carousel-caption"]], hostVars: 2, hostBindings: function CarouselCaptionComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("carousel-caption", ctx.carouselCaptionClass);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function CarouselCaptionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
CarouselCaptionComponent.ctorParameters = () => [];
CarouselCaptionComponent.propDecorators = {
    carouselCaptionClass: [{ type: HostBinding, args: ['class.carousel-caption',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselCaptionComponent, [{
        type: Component,
        args: [{
                selector: 'c-carousel-caption',
                template: "<ng-content></ng-content>\n\n",
                styles: [""]
            }]
    }], function () { return []; }, { carouselCaptionClass: [{
            type: HostBinding,
            args: ['class.carousel-caption']
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2Fyb3VzZWwtY2FwdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvY2Fyb3VzZWwvY2Fyb3VzZWwtY2FwdGlvbi9jYXJvdXNlbC1jYXB0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBVSxNQUFNLGVBQWUsQ0FBQzs7OztBQU8vRCxNQUFNLE9BQU8sd0JBQXdCO0FBQUksSUFJdkM7QUFBaUIsUUFGc0IseUJBQW9CLEdBQUcsSUFBSSxDQUFDO0FBRXJFLElBQWtCLENBQUM7QUFFbkIsSUFBRSxRQUFRO0FBQU0sSUFDZCxDQUFDO0FBRUg7c0RBZEMsU0FBUyxTQUFDLG1CQUNULFFBQVEsRUFBRSxvQkFBb0I7WUFDOUIseUNBQWdELDhDQUVqRDs7Ozs7eUJBQ0s7QUFBRTtBQUVOO0FBQTZDLG1DQUE1QyxXQUFXLFNBQUMsd0JBQXdCO0FBQU87Ozs7Ozs7Ozs7OztBQVRBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUFBLEFBQUEsQUFJQSxBQUZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFaQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUdBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0QmluZGluZywgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2MtY2Fyb3VzZWwtY2FwdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9jYXJvdXNlbC1jYXB0aW9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vY2Fyb3VzZWwtY2FwdGlvbi5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIENhcm91c2VsQ2FwdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5jYXJvdXNlbC1jYXB0aW9uJykgY2Fyb3VzZWxDYXB0aW9uQ2xhc3MgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gIH1cblxufVxuIl19