import { Component, HostBinding, Input } from '@angular/core';
export class SidebarBrandComponent {
    constructor() {
        this.brandText = { icon: 'ðŸ…²', text: 'ðŸ…² CoreUI' };
        this.routerLink = '';
        this._sidebarBrand = true;
    }
    ngOnInit() {
        this.brandImg = Boolean(this.brand || this.brandFull || this.brandMinimized);
    }
}
SidebarBrandComponent.decorators = [
    { type: Component, args: [{
                selector: 'c-sidebar-brand',
                template: "<a [routerLink]=\"routerLink\">\r\n  <ng-template [ngIf]=\"brandImg\">\r\n<!--    <img *ngIf=\"brand\"-->\r\n<!--         [cHtmlAttr]=\"brand\"-->\r\n<!--         [ngClass]=\"'c-sidebar-brand'\">-->\r\n    <img *ngIf=\"brandFull\"\r\n         [cHtmlAttr]=\"brandFull\"\r\n         [ngClass]=\"'c-sidebar-brand-full'\">\r\n    <img *ngIf=\"brandMinimized\"\r\n         [cHtmlAttr]=\"brandMinimized\"\r\n         [ngClass]=\"'c-sidebar-brand-minimized'\">\r\n  </ng-template>\r\n  <ng-template [ngIf]=\"!brandImg\">\r\n    <div class=\"c-sidebar-brand-full\" [innerHTML]=\"brandText.text\"></div>\r\n    <div class=\"c-sidebar-brand-minimized\" [innerHTML]=\"brandText.icon\"></div>\r\n  </ng-template>\r\n</a>\r\n"
            },] }
];
SidebarBrandComponent.ctorParameters = () => [];
SidebarBrandComponent.propDecorators = {
    brand: [{ type: Input }],
    brandFull: [{ type: Input }],
    brandMinimized: [{ type: Input }],
    brandText: [{ type: Input }],
    routerLink: [{ type: Input }],
    _sidebarBrand: [{ type: HostBinding, args: ['class.c-sidebar-brand',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci1icmFuZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL3NpZGViYXIvc2lkZWJhci1icmFuZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBV3BFLE1BQU0sT0FBTyxxQkFBcUI7SUFnQmhDO1FBWFMsY0FBUyxHQUFRLEVBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFDLENBQUM7UUFDakQsZUFBVSxHQUFtQixFQUFFLENBQUM7UUFLSCxrQkFBYSxHQUFHLElBQUksQ0FBQztJQVczRCxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7SUFFL0UsQ0FBQzs7O1lBL0JGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixvdEJBQTZDO2FBQzlDOzs7O29CQUdFLEtBQUs7d0JBQ0wsS0FBSzs2QkFDTCxLQUFLO3dCQUNMLEtBQUs7eUJBQ0wsS0FBSzs0QkFLTCxXQUFXLFNBQUMsdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHtDb21wb25lbnQsIEVsZW1lbnRSZWYsIEhvc3RCaW5kaW5nLCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQsIFJlbmRlcmVyMn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7Q29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXQsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbi8vIGltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xyXG5cclxuLy8gaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XHJcblxyXG4vLyBpbXBvcnQge1NpZGViYXJTZXJ2aWNlfSBmcm9tICcuL3NpZGViYXIuc2VydmljZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2Mtc2lkZWJhci1icmFuZCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3NpZGViYXItYnJhbmQuY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTaWRlYmFyQnJhbmRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBASW5wdXQoKSBicmFuZDogYW55O1xyXG4gIEBJbnB1dCgpIGJyYW5kRnVsbDogYW55O1xyXG4gIEBJbnB1dCgpIGJyYW5kTWluaW1pemVkOiBhbnk7XHJcbiAgQElucHV0KCkgYnJhbmRUZXh0OiBhbnkgPSB7aWNvbjogJ/CfhbInLCB0ZXh0OiAn8J+FsiBDb3JlVUknfTtcclxuICBASW5wdXQoKSByb3V0ZXJMaW5rOiBhbnlbXSB8IHN0cmluZyA9ICcnO1xyXG4gIC8vIEBJbnB1dCgpIG1pbmltaXplZCA9IGZhbHNlO1xyXG4gIC8vIEBJbnB1dCgpIG5nQ2xhc3M7XHJcbiAgLy8gQElucHV0KCkgY2xhc3M7XHJcblxyXG4gIEBIb3N0QmluZGluZygnY2xhc3MuYy1zaWRlYmFyLWJyYW5kJykgX3NpZGViYXJCcmFuZCA9IHRydWU7XHJcblxyXG4gIGJyYW5kSW1nOiBib29sZWFuO1xyXG4gIC8vIHByaXZhdGUgc3RhdGVUb2dnbGVTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICAvLyBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsXHJcbiAgICAvLyBwcml2YXRlIGhvc3RFbGVtZW50OiBFbGVtZW50UmVmLFxyXG4gICAgLy8gcHJpdmF0ZSBzaWRlYmFyU2VydmljZTogU2lkZWJhclNlcnZpY2UsXHJcbiAgKSB7XHJcbiAgICAvLyByZW5kZXJlci5hZGRDbGFzcyhob3N0RWxlbWVudC5uYXRpdmVFbGVtZW50LCAnYy1zaWRlYmFyLWJyYW5kJyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMuYnJhbmRJbWcgPSBCb29sZWFuKHRoaXMuYnJhbmQgfHwgdGhpcy5icmFuZEZ1bGwgfHwgdGhpcy5icmFuZE1pbmltaXplZCk7XHJcbiAgICAvLyB0aGlzLnN0YXRlVG9nZ2xlU3Vic2NyaWJlKCk7XHJcbiAgfVxyXG5cclxuICAvLyBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICAvLyAgIC8vIHRoaXMuc3RhdGVUb2dnbGVTdWJzY3JpYmUoZmFsc2UpO1xyXG4gIC8vIH1cclxuXHJcbiAgLy8gYnJhbmRDbGFzc2VzKCkge1xyXG4gIC8vICAgY29uc3QgY2xhc3NlcyA9IGNsYXNzTmFtZXMoXHJcbiAgLy8gICAgIHRoaXMubmdDbGFzcyxcclxuICAvLyAgICAgdGhpcy5jbGFzcyxcclxuICAvLyAgICAge1xyXG4gIC8vICAgICAgICdjLXNpZGViYXItYnJhbmQnOiB0cnVlLFxyXG4gIC8vICAgICAgIC8vICdjLXNpZGViYXItYnJhbmQtbWluaW1pemVkJzogdGhpcy5taW5pbWl6ZSxcclxuICAvLyAgICAgfVxyXG4gIC8vICAgKTtcclxuICAvLyAgIHJldHVybiBjbGFzc2VzO1xyXG4gIC8vIH1cclxuXHJcbiAgLy8gbWluaW1pemUoZm9yY2U/OiBib29sZWFuKTogdm9pZCB7XHJcbiAgLy8gICAvLyBjb25zb2xlLmxvZygnaGVhZGVyIGJyYW5kIG1pbmltaXplZCBmb3JjZScsIGZvcmNlKTtcclxuICAvLyAgIGNvbnN0IG1pbmltaXplID0gKHR5cGVvZiBmb3JjZSA9PT0gJ3VuZGVmaW5lZCcpID9cclxuICAvLyAgICAgIXRoaXMuaG9zdEVsZW1lbnQubmF0aXZlRWxlbWVudC5maXJzdENoaWxkLmNsYXNzTGlzdC5jb250YWlucygnYy1zaWRlYmFyLWJyYW5kLW1pbmltaXplZCcpXHJcbiAgLy8gICAgIDogZm9yY2U7XHJcbiAgLy8gICAvLyBtaW5pbWl6ZSA/IHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5ob3N0RWxlbWVudC5uYXRpdmVFbGVtZW50LmZpcnN0Q2hpbGQsICdjLXNpZGViYXItYnJhbmQtbWluaW1pemVkJykgOlxyXG4gIC8vICAgLy8gICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKHRoaXMuaG9zdEVsZW1lbnQubmF0aXZlRWxlbWVudC5maXJzdENoaWxkLCAnYy1zaWRlYmFyLWJyYW5kLW1pbmltaXplZCcpO1xyXG4gIC8vICAgdGhpcy5taW5pbWl6ZWQgPSBtaW5pbWl6ZTtcclxuICAvLyAgIC8vIHJldHVybiBtaW5pbWl6ZTtcclxuICAvLyB9XHJcblxyXG4gIC8vIHByaXZhdGUgc3RhdGVUb2dnbGVTdWJzY3JpYmUoc3Vic2NyaWJlOiBib29sZWFuID0gdHJ1ZSkge1xyXG4gIC8vICAgY29uc29sZS5sb2coJ3N0YXRlVG9nZ2xlU3Vic2NyaWJlJywgc3Vic2NyaWJlKTtcclxuICAvLyAgIGlmIChzdWJzY3JpYmUpIHtcclxuICAvLyAgICAgdGhpcy5zdGF0ZVRvZ2dsZVN1YnNjcmlwdGlvbiA9IHRoaXMuc2lkZWJhclNlcnZpY2Uuc2lkZWJhclN0YXRlJC5zdWJzY3JpYmUoKHN0YXRlKSA9PiB7XHJcbiAgLy8gICAgICAgLy8gaWYgKCFzdGF0ZS5hc2lkZSkge1xyXG4gIC8vICAgICAgICAgaWYgKCdtaW5pbWl6ZScgaW4gc3RhdGUpIHtcclxuICAvLyAgICAgICAgICAgLy8gdGhpcy5taW5pbWl6ZShzdGF0ZS5taW5pbWl6ZWQpO1xyXG4gIC8vICAgICAgICAgICAvLyB0aGlzLm1pbmltaXplKHN0YXRlLm1pbmltaXplZCk7XHJcbiAgLy8gICAgICAgICB9XHJcbiAgLy8gICAgICAgLy8gfVxyXG4gIC8vICAgICB9KTtcclxuICAvLyAgIH0gZWxzZSB7XHJcbiAgLy8gICAgIHRoaXMuc3RhdGVUb2dnbGVTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcclxuICAvLyAgIH1cclxuICAvLyB9XHJcbn1cclxuIl19