import { Directive, HostListener, Input } from '@angular/core';
import { SidebarService } from './sidebar.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './sidebar.service';
export class SidebarMinimizeDirective {
    constructor(sidebarService) {
        this.sidebarService = sidebarService;
    }
    toggleMinimize($event) {
        $event.preventDefault();
        this.sidebarService.toggle({ minimize: 'toggle', id: this.id });
    }
}
SidebarMinimizeDirective.ɵfac = function SidebarMinimizeDirective_Factory(t) { return new (t || SidebarMinimizeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SidebarService)); };
SidebarMinimizeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SidebarMinimizeDirective, selectors: [["", "cSidebarMinimize", ""]], hostBindings: function SidebarMinimizeDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function SidebarMinimizeDirective_click_HostBindingHandler($event) { return ctx.toggleMinimize($event); });
    } }, inputs: { id: ["cSidebarMinimize", "id"] }, exportAs: ["cSidebarMinimize"] });
SidebarMinimizeDirective.ctorParameters = () => [
    { type: SidebarService }
];
SidebarMinimizeDirective.propDecorators = {
    id: [{ type: Input, args: ['cSidebarMinimize',] }],
    toggleMinimize: [{ type: HostListener, args: ['click', ['$event'],] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarMinimizeDirective, [{
        type: Directive,
        args: [{
                selector: '[cSidebarMinimize]',
                exportAs: 'cSidebarMinimize'
            }]
    }], function () { return [{ type: ɵngcc1.SidebarService }]; }, { toggleMinimize: [{
            type: HostListener,
            args: ['click', ['$event']]
        }], id: [{
            type: Input,
            args: ['cSidebarMinimize']
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci1taW5pbWl6ZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvc2lkZWJhci9zaWRlYmFyLW1pbmltaXplLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFN0QsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLG1CQUFtQixDQUFDOzs7QUFTakQsTUFBTSxPQUFPLHdCQUF3QjtBQUVyQyxJQUVFLFlBQ1UsY0FBOEI7QUFDdEMsUUFEUSxtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7QUFDekMsSUFBSyxDQUFDO0FBRVAsSUFDRSxjQUFjLENBQUMsTUFBVztBQUMzQixRQUFHLE1BQU0sQ0FBQyxjQUFjLEVBQUUsQ0FBQztBQUMzQixRQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDbkUsSUFBQyxDQUFDO0FBQ0Y7c0RBakJBLFNBQVMsU0FBQyxtQkFDVCxRQUFRLEVBQUUsb0JBQW9CLG1CQUM5QixRQUFRLEVBQUUsa0JBQWtCO1FBQzdCOzt1RkFDSztBQUFFO0FBRVUsWUFYVixjQUFjO0FBQUk7QUFBSTtBQUdWLGlCQVFqQixLQUFLLFNBQUMsa0JBQWtCO0FBQVEsNkJBTWhDLFlBQVksU0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUM7QUFDOUI7Ozs7Ozs7Ozs7Ozs7O0FBcEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFTQSxBQUFBLEFBQUEsQUFBQSxBQUlBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQWhCQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFSQSxBQUFBLEFBV0EsQUFBQSxBQUFBLEFBQUEsQUFNQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEhvc3RMaXN0ZW5lciwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge1NpZGViYXJTZXJ2aWNlfSBmcm9tICcuL3NpZGViYXIuc2VydmljZSc7XG5cbi8qKlxuICogQWxsb3dzIHRoZSBzaWRlYmFyIHRvIGJlIG1pbmltaXplZCAgdmlhIGNsaWNrLlxuICovXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbY1NpZGViYXJNaW5pbWl6ZV0nLFxuICBleHBvcnRBczogJ2NTaWRlYmFyTWluaW1pemUnXG59KVxuZXhwb3J0IGNsYXNzIFNpZGViYXJNaW5pbWl6ZURpcmVjdGl2ZSB7XG5cbiAgQElucHV0KCdjU2lkZWJhck1pbmltaXplJykgaWQ6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHNpZGViYXJTZXJ2aWNlOiBTaWRlYmFyU2VydmljZVxuICApIHsgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJywgWyckZXZlbnQnXSlcbiAgdG9nZ2xlTWluaW1pemUoJGV2ZW50OiBhbnkpIHtcbiAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLnNpZGViYXJTZXJ2aWNlLnRvZ2dsZSh7IG1pbmltaXplOiAndG9nZ2xlJywgaWQ6IHRoaXMuaWQgfSk7XG4gIH1cbn1cbiJdfQ==