import { Component, ElementRef, Renderer2 } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class SidebarFormComponent {
    constructor(renderer, hostElement) {
        this.renderer = renderer;
        this.hostElement = hostElement;
        renderer.addClass(hostElement.nativeElement, 'c-sidebar-form');
    }
    ngOnInit() { }
}
SidebarFormComponent.ɵfac = function SidebarFormComponent_Factory(t) { return new (t || SidebarFormComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SidebarFormComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarFormComponent, selectors: [["c-sidebar-form"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function SidebarFormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
SidebarFormComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarFormComponent, [{
        type: Component,
        args: [{
                selector: 'c-sidebar-form',
                template: `<ng-content></ng-content>`
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci1mb3JtLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9zaWRlYmFyL3NpZGViYXItZm9ybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQVUsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDOzs7O0FBTXZFLE1BQU0sT0FBTyxvQkFBb0I7QUFBSSxJQUVuQyxZQUNVLFFBQW1CLEVBQ25CLFdBQXVCO0FBQ2hDLFFBRlMsYUFBUSxHQUFSLFFBQVEsQ0FBVztBQUFFLFFBQ3JCLGdCQUFXLEdBQVgsV0FBVyxDQUFZO0FBQ25DLFFBQ0ksUUFBUSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUFFLGdCQUFnQixDQUFDLENBQUM7QUFDbkUsSUFBRSxDQUFDO0FBQ0gsSUFBRSxRQUFRLEtBQUssQ0FBQztBQUNoQjtrREFiQyxTQUFTLFNBQUMsbUJBQ1QsUUFBUSxFQUFFLGdCQUFnQixtQkFDMUIsUUFBUSxFQUFFLDJCQUEyQixlQUN0Qzs7Ozs2QkFDSTtBQUFFO0FBQStDLFlBTmYsU0FBUztBQUFLLFlBQWxDLFVBQVU7QUFBSTs7Ozs7Ozs7QUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFNQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFEQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQVpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUxBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEVsZW1lbnRSZWYsIE9uSW5pdCwgUmVuZGVyZXIyfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYy1zaWRlYmFyLWZvcm0nLFxyXG4gIHRlbXBsYXRlOiBgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PmBcclxufSlcclxuZXhwb3J0IGNsYXNzIFNpZGViYXJGb3JtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsXHJcbiAgICBwcml2YXRlIGhvc3RFbGVtZW50OiBFbGVtZW50UmVmXHJcbiAgKSB7XHJcbiAgICByZW5kZXJlci5hZGRDbGFzcyhob3N0RWxlbWVudC5uYXRpdmVFbGVtZW50LCAnYy1zaWRlYmFyLWZvcm0nKTtcclxuICB9XHJcbiAgbmdPbkluaXQoKSB7IH1cclxufVxyXG4iXX0=