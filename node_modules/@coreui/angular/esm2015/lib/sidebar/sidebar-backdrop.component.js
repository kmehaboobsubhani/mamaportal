import { Component, ElementRef, HostBinding, HostListener } from '@angular/core';
import { SidebarService } from './sidebar.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './sidebar.service';
export class SidebarBackdropComponent {
    constructor(elementRef, sidebarService) {
        this.elementRef = elementRef;
        this.sidebarService = sidebarService;
        this._sidebarBackdrop = true;
    }
    onClick($event) {
        const targetElement = $event.target;
        if (targetElement && !this.elementRef.nativeElement.contains(targetElement)) {
            this.sidebarService.toggle({ open: false });
        }
    }
    ngOnInit() {
    }
}
SidebarBackdropComponent.ɵfac = function SidebarBackdropComponent_Factory(t) { return new (t || SidebarBackdropComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SidebarService)); };
SidebarBackdropComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarBackdropComponent, selectors: [["c-sidebar-backdrop"]], hostVars: 2, hostBindings: function SidebarBackdropComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function SidebarBackdropComponent_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("c-sidebar-backdrop", ctx._sidebarBackdrop);
    } }, decls: 0, vars: 0, template: function SidebarBackdropComponent_Template(rf, ctx) { }, styles: [""] });
SidebarBackdropComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: SidebarService }
];
SidebarBackdropComponent.propDecorators = {
    _sidebarBackdrop: [{ type: HostBinding, args: ['class.c-sidebar-backdrop',] }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarBackdropComponent, [{
        type: Component,
        args: [{
                selector: 'c-sidebar-backdrop',
                template: "",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.SidebarService }]; }, { _sidebarBackdrop: [{
            type: HostBinding,
            args: ['class.c-sidebar-backdrop']
        }], onClick: [{
            type: HostListener,
            args: ['click', ['$event']]
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci1iYWNrZHJvcC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvc2lkZWJhci9zaWRlYmFyLWJhY2tkcm9wLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBRXZGLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQzs7O0FBT2pELE1BQU0sT0FBTyx3QkFBd0I7QUFBSSxJQWN2QyxZQUNVLFVBQXNCLEVBQ3RCLGNBQThCO0FBRXpDLFFBSFcsZUFBVSxHQUFWLFVBQVUsQ0FBWTtBQUFFLFFBQ3hCLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtBQUMxQyxRQWYyQyxxQkFBZ0IsR0FBRyxJQUFJLENBQUM7QUFDbkUsSUFlTSxDQUFDO0FBQ1AsSUFkUyxPQUFPLENBQUMsTUFBa0I7QUFBSyxRQUNwQyxNQUFNLGFBQWEsR0FBRyxNQUFNLENBQUMsTUFBcUIsQ0FBQztBQUN2RCxRQUVJLElBQUksYUFBYSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxFQUFFO0FBQ2pGLFlBQU0sSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsRUFBQyxJQUFJLEVBQUUsS0FBSyxFQUFDLENBQUMsQ0FBQztBQUNoRCxTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0gsSUFPRSxRQUFRO0FBQ1YsSUFBRSxDQUFDO0FBQ0g7c0RBM0JDLFNBQVMsU0FBQyxtQkFDVCxRQUFRLEVBQUUsb0JBQW9CLG1CQUM5QixZQUFnRCw4Q0FFakQ7Ozs7OytHQUNJO0FBQUU7QUFBbUQsWUFUdkMsVUFBVTtBQUFLLFlBRTFCLGNBQWM7QUFBSTtBQUFJO0FBR3RCLCtCQU1MLFdBQVcsU0FBQywwQkFBMEI7QUFBUSxzQkFFOUMsWUFBWSxTQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQztBQUMvQjs7Ozs7Ozs7Ozs7Ozs7O0FBZEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFPQSxBQUFBLEFBQUEsQUFBQSxBQWNBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFEQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQWRBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFnQkEsQUFBQSxBQWJBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQVFBLEFBQUEsQUFDQSxBQUFBLEFBMUJBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBUkEsQUFBQSxBQUVBLEFBQUEsQUFTQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRWxlbWVudFJlZiwgSG9zdEJpbmRpbmcsIEhvc3RMaXN0ZW5lciwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtPdXRDbGlja1NlcnZpY2V9IGZyb20gJy4uL3NoYXJlZC9vdXQtY2xpY2suc2VydmljZSc7XHJcbmltcG9ydCB7U2lkZWJhclNlcnZpY2V9IGZyb20gJy4vc2lkZWJhci5zZXJ2aWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYy1zaWRlYmFyLWJhY2tkcm9wJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vc2lkZWJhci1iYWNrZHJvcC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vc2lkZWJhci1iYWNrZHJvcC5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTaWRlYmFyQmFja2Ryb3BDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmMtc2lkZWJhci1iYWNrZHJvcCcpIF9zaWRlYmFyQmFja2Ryb3AgPSB0cnVlO1xyXG5cclxuICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pXHJcbiAgcHVibGljIG9uQ2xpY2soJGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XHJcbiAgICBjb25zdCB0YXJnZXRFbGVtZW50ID0gJGV2ZW50LnRhcmdldCBhcyBIVE1MRWxlbWVudDtcclxuICAgIC8vICRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgLy8gQ2hlY2sgaWYgdGhlIGNsaWNrIHdhcyBvdXRzaWRlIHRoZSBlbGVtZW50XHJcbiAgICBpZiAodGFyZ2V0RWxlbWVudCAmJiAhdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuY29udGFpbnModGFyZ2V0RWxlbWVudCkpIHtcclxuICAgICAgdGhpcy5zaWRlYmFyU2VydmljZS50b2dnbGUoe29wZW46IGZhbHNlfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZixcclxuICAgIHByaXZhdGUgc2lkZWJhclNlcnZpY2U6IFNpZGViYXJTZXJ2aWNlXHJcblxyXG4gICkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbn1cclxuIl19