import { Pipe } from '@angular/core';
import { SidebarNavHelper } from './sidebar-nav.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './sidebar-nav.service';
export class SidebarNavItemClassPipe {
    constructor(helper) {
        this.helper = helper;
    }
    transform(item, args) {
        const itemType = this.helper.itemType(item);
        let itemClass;
        if (['divider', 'title'].includes(itemType)) {
            itemClass = `c-sidebar-nav-${itemType}`;
        }
        else if (itemType === 'dropdown') {
            itemClass = '';
        }
        else {
            itemClass = 'c-sidebar-nav-item';
        }
        return item.class ? `${itemClass} ${item.class}` : itemClass;
    }
}
SidebarNavItemClassPipe.ɵfac = function SidebarNavItemClassPipe_Factory(t) { return new (t || SidebarNavItemClassPipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SidebarNavHelper)); };
SidebarNavItemClassPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "cSidebarNavItemClass", type: SidebarNavItemClassPipe, pure: true });
SidebarNavItemClassPipe.ctorParameters = () => [
    { type: SidebarNavHelper }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavItemClassPipe, [{
        type: Pipe,
        args: [{
                name: 'cSidebarNavItemClass'
            }]
    }], function () { return [{ type: ɵngcc1.SidebarNavHelper }]; }, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci1uYXYtaXRlbS1jbGFzcy5waXBlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL3NpZGViYXIvc2lkZWJhci1uYXYvc2lkZWJhci1uYXYtaXRlbS1jbGFzcy5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRXBELE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHVCQUF1QixDQUFDOzs7QUFLdkQsTUFBTSxPQUFPLHVCQUF1QjtBQUFJLElBRXRDLFlBQ1MsTUFBd0I7QUFDaEMsUUFEUSxXQUFNLEdBQU4sTUFBTSxDQUFrQjtBQUNuQyxJQUFLLENBQUM7QUFDTixJQUVFLFNBQVMsQ0FBQyxJQUFTLEVBQUUsSUFBWTtBQUFLLFFBQ2xDLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2xELFFBQU0sSUFBSSxTQUFTLENBQUM7QUFDcEIsUUFBTSxJQUFJLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBRTtBQUNuRCxZQUFRLFNBQVMsR0FBRyxpQkFBaUIsUUFBUSxFQUFFLENBQUM7QUFDaEQsU0FBTztBQUFFLGFBQUksSUFBSSxRQUFRLEtBQUssVUFBVSxFQUFFO0FBQzFDLFlBQ1EsU0FBUyxHQUFHLEVBQUUsQ0FBRTtBQUN4QixTQUFPO0FBQUUsYUFBSTtBQUNiLFlBQVEsU0FBUyxHQUFHLG9CQUFvQixDQUFDO0FBQ3pDLFNBQU87QUFDUCxRQUFNLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxTQUFTLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7QUFDbkUsSUFBSSxDQUFDO0FBQ0w7cURBdkJDLElBQUksU0FBQyxtQkFDSixJQUFJLEVBQUUsc0JBQXNCLGVBQzdCO2lJQUNJO0FBQUU7QUFBa0QsWUFMakQsZ0JBQWdCO0FBQUk7Ozs7Ozs7QUFGQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQXRCQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBSkEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7U2lkZWJhck5hdkhlbHBlcn0gZnJvbSAnLi9zaWRlYmFyLW5hdi5zZXJ2aWNlJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnY1NpZGViYXJOYXZJdGVtQ2xhc3MnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTaWRlYmFyTmF2SXRlbUNsYXNzUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHB1YmxpYyBoZWxwZXI6IFNpZGViYXJOYXZIZWxwZXJcclxuICApIHt9XHJcblxyXG4gIC8vIHRyYW5zZm9ybShpdGVtOiBhbnksIC4uLmFyZ3M6IGFueVtdKTogYW55IHtcclxuICB0cmFuc2Zvcm0oaXRlbTogYW55LCBhcmdzPzogYW55W10pOiBhbnkge1xyXG4gICAgICBjb25zdCBpdGVtVHlwZSA9IHRoaXMuaGVscGVyLml0ZW1UeXBlKGl0ZW0pO1xyXG4gICAgICBsZXQgaXRlbUNsYXNzO1xyXG4gICAgICBpZiAoWydkaXZpZGVyJywgJ3RpdGxlJ10uaW5jbHVkZXMoaXRlbVR5cGUpKSB7XHJcbiAgICAgICAgaXRlbUNsYXNzID0gYGMtc2lkZWJhci1uYXYtJHtpdGVtVHlwZX1gO1xyXG4gICAgICB9IGVsc2UgaWYgKGl0ZW1UeXBlID09PSAnZHJvcGRvd24nKSB7XHJcbiAgICAgICAgLy8gaXRlbUNsYXNzID0gJ2Mtc2lkZWJhci1uYXYtZHJvcGRvd24nIDtcclxuICAgICAgICBpdGVtQ2xhc3MgPSAnJyA7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaXRlbUNsYXNzID0gJ2Mtc2lkZWJhci1uYXYtaXRlbSc7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGl0ZW0uY2xhc3MgPyBgJHtpdGVtQ2xhc3N9ICR7aXRlbS5jbGFzc31gIDogaXRlbUNsYXNzO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==