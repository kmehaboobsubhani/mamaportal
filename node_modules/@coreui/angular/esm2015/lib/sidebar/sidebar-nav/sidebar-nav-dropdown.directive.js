import { Directive, HostListener } from '@angular/core';
import { SidebarNavDropdownComponent } from './sidebar-nav-dropdown.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './sidebar-nav-dropdown.component';
export class SidebarNavDropdownToggleDirective {
    constructor(sidebarNavDropdown) {
        this.sidebarNavDropdown = sidebarNavDropdown;
    }
    toggleOpen($event) {
        $event.preventDefault();
        this.sidebarNavDropdown.toggleDropdown();
    }
}
SidebarNavDropdownToggleDirective.ɵfac = function SidebarNavDropdownToggleDirective_Factory(t) { return new (t || SidebarNavDropdownToggleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SidebarNavDropdownComponent)); };
SidebarNavDropdownToggleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SidebarNavDropdownToggleDirective, selectors: [["", "cSidebarNavDropdownToggle", ""]], hostBindings: function SidebarNavDropdownToggleDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function SidebarNavDropdownToggleDirective_click_HostBindingHandler($event) { return ctx.toggleOpen($event); });
    } }, exportAs: ["cSidebarNavDropdownToggle"] });
SidebarNavDropdownToggleDirective.ctorParameters = () => [
    { type: SidebarNavDropdownComponent }
];
SidebarNavDropdownToggleDirective.propDecorators = {
    toggleOpen: [{ type: HostListener, args: ['click', ['$event'],] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarNavDropdownToggleDirective, [{
        type: Directive,
        args: [{
                selector: '[cSidebarNavDropdownToggle]',
                exportAs: 'cSidebarNavDropdownToggle'
            }]
    }], function () { return [{ type: ɵngcc1.SidebarNavDropdownComponent }]; }, { toggleOpen: [{
            type: HostListener,
            args: ['click', ['$event']]
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci1uYXYtZHJvcGRvd24uZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL3NpZGViYXIvc2lkZWJhci1uYXYvc2lkZWJhci1uYXYtZHJvcGRvd24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3RELE9BQU8sRUFBQywyQkFBMkIsRUFBQyxNQUFNLGtDQUFrQyxDQUFDOzs7QUFTN0UsTUFBTSxPQUFPLGlDQUFpQztBQUM3QyxJQUFDLFlBQ1Usa0JBQStDO0FBQ3ZELFFBRFEsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUE2QjtBQUMxRCxJQUFLLENBQUM7QUFFUCxJQUNFLFVBQVUsQ0FBQyxNQUFXO0FBQ3ZCLFFBQUcsTUFBTSxDQUFDLGNBQWMsRUFBRSxDQUFDO0FBQzNCLFFBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGNBQWMsRUFBRSxDQUFDO0FBQzVDLElBQUMsQ0FBQztBQUNGOytEQWRBLFNBQVMsU0FBQyxtQkFDVCxRQUFRLEVBQUUsNkJBQTZCLG1CQUN2QyxRQUFRLEVBQUUsMkJBQTJCLGdCQUN0Qzs7O29EQUNLO0FBQUU7QUFFSixZQVhJLDJCQUEyQjtBQUFJO0FBQUk7QUFHN0IseUJBV1gsWUFBWSxTQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQztBQUM5Qjs7Ozs7Ozs7Ozs7QUFoQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBU0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFiQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFSQSxBQUFBLEFBY0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBIb3N0TGlzdGVuZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtTaWRlYmFyTmF2RHJvcGRvd25Db21wb25lbnR9IGZyb20gJy4vc2lkZWJhci1uYXYtZHJvcGRvd24uY29tcG9uZW50JztcblxuLyoqXG4gKiBBbGxvd3MgdGhlIGRyb3Bkb3duIHRvIGJlIHRvZ2dsZWQgdmlhIGNsaWNrLlxuICovXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbY1NpZGViYXJOYXZEcm9wZG93blRvZ2dsZV0nLFxuICBleHBvcnRBczogJ2NTaWRlYmFyTmF2RHJvcGRvd25Ub2dnbGUnLFxufSlcbmV4cG9ydCBjbGFzcyBTaWRlYmFyTmF2RHJvcGRvd25Ub2dnbGVEaXJlY3RpdmUge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHNpZGViYXJOYXZEcm9wZG93bjogU2lkZWJhck5hdkRyb3Bkb3duQ29tcG9uZW50XG4gICkgeyB9XG5cbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snLCBbJyRldmVudCddKVxuICB0b2dnbGVPcGVuKCRldmVudDogYW55KSB7XG4gICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5zaWRlYmFyTmF2RHJvcGRvd24udG9nZ2xlRHJvcGRvd24oKTtcbiAgfVxufVxuIl19