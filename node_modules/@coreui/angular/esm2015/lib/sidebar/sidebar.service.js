import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export class SidebarService {
    constructor() {
        this.sidebarState = new BehaviorSubject({});
        this.sidebarState$ = this.sidebarState.asObservable();
    }
    toggle(action) {
        this.sidebarState.next(action);
    }
}
SidebarService.ɵfac = function SidebarService_Factory(t) { return new (t || SidebarService)(); };
SidebarService.ɵprov = i0.ɵɵdefineInjectable({ factory: function SidebarService_Factory() { return new SidebarService(); }, token: SidebarService, providedIn: "root" });
SidebarService.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SidebarService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL3NpZGViYXIvc2lkZWJhci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUV2Qzs7QUFVQSxNQUFNLE9BQU8sY0FBYztBQUUzQixJQUdFO0FBQ0YsUUFKVSxpQkFBWSxHQUFHLElBQUksZUFBZSxDQUFpQixFQUFFLENBQUMsQ0FBQztBQUNoRSxRQUFDLGtCQUFhLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLEVBQUUsQ0FBQztBQUVuRCxJQUFpQixDQUFDO0FBRWxCLElBQUUsTUFBTSxDQUFDLE1BQXNCO0FBQzlCLFFBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbEMsSUFBQyxDQUFDO0FBQ0Y7aUdBQUM7QUFBRSx5S0FWRTtBQUFFO0NBSFAsVUFBVSxTQUFDLG1CQUNWLFVBQVUsRUFBRSxNQUFNLGVBQ25COzs7Ozs7QUFaQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVlBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFIQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQVpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IGludGVyZmFjZSBJU2lkZWJhckFjdGlvbiB7XG4gIG1pbmltaXplPzogYm9vbGVhbiB8ICd0b2dnbGUnO1xuICBvcGVuPzogYm9vbGVhbiB8ICd0b2dnbGUnO1xuICBpZD86IHN0cmluZztcbiAgc2lkZWJhcj86IGFueTtcbn1cblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgU2lkZWJhclNlcnZpY2Uge1xuXG4gIHByaXZhdGUgc2lkZWJhclN0YXRlID0gbmV3IEJlaGF2aW9yU3ViamVjdDxJU2lkZWJhckFjdGlvbj4oe30pO1xuICBzaWRlYmFyU3RhdGUkID0gdGhpcy5zaWRlYmFyU3RhdGUuYXNPYnNlcnZhYmxlKCk7XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIHRvZ2dsZShhY3Rpb246IElTaWRlYmFyQWN0aW9uKSB7XG4gICAgdGhpcy5zaWRlYmFyU3RhdGUubmV4dChhY3Rpb24pO1xuICB9XG4gIC8vIHRvZ2dsZU9wZW4oc3RhdGU6IGFueSkge1xuICAvLyAgIHRoaXMuc2lkZWJhclN0YXRlLm5leHQoc3RhdGUpO1xuICAvLyB9XG4gIC8vIHRvZ2dsZU1pbmltaXplKHN0YXRlOiBhbnkpIHtcbiAgLy8gICB0aGlzLnNpZGViYXJTdGF0ZS5uZXh0KHN0YXRlKTtcbiAgLy8gfVxufVxuIl19