import { Component, HostBinding, Inject, Input } from '@angular/core';
import { AccordionComponent } from './accordion.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../card/card-header.component';
import * as ɵngcc2 from '../card/card-body.component';
import * as ɵngcc3 from '../collapse/collapse.directive';
import * as ɵngcc4 from './accordion.component';

const _c0 = [[["", "c-accordion-header", ""]], "*"];
const _c1 = ["[c-accordion-header]", "*"];
export class AccordionGroupComponent {
    constructor(accordion) {
        this.isOpen = false;
        this.groupClass = '';
        this.cardClass = true;
        this.accordion = accordion;
    }
    ngOnInit() {
        this.accordion.addGroup(this);
    }
    ngOnDestroy() {
        this.accordion.removeGroup(this);
    }
    toggleGroup() {
        this.isOpen = !this.isOpen;
        this.accordion.closeOtherGroups(this);
    }
}
AccordionGroupComponent.ɵfac = function AccordionGroupComponent_Factory(t) { return new (t || AccordionGroupComponent)(ɵngcc0.ɵɵdirectiveInject(AccordionComponent)); };
AccordionGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionGroupComponent, selectors: [["c-accordion-group"]], hostVars: 2, hostBindings: function AccordionGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("card", ctx.cardClass);
    } }, inputs: { isOpen: "isOpen", groupClass: "groupClass" }, ngContentSelectors: _c1, decls: 4, vars: 1, consts: [[3, "click"], ["cCollapse", "", 3, "show"]], template: function AccordionGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵelementStart(0, "c-card-header", 0);
        ɵngcc0.ɵɵlistener("click", function AccordionGroupComponent_Template_c_card_header_click_0_listener() { return ctx.toggleGroup(); });
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "c-card-body", 1);
        ɵngcc0.ɵɵprojection(3, 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("show", !ctx.isOpen);
    } }, directives: [ɵngcc1.CardHeaderComponent, ɵngcc2.CardBodyComponent, ɵngcc3.CollapseDirective], styles: ["[_nghost-%COMP%]{margin-bottom:0}"] });
AccordionGroupComponent.ctorParameters = () => [
    { type: AccordionComponent, decorators: [{ type: Inject, args: [AccordionComponent,] }] }
];
AccordionGroupComponent.propDecorators = {
    isOpen: [{ type: Input }],
    groupClass: [{ type: Input }],
    cardClass: [{ type: HostBinding, args: ['class.card',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AccordionGroupComponent, [{
        type: Component,
        args: [{
                selector: 'c-accordion-group',
                template: "<c-card-header (click)=\"toggleGroup()\">\n  <ng-content select=\"[c-accordion-header]\"></ng-content>\n</c-card-header>\n<c-card-body cCollapse [show]=\"!isOpen\">\n  <ng-content></ng-content>\n</c-card-body>\n",
                styles: [":host{margin-bottom:0}"]
            }]
    }], function () { return [{ type: ɵngcc4.AccordionComponent, decorators: [{
                type: Inject,
                args: [AccordionComponent]
            }] }]; }, { isOpen: [{
            type: Input
        }], groupClass: [{
            type: Input
        }], cardClass: [{
            type: HostBinding,
            args: ['class.card']
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9hY2NvcmRpb24vYWNjb3JkaW9uLWdyb3VwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFvQixNQUFNLGVBQWUsQ0FBQztBQUN2RixPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7Ozs7O0FBT3pELE1BQU0sT0FBTyx1QkFBdUI7QUFBSSxJQVN0QyxZQUM4QixTQUE2QjtBQUMxRCxRQVRRLFdBQU0sR0FBRyxLQUFLLENBQUM7QUFDekIsUUFBVSxlQUFVLEdBQUcsRUFBRSxDQUFDO0FBRTNCLFFBQTZCLGNBQVMsR0FBRyxJQUFJLENBQUM7QUFFOUMsUUFNSSxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztBQUM5QixJQUFDLENBQUM7QUFFSCxJQUFFLFFBQVE7QUFDVCxRQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2pDLElBQUMsQ0FBQztBQUVILElBQUUsV0FBVztBQUFNLFFBQ2YsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDcEMsSUFBQyxDQUFDO0FBRUgsSUFBRSxXQUFXO0FBQ1osUUFBRyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztBQUM5QixRQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDekMsSUFBQyxDQUFDO0FBQ0Y7cURBakNBLFNBQVMsU0FBQyxtQkFDVCxRQUFRLEVBQUUsbUJBQW1CLG1CQUM3QjtnTUFBK0M7cUNBRWhEOzs7Ozs7Ozs7Ozs7O3dKQUNLO0FBQUU7QUFBa0QsWUFQbEQsa0JBQWtCLHVCQWlCckIsTUFBTSxTQUFDLGtCQUFrQjtBQUFTO0FBQUk7QUFFM0IscUJBVmIsS0FBSztBQUFNLHlCQUNYLEtBQUs7QUFBTSx3QkFFWCxXQUFXLFNBQUMsWUFBWTtBQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBYkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFPQSxBQUFBLEFBQUEsQUFBQSxBQVNBLEFBQ0EsQUFBQSxBQVJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBaENBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBTkEsQUFBQSxBQWlCQSxBQUFBLEFBQUEsQUFBQSxBQVJBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSG9zdEJpbmRpbmcsIEluamVjdCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7QWNjb3JkaW9uQ29tcG9uZW50fSBmcm9tICcuL2FjY29yZGlvbi5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjLWFjY29yZGlvbi1ncm91cCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9hY2NvcmRpb24tZ3JvdXAuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9hY2NvcmRpb24tZ3JvdXAuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBBY2NvcmRpb25Hcm91cENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcblxuICBASW5wdXQoKSBpc09wZW4gPSBmYWxzZTtcbiAgQElucHV0KCkgZ3JvdXBDbGFzcyA9ICcnO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuY2FyZCcpIGNhcmRDbGFzcyA9IHRydWU7XG5cbiAgYWNjb3JkaW9uOiBBY2NvcmRpb25Db21wb25lbnQ7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChBY2NvcmRpb25Db21wb25lbnQpIGFjY29yZGlvbjogQWNjb3JkaW9uQ29tcG9uZW50LFxuICAgICkge1xuICAgIC8vIHRoaXMuZ3JvdXBDbGFzcyA9IGAke3RoaXMuZ3JvdXBDbGFzc30gYy1wLTAgYy1tLTAgYy1jYXJkYDtcbiAgICB0aGlzLmFjY29yZGlvbiA9IGFjY29yZGlvbjtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuYWNjb3JkaW9uLmFkZEdyb3VwKHRoaXMpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5hY2NvcmRpb24ucmVtb3ZlR3JvdXAodGhpcyk7XG4gIH1cblxuICB0b2dnbGVHcm91cCgpIHtcbiAgICB0aGlzLmlzT3BlbiA9ICF0aGlzLmlzT3BlbjtcbiAgICB0aGlzLmFjY29yZGlvbi5jbG9zZU90aGVyR3JvdXBzKHRoaXMpO1xuICB9XG59XG4iXX0=