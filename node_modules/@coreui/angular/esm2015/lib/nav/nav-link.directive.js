import { Directive, HostBinding, Input } from '@angular/core';
import classNames from 'classnames';
import * as ɵngcc0 from '@angular/core';
export class NavLinkDirective {
    constructor() {
        this.disabled = null;
        this.tabindex = null;
    }
    get isDisabled() {
        return (this.disabled !== 'false' && this.disabled !== false && this.disabled !== null) ? this.disabled : null;
    }
    get getTabindex() {
        return this.disabled ? null : this.tabindex != null ? this.tabindex : '0';
    }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const classes = classNames({
            'nav-link': true,
            disabled: this.disabled,
            active: this.active
        });
        return classes;
    }
}
NavLinkDirective.ɵfac = function NavLinkDirective_Factory(t) { return new (t || NavLinkDirective)(); };
NavLinkDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NavLinkDirective, selectors: [["", "cNavLink", ""]], hostVars: 4, hostBindings: function NavLinkDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-disabled", ctx.isDisabled)("tabindex", ctx.getTabindex);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { disabled: "disabled", tabindex: "tabindex", active: "active" } });
NavLinkDirective.ctorParameters = () => [];
NavLinkDirective.propDecorators = {
    disabled: [{ type: Input }],
    tabindex: [{ type: Input }],
    active: [{ type: Input }],
    isDisabled: [{ type: HostBinding, args: ['attr.aria-disabled',] }],
    getTabindex: [{ type: HostBinding, args: ['attr.tabindex',] }],
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavLinkDirective, [{
        type: Directive,
        args: [{
                selector: '[cNavLink]'
            }]
    }], function () { return []; }, { disabled: [{
            type: Input
        }], tabindex: [{
            type: Input
        }], isDisabled: [{
            type: HostBinding,
            args: ['attr.aria-disabled']
        }], getTabindex: [{
            type: HostBinding,
            args: ['attr.tabindex']
        }], getClasses: [{
            type: HostBinding,
            args: ['class']
        }], active: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LWxpbmsuZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL25hdi9uYXYtbGluay5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sVUFBVSxNQUFNLFlBQVksQ0FBQzs7QUFLcEMsTUFBTSxPQUFPLGdCQUFnQjtBQUU3QixJQThCRTtBQUFpQixRQTlCUixhQUFRLEdBQTRCLElBQUksQ0FBQztBQUNuRCxRQUFVLGFBQVEsR0FBa0IsSUFBSSxDQUFDO0FBQ3pDLElBNEJpQixDQUFDO0FBRW5CLElBNUJFLElBQ0ksVUFBVTtBQUFNLFFBQ2xCLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxLQUFLLE9BQU8sSUFBSSxJQUFJLENBQUMsUUFBUSxLQUFLLEtBQUssSUFBSSxJQUFJLENBQUMsUUFBUSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBbUIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQzdILElBQUMsQ0FBQztBQUVILElBQUUsSUFDSSxXQUFXO0FBQU0sUUFDbkIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7QUFDN0UsSUFBQyxDQUFDO0FBRUgsSUFBRSxJQUNJLFVBQVU7QUFDZixRQUFHLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztBQUMzQixJQUFDLENBQUM7QUFFSCxJQUFFLElBQUksV0FBVztBQUNoQixRQUFHLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FDeEI7QUFDTCxZQUFPLFVBQVUsRUFBRSxJQUFJO0FBQ3ZCLFlBQU8sUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO0FBQzlCLFlBQU8sTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO0FBQzFCLFNBQU0sQ0FDRixDQUFDO0FBQ0wsUUFBRyxPQUFPLE9BQU8sQ0FBQztBQUNsQixJQUFDLENBQUM7QUFFSDs4Q0FuQ0MsU0FBUyxTQUFDLG1CQUNULFFBQVEsRUFBRTtDQUFZLGdCQUN2Qjs7O3FGQUNLO0FBQUU7QUFFWTtBQUNoQix1QkFERCxLQUFLO0FBQU0sdUJBQ1gsS0FBSztBQUFNLHFCQUNYLEtBQUs7QUFBTSx5QkFFWCxXQUFXLFNBQUMsb0JBQW9CO0FBQzdCLDBCQUlILFdBQVcsU0FBQyxlQUFlO0FBQ3hCLHlCQUlILFdBQVcsU0FBQyxPQUFPO0FBQ2pCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdkJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBZ0NBLEFBOUJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBNkJBLEFBQUEsQUExQkEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFqQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUdBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2NOYXZMaW5rXScsXG59KVxuZXhwb3J0IGNsYXNzIE5hdkxpbmtEaXJlY3RpdmUge1xuXG4gIEBJbnB1dCgpIGRpc2FibGVkOiBudWxsIHwgc3RyaW5nIHwgYm9vbGVhbiA9IG51bGw7XG4gIEBJbnB1dCgpIHRhYmluZGV4OiBzdHJpbmcgfCBudWxsID0gbnVsbDtcbiAgQElucHV0KCkgYWN0aXZlOiBib29sZWFuO1xuXG4gIEBIb3N0QmluZGluZygnYXR0ci5hcmlhLWRpc2FibGVkJylcbiAgZ2V0IGlzRGlzYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICh0aGlzLmRpc2FibGVkICE9PSAnZmFsc2UnICYmIHRoaXMuZGlzYWJsZWQgIT09IGZhbHNlICYmIHRoaXMuZGlzYWJsZWQgIT09IG51bGwpID8gdGhpcy5kaXNhYmxlZCBhcyBib29sZWFuIDogbnVsbDtcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnYXR0ci50YWJpbmRleCcpXG4gIGdldCBnZXRUYWJpbmRleCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmRpc2FibGVkID8gbnVsbCA6IHRoaXMudGFiaW5kZXggIT0gbnVsbCA/IHRoaXMudGFiaW5kZXggOiAnMCc7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcbiAgZ2V0IGdldENsYXNzZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuaG9zdENsYXNzZXM7XG4gIH1cblxuICBnZXQgaG9zdENsYXNzZXMoKSB7XG4gICAgY29uc3QgY2xhc3NlcyA9IGNsYXNzTmFtZXMoXG4gICAgICB7XG4gICAgICAgICduYXYtbGluayc6IHRydWUsXG4gICAgICAgIGRpc2FibGVkOiB0aGlzLmRpc2FibGVkLFxuICAgICAgICBhY3RpdmU6IHRoaXMuYWN0aXZlXG4gICAgICB9LFxuICAgICk7XG4gICAgcmV0dXJuIGNsYXNzZXM7XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG59XG4iXX0=