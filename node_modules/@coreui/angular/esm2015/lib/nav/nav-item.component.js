import { Component, HostBinding } from '@angular/core';
import classNames from 'classnames';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class NavItemComponent {
    constructor() { }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const classes = classNames({
            'nav-item': true,
        });
        return classes;
    }
    ngOnInit() {
    }
}
NavItemComponent.ɵfac = function NavItemComponent_Factory(t) { return new (t || NavItemComponent)(); };
NavItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NavItemComponent, selectors: [["c-nav-item"]], hostVars: 2, hostBindings: function NavItemComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function NavItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{display:list-item;text-align:match-parent}"] });
NavItemComponent.ctorParameters = () => [];
NavItemComponent.propDecorators = {
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavItemComponent, [{
        type: Component,
        args: [{
                selector: 'c-nav-item',
                template: "<ng-content></ng-content>\n",
                styles: [":host{display:list-item;text-align:match-parent}"]
            }]
    }], function () { return []; }, { getClasses: [{
            type: HostBinding,
            args: ['class']
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL25hdi9uYXYtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDL0QsT0FBTyxVQUFVLE1BQU0sWUFBWSxDQUFDOzs7O0FBT3BDLE1BQU0sT0FBTyxnQkFBZ0I7QUFBSSxJQWdCL0IsZ0JBQWdCLENBQUM7QUFFbkIsSUFoQkUsSUFDSSxVQUFVO0FBQ2YsUUFBRyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7QUFDM0IsSUFBQyxDQUFDO0FBRUgsSUFBRSxJQUFJLFdBQVc7QUFDaEIsUUFBRyxNQUFNLE9BQU8sR0FBRyxVQUFVLENBQ3hCO0FBQ0wsWUFBTyxVQUFVLEVBQUUsSUFBSTtBQUN2QixTQUFNLENBQ0YsQ0FBQztBQUNMLFFBQUcsT0FBTyxPQUFPLENBQUM7QUFDbEIsSUFBQyxDQUFDO0FBRUgsSUFFRSxRQUFRO0FBQU0sSUFDZCxDQUFDO0FBRUg7OENBMUJDLFNBQVMsU0FBQyxtQkFDVCxRQUFRLEVBQUU7Q0FBWSxtQkFDdEIsdUNBQXdDLDhGQUV6Qzs7Ozs7b0ZBQ0s7QUFBRTtBQUVOO0FBQ2EseUJBRFosV0FBVyxTQUFDLE9BQU87QUFDakI7Ozs7Ozs7Ozs7OztBQVhBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUFBLEFBQUEsQUFnQkEsQUFBQSxBQUFBLEFBZEEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBSUEsQUFBQSxBQUNBLEFBQUEsQUF4QkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFHQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2MtbmF2LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vbmF2LWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9uYXYtaXRlbS5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIE5hdkl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKVxuICBnZXQgZ2V0Q2xhc3NlcygpIHtcbiAgICByZXR1cm4gdGhpcy5ob3N0Q2xhc3NlcztcbiAgfVxuXG4gIGdldCBob3N0Q2xhc3NlcygpIHtcbiAgICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyhcbiAgICAgIHtcbiAgICAgICAgJ25hdi1pdGVtJzogdHJ1ZSxcbiAgICAgIH0sXG4gICAgKTtcbiAgICByZXR1cm4gY2xhc3NlcztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gIH1cblxufVxuIl19