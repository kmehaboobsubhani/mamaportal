import { Component, HostBinding, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class CardGroupComponent {
    constructor() {
        this.deck = false;
        this.columns = false;
    }
    get hostClasses() {
        return this.getClasses();
    }
    getClasses() {
        return `card-${this.columns ? 'columns' : this.deck ? 'deck' : 'group'}`;
    }
}
CardGroupComponent.ɵfac = function CardGroupComponent_Factory(t) { return new (t || CardGroupComponent)(); };
CardGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CardGroupComponent, selectors: [["c-card-group"], ["", "c-card-group", ""]], hostVars: 2, hostBindings: function CardGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.hostClasses);
    } }, inputs: { deck: "deck", columns: "columns" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function CardGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
CardGroupComponent.propDecorators = {
    deck: [{ type: Input }],
    columns: [{ type: Input }],
    hostClasses: [{ type: HostBinding, args: ['class',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CardGroupComponent, [{
        type: Component,
        args: [{
                selector: 'c-card-group, [c-card-group]',
                template: '<ng-content></ng-content>'
            }]
    }], function () { return []; }, { deck: [{
            type: Input
        }], columns: [{
            type: Input
        }], hostClasses: [{
            type: HostBinding,
            args: ['class']
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC1ncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvY2FyZC9jYXJkLWdyb3VwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7Ozs7QUFNNUQsTUFBTSxPQUFPLGtCQUFrQjtBQUUvQixJQU5BO0FBQ0ksUUFLTyxTQUFJLEdBQUcsS0FBSyxDQUFDO0FBQ3ZCLFFBQVUsWUFBTyxHQUFHLEtBQUssQ0FBQztBQUUzQixJQVFBLENBQUM7QUFDQSxJQVRDLElBQ0ksV0FBVztBQUFNLFFBQ25CLE9BQU8sSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0FBQzVCLElBQUMsQ0FBQztBQUVILElBQUUsVUFBVTtBQUNYLFFBQUcsT0FBTyxRQUFRLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUM1RSxJQUFDLENBQUM7QUFDRjtnREFqQkEsU0FBUyxTQUFDLG1CQUNULFFBQVEsRUFBRTtlQUE4QixtQkFDeEMsUUFBUSxFQUFFLDJCQUEyQixlQUN0Qzs7Ozs7NkJBQ0s7QUFBRTtBQUVJLG1CQUFULEtBQUs7QUFBTSxzQkFDWCxLQUFLO0FBQU0sMEJBRVgsV0FBVyxTQUFDLE9BQU87QUFDakI7Ozs7Ozs7Ozs7Ozs7OztBQVpBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQU1BLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFNQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVVBLEFBQUEsQUFSQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFoQkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBR0EsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjLWNhcmQtZ3JvdXAsIFtjLWNhcmQtZ3JvdXBdJyxcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+J1xufSlcbmV4cG9ydCBjbGFzcyBDYXJkR3JvdXBDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpIGRlY2sgPSBmYWxzZTtcbiAgQElucHV0KCkgY29sdW1ucyA9IGZhbHNlO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKVxuICBnZXQgaG9zdENsYXNzZXMoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5nZXRDbGFzc2VzKCk7XG4gIH1cblxuICBnZXRDbGFzc2VzKCkge1xuICAgIHJldHVybiBgY2FyZC0ke3RoaXMuY29sdW1ucyA/ICdjb2x1bW5zJyA6IHRoaXMuZGVjayA/ICdkZWNrJyA6ICdncm91cCd9YDtcbiAgfVxufVxuIl19