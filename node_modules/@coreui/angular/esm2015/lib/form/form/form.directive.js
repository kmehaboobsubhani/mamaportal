import { Directive, HostBinding, Input } from '@angular/core';
import { chkBoolProp } from '../../shared/check-bool-prop';
import * as ɵngcc0 from '@angular/core';
export class FormDirective {
    constructor() { }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const classes = {
            'form-inline': chkBoolProp(this.inline),
            'was-validated': chkBoolProp(this.wasValidated),
        };
        return classes;
    }
}
FormDirective.ɵfac = function FormDirective_Factory(t) { return new (t || FormDirective)(); };
FormDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormDirective, selectors: [["", "cForm", ""]], hostVars: 2, hostBindings: function FormDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { inline: "inline", wasValidated: "wasValidated" } });
FormDirective.ctorParameters = () => [];
FormDirective.propDecorators = {
    inline: [{ type: Input }],
    wasValidated: [{ type: Input }],
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormDirective, [{
        type: Directive,
        args: [{
                selector: '[cForm]'
            }]
    }], function () { return []; }, { getClasses: [{
            type: HostBinding,
            args: ['class']
        }], inline: [{
            type: Input
        }], wasValidated: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvZm9ybS9mb3JtL2Zvcm0uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sOEJBQThCLENBQUM7O0FBSzNELE1BQU0sT0FBTyxhQUFhO0FBRTFCLElBaUJFLGdCQUFnQixDQUFDO0FBQ2xCLElBZkMsSUFDSSxVQUFVO0FBQ2YsUUFBRyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7QUFDM0IsSUFBQyxDQUFDO0FBRUgsSUFBRSxJQUFJLFdBQVc7QUFFakIsUUFBSSxNQUFNLE9BQU8sR0FBRztBQUNuQixZQUFLLGFBQWEsRUFBRSxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztBQUM1QyxZQUFLLGVBQWUsRUFBRSxXQUFXLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztBQUNwRCxTQUFJLENBQUM7QUFDTCxRQUFHLE9BQU8sT0FBTyxDQUFDO0FBQ2xCLElBQUMsQ0FBQztBQUVIOzJDQXRCQyxTQUFTLFNBQUMsbUJBQ1QsUUFBUSxFQUFFO0lBQVMsZUFDcEI7O3VFQUNLO0FBQUU7QUFFWTtBQUNNLHFCQUR2QixLQUFLO0FBQU0sMkJBQ1gsS0FBSztBQUFNLHlCQUVYLFdBQVcsU0FBQyxPQUFPO0FBQ2pCOzs7Ozs7Ozs7Ozs7OztBQVpBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQW1CQSxBQUFBLEFBQUEsQUFkQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBcEJBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFHQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0QmluZGluZywgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNoa0Jvb2xQcm9wIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2NoZWNrLWJvb2wtcHJvcCc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tjRm9ybV0nXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1EaXJlY3RpdmUge1xuXG4gIEBJbnB1dCgpIGlubGluZTogYm9vbGVhbjtcbiAgQElucHV0KCkgd2FzVmFsaWRhdGVkOiBib29sZWFuO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKVxuICBnZXQgZ2V0Q2xhc3NlcygpIHtcbiAgICByZXR1cm4gdGhpcy5ob3N0Q2xhc3NlcztcbiAgfVxuXG4gIGdldCBob3N0Q2xhc3NlcygpIHtcblxuICAgIGNvbnN0IGNsYXNzZXMgPSB7XG4gICAgICAnZm9ybS1pbmxpbmUnOiBjaGtCb29sUHJvcCh0aGlzLmlubGluZSksXG4gICAgICAnd2FzLXZhbGlkYXRlZCc6IGNoa0Jvb2xQcm9wKHRoaXMud2FzVmFsaWRhdGVkKSxcbiAgICB9O1xuICAgIHJldHVybiBjbGFzc2VzO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cbn1cbiJdfQ==