import { Component, HostBinding, Input } from '@angular/core';
export class FormFeedbackComponent {
    constructor() { }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const validMode = this.tooltip ? 'tooltip' : 'feedback';
        const classes = {
            [`valid-${validMode}`]: this.valid === true,
            [`invalid-${validMode}`]: this.valid !== true,
        };
        return classes;
    }
}
FormFeedbackComponent.decorators = [
    { type: Component, args: [{
                selector: 'c-form-feedback',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            },] }
];
FormFeedbackComponent.ctorParameters = () => [];
FormFeedbackComponent.propDecorators = {
    valid: [{ type: Input }],
    tooltip: [{ type: Input }],
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1mZWVkYmFjay5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL2Zvcm0vZm9ybS1mZWVkYmFjay9mb3JtLWZlZWRiYWNrLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPOUQsTUFBTSxPQUFPLHFCQUFxQjtJQXFCaEMsZ0JBQWdCLENBQUM7SUFoQmpCLElBQ0ksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0lBRUQsSUFBSSxXQUFXO1FBRWIsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7UUFFeEQsTUFBTSxPQUFPLEdBQUc7WUFDZCxDQUFDLFNBQVMsU0FBUyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxLQUFLLElBQUk7WUFDM0MsQ0FBQyxXQUFXLFNBQVMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLEtBQUssS0FBSyxJQUFJO1NBQzlDLENBQUM7UUFDRixPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDOzs7WUF4QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLHVDQUE2Qzs7YUFFOUM7Ozs7b0JBR0UsS0FBSztzQkFDTCxLQUFLO3lCQUVMLFdBQVcsU0FBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYy1mb3JtLWZlZWRiYWNrJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vZm9ybS1mZWVkYmFjay5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vZm9ybS1mZWVkYmFjay5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGb3JtRmVlZGJhY2tDb21wb25lbnQge1xyXG5cclxuICBASW5wdXQoKSB2YWxpZDogYm9vbGVhbjtcclxuICBASW5wdXQoKSB0b29sdGlwOiBib29sZWFuO1xyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcclxuICBnZXQgZ2V0Q2xhc3NlcygpIHtcclxuICAgIHJldHVybiB0aGlzLmhvc3RDbGFzc2VzO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGhvc3RDbGFzc2VzKCkge1xyXG5cclxuICAgIGNvbnN0IHZhbGlkTW9kZSA9IHRoaXMudG9vbHRpcCA/ICd0b29sdGlwJyA6ICdmZWVkYmFjayc7XHJcblxyXG4gICAgY29uc3QgY2xhc3NlcyA9IHtcclxuICAgICAgW2B2YWxpZC0ke3ZhbGlkTW9kZX1gXTogdGhpcy52YWxpZCA9PT0gdHJ1ZSxcclxuICAgICAgW2BpbnZhbGlkLSR7dmFsaWRNb2RlfWBdOiB0aGlzLnZhbGlkICE9PSB0cnVlLFxyXG4gICAgfTtcclxuICAgIHJldHVybiBjbGFzc2VzO1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbn1cclxuIl19