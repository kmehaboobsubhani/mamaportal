import { Component, HostBinding, Input } from '@angular/core';
import { chkBoolProp } from '../../shared/check-bool-prop';
export class FormCheckComponent {
    constructor() { }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        if (this.variant === 'switch') {
            this.custom = true;
        }
        const variantClass = this.custom ? 'custom-control' : 'form-check';
        const isCustom = chkBoolProp(this.custom);
        const classes = {
            'form-check': !isCustom,
            'custom-control': isCustom,
            [`custom-${this.variant}`]: !!this.variant,
            [`${variantClass}-inline`]: chkBoolProp(this.inline),
            disabled: chkBoolProp(this.disabled)
        };
        return classes;
    }
    ngOnInit() {
    }
}
FormCheckComponent.decorators = [
    { type: Component, args: [{
                selector: 'c-form-check',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            },] }
];
FormCheckComponent.ctorParameters = () => [];
FormCheckComponent.propDecorators = {
    custom: [{ type: Input }],
    disabled: [{ type: Input }],
    inline: [{ type: Input }],
    variant: [{ type: Input }],
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1jaGVjay5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL2Zvcm0vZm9ybS1jaGVjay9mb3JtLWNoZWNrLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDdEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBTzNELE1BQU0sT0FBTyxrQkFBa0I7SUErQjdCLGdCQUFnQixDQUFDO0lBdkJqQixJQUNJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQztJQUVELElBQUksV0FBVztRQUViLElBQUksSUFBSSxDQUFDLE9BQU8sS0FBSyxRQUFRLEVBQUU7WUFDN0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7U0FDcEI7UUFDRCxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDO1FBQ25FLE1BQU0sUUFBUSxHQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFM0MsTUFBTSxPQUFPLEdBQUc7WUFDZCxZQUFZLEVBQUUsQ0FBQyxRQUFRO1lBQ3ZCLGdCQUFnQixFQUFFLFFBQVE7WUFDMUIsQ0FBQyxVQUFVLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTztZQUMxQyxDQUFDLEdBQUcsWUFBWSxTQUFTLENBQUMsRUFBRSxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUNwRCxRQUFRLEVBQUUsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7U0FDckMsQ0FBQztRQUNGLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFJRCxRQUFRO0lBQ1IsQ0FBQzs7O1lBdkNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsY0FBYztnQkFDeEIsdUNBQTBDOzthQUUzQzs7OztxQkFHRSxLQUFLO3VCQUNMLEtBQUs7cUJBQ0wsS0FBSztzQkFDTCxLQUFLO3lCQUdMLFdBQVcsU0FBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBjaGtCb29sUHJvcCB9IGZyb20gJy4uLy4uL3NoYXJlZC9jaGVjay1ib29sLXByb3AnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdjLWZvcm0tY2hlY2snLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9mb3JtLWNoZWNrLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9mb3JtLWNoZWNrLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEZvcm1DaGVja0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBJbnB1dCgpIGN1c3RvbTogYm9vbGVhbjtcclxuICBASW5wdXQoKSBkaXNhYmxlZDogYm9vbGVhbjtcclxuICBASW5wdXQoKSBpbmxpbmU6IGJvb2xlYW47XHJcbiAgQElucHV0KCkgdmFyaWFudDogJ2NoZWNrYm94JyB8ICdyYWRpbycgfCAnc3dpdGNoJztcclxuXHJcblxyXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKVxyXG4gIGdldCBnZXRDbGFzc2VzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuaG9zdENsYXNzZXM7XHJcbiAgfVxyXG5cclxuICBnZXQgaG9zdENsYXNzZXMoKSB7XHJcblxyXG4gICAgaWYgKHRoaXMudmFyaWFudCA9PT0gJ3N3aXRjaCcpIHtcclxuICAgICAgdGhpcy5jdXN0b20gPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgY29uc3QgdmFyaWFudENsYXNzID0gdGhpcy5jdXN0b20gPyAnY3VzdG9tLWNvbnRyb2wnIDogJ2Zvcm0tY2hlY2snO1xyXG4gICAgY29uc3QgaXNDdXN0b20gPSAgY2hrQm9vbFByb3AodGhpcy5jdXN0b20pO1xyXG5cclxuICAgIGNvbnN0IGNsYXNzZXMgPSB7XHJcbiAgICAgICdmb3JtLWNoZWNrJzogIWlzQ3VzdG9tLFxyXG4gICAgICAnY3VzdG9tLWNvbnRyb2wnOiBpc0N1c3RvbSxcclxuICAgICAgW2BjdXN0b20tJHt0aGlzLnZhcmlhbnR9YF06ICEhdGhpcy52YXJpYW50LFxyXG4gICAgICBbYCR7dmFyaWFudENsYXNzfS1pbmxpbmVgXTogY2hrQm9vbFByb3AodGhpcy5pbmxpbmUpLFxyXG4gICAgICBkaXNhYmxlZDogY2hrQm9vbFByb3AodGhpcy5kaXNhYmxlZClcclxuICAgIH07XHJcbiAgICByZXR1cm4gY2xhc3NlcztcclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gIH1cclxuXHJcbn1cclxuIl19