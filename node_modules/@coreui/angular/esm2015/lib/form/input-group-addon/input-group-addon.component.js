import { Component, HostBinding, Input } from '@angular/core';
import { chkBoolProp } from '../../shared/check-bool-prop';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
const _c1 = "[_nghost-%COMP%]     .btn:not(:hover):not(:focus){box-shadow:none!important}";
export class InputGroupAddonComponent {
    constructor() { }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const addon = chkBoolProp(this.prepend) ? 'prepend' : 'append';
        const classes = {
            [`input-group-${addon}`]: true,
        };
        return classes;
    }
    ngOnInit() { }
}
InputGroupAddonComponent.ɵfac = function InputGroupAddonComponent_Factory(t) { return new (t || InputGroupAddonComponent)(); };
InputGroupAddonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputGroupAddonComponent, selectors: [["ng-component"]], hostVars: 2, hostBindings: function InputGroupAddonComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { prepend: "prepend" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function InputGroupAddonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [_c1] });
InputGroupAddonComponent.ctorParameters = () => [];
InputGroupAddonComponent.propDecorators = {
    prepend: [{ type: Input }],
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputGroupAddonComponent, [{
        type: Component,
        args: [{
                template: "<ng-content></ng-content>\n",
                styles: [":host ::ng-deep .btn:not(:hover):not(:focus){box-shadow:none!important}"]
            }]
    }], function () { return []; }, { getClasses: [{
            type: HostBinding,
            args: ['class']
        }], prepend: [{
            type: Input
        }] }); })();
export class InputGroupPrependComponent extends InputGroupAddonComponent {
    constructor() {
        super(...arguments);
        this.prepend = true;
    }
}
InputGroupPrependComponent.ɵfac = function InputGroupPrependComponent_Factory(t) { return ɵInputGroupPrependComponent_BaseFactory(t || InputGroupPrependComponent); };
InputGroupPrependComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputGroupPrependComponent, selectors: [["c-input-group-prepend"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function InputGroupPrependComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [_c1] });
const ɵInputGroupPrependComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(InputGroupPrependComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputGroupPrependComponent, [{
        type: Component,
        args: [{
                selector: 'c-input-group-prepend',
                template: "<ng-content></ng-content>\n",
                styles: [":host ::ng-deep .btn:not(:hover):not(:focus){box-shadow:none!important}"]
            }]
    }], null, null); })();
export class InputGroupAppendComponent extends InputGroupAddonComponent {
    constructor() {
        super(...arguments);
        this.prepend = false;
    }
}
InputGroupAppendComponent.ɵfac = function InputGroupAppendComponent_Factory(t) { return ɵInputGroupAppendComponent_BaseFactory(t || InputGroupAppendComponent); };
InputGroupAppendComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputGroupAppendComponent, selectors: [["c-input-group-append"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function InputGroupAppendComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [_c1] });
const ɵInputGroupAppendComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(InputGroupAppendComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputGroupAppendComponent, [{
        type: Component,
        args: [{
                selector: 'c-input-group-append',
                template: "<ng-content></ng-content>\n",
                styles: [":host ::ng-deep .btn:not(:hover):not(:focus){box-shadow:none!important}"]
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtZ3JvdXAtYWRkb24uY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL2Zvcm0vaW5wdXQtZ3JvdXAtYWRkb24vaW5wdXQtZ3JvdXAtYWRkb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUV0RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sOEJBQThCLENBQUM7Ozs7O0FBTzNELE1BQU0sT0FBTyx3QkFBd0I7QUFBSSxJQWdCdkMsZ0JBQWUsQ0FBQztBQUVsQixJQWZFLElBQ0ksVUFBVTtBQUNmLFFBQUcsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0FBQzNCLElBQUMsQ0FBQztBQUVILElBQUUsSUFBSSxXQUFXO0FBQ2hCLFFBQUcsTUFBTSxLQUFLLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7QUFFbkUsUUFBSSxNQUFNLE9BQU8sR0FBRztBQUNuQixZQUFLLENBQUMsZUFBZSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUk7QUFDbkMsU0FBSSxDQUFDO0FBQ0wsUUFBRyxPQUFPLE9BQU8sQ0FBQztBQUNsQixJQUFDLENBQUM7QUFDRixJQUVDLFFBQVEsS0FBVSxDQUFDO0FBQ3BCO3NEQXhCQSxTQUFTLFNBQUMsbUJBRVQ7RUFBaUQscUhBRWxEOzs7OzswQkFDSztBQUFFO0FBQ0w7QUFFZSxzQkFGZixLQUFLO0FBQU0seUJBRVgsV0FBVyxTQUFDLE9BQU87QUFDakI7Ozs7Ozs7Ozs7OztvQkFBRTtBQXNCUCxNQUFNLE9BQU8sMEJBQTJCLFNBQVEsd0JBQXdCO0FBQ3ZFLElBTkQ7QUFDSTtBQUE4QixRQUtoQyxZQUFPLEdBQUcsSUFBSSxDQUFDO0FBQ2hCLElBQUQsQ0FBQztBQUVEO3dEQVRDLFNBQVMsU0FBQyxtQkFDVCxRQUFRLEVBQUUsdUJBQXVCLG1CQUNqQztpQkFBaUQscUhBRWxEOzs7Ozs7Ozs7Ozs7MEJBQ0s7QUFTTixNQUFNLE9BQU8seUJBQTBCLFNBQVEsd0JBQXdCO0FBQ3RFLElBTkQ7QUFDSTtBQUE4QixRQUtoQyxZQUFPLEdBQUcsS0FBSyxDQUFDO0FBQ2pCLElBQUQsQ0FBQztBQUNBO3VEQVJBLFNBQVMsU0FBQyxtQkFDVCxRQUFRLEVBQUUsc0JBQXNCLG1CQUNoQzttQkFBaUQscUhBRWxEOzs7Ozs7Ozs7Ozs7O0FBM0NBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFPQSxBQUFBLEFBQUEsQUFBQSxBQWdCQSxBQUFBLEFBQUEsQUFiQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUF2QkEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUVBLEFBRUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBdUJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUxBLEFBTUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFQQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQVVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUxBLEFBTUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFQQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgY2hrQm9vbFByb3AgfSBmcm9tICcuLi8uLi9zaGFyZWQvY2hlY2stYm9vbC1wcm9wJztcblxuQENvbXBvbmVudCh7XG4gIC8vIHNlbGVjdG9yOiAnYy1pbnB1dC1ncm91cC1hZGRvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9pbnB1dC1ncm91cC1hZGRvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2lucHV0LWdyb3VwLWFkZG9uLmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIElucHV0R3JvdXBBZGRvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIHByZXBlbmQ6IGJvb2xlYW47XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXG4gIGdldCBnZXRDbGFzc2VzKCkge1xuICAgIHJldHVybiB0aGlzLmhvc3RDbGFzc2VzO1xuICB9XG5cbiAgZ2V0IGhvc3RDbGFzc2VzKCkge1xuICAgIGNvbnN0IGFkZG9uID0gY2hrQm9vbFByb3AodGhpcy5wcmVwZW5kKSA/ICdwcmVwZW5kJyA6ICdhcHBlbmQnO1xuXG4gICAgY29uc3QgY2xhc3NlcyA9IHtcbiAgICAgIFtgaW5wdXQtZ3JvdXAtJHthZGRvbn1gXTogdHJ1ZSxcbiAgICB9O1xuICAgIHJldHVybiBjbGFzc2VzO1xuICB9XG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHt9XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2MtaW5wdXQtZ3JvdXAtcHJlcGVuZCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9pbnB1dC1ncm91cC1hZGRvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2lucHV0LWdyb3VwLWFkZG9uLmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIElucHV0R3JvdXBQcmVwZW5kQ29tcG9uZW50IGV4dGVuZHMgSW5wdXRHcm91cEFkZG9uQ29tcG9uZW50IHtcbiAgcHJlcGVuZCA9IHRydWU7XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2MtaW5wdXQtZ3JvdXAtYXBwZW5kJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LWdyb3VwLWFkZG9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vaW5wdXQtZ3JvdXAtYWRkb24uY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRHcm91cEFwcGVuZENvbXBvbmVudCBleHRlbmRzIElucHV0R3JvdXBBZGRvbkNvbXBvbmVudCB7XG4gIHByZXBlbmQgPSBmYWxzZTtcbn1cbiJdfQ==