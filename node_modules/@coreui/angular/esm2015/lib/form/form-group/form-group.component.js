import { Component, HostBinding, Input } from '@angular/core';
import { chkBoolProp } from '../../shared/check-bool-prop';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class FormGroupComponent {
    constructor() { }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const classes = {
            'form-group': true,
            disabled: chkBoolProp(this.disabled)
        };
        return classes;
    }
    ngOnInit() {
    }
}
FormGroupComponent.ɵfac = function FormGroupComponent_Factory(t) { return new (t || FormGroupComponent)(); };
FormGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormGroupComponent, selectors: [["c-form-group"]], hostVars: 2, hostBindings: function FormGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { inline: "inline", disabled: "disabled" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function FormGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]:not(.row):not(.form-check-inline):not(.custom-control-inline){display:block}"] });
FormGroupComponent.ctorParameters = () => [];
FormGroupComponent.propDecorators = {
    inline: [{ type: Input }],
    disabled: [{ type: Input }],
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormGroupComponent, [{
        type: Component,
        args: [{
                selector: 'c-form-group',
                template: "<ng-content></ng-content>\n",
                styles: [":host:not(.row):not(.form-check-inline):not(.custom-control-inline){display:block}"]
            }]
    }], function () { return []; }, { getClasses: [{
            type: HostBinding,
            args: ['class']
        }], inline: [{
            type: Input
        }], disabled: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1ncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvZm9ybS9mb3JtLWdyb3VwL2Zvcm0tZ3JvdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUV0RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sOEJBQThCLENBQUM7Ozs7QUFPM0QsTUFBTSxPQUFPLGtCQUFrQjtBQUFJLElBbUJqQyxnQkFBZ0IsQ0FBQztBQUNuQixJQWZFLElBQ0ksVUFBVTtBQUNoQixRQUFJLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztBQUM1QixJQUFFLENBQUM7QUFDSCxJQUNFLElBQUksV0FBVztBQUNqQixRQUNJLE1BQU0sT0FBTyxHQUFHO0FBQ3BCLFlBQU0sWUFBWSxFQUFFLElBQUk7QUFDeEIsWUFBTSxRQUFRLEVBQUUsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7QUFDMUMsU0FBSyxDQUFDO0FBQ04sUUFBSSxPQUFPLE9BQU8sQ0FBQztBQUNuQixJQUFFLENBQUM7QUFDSCxJQUdFLFFBQVE7QUFBTSxJQUNkLENBQUM7QUFDSDtnREE1QkMsU0FBUyxTQUFDLG1CQUNULFFBQVEsRUFBRSxjQUFjO2tCQUN4Qix1Q0FBMEMsZ0lBRTNDOzs7OztzSEFDSTtBQUFFO0FBQ047QUFFUSxxQkFETixLQUFLO0FBQU0sdUJBQ1gsS0FBSztBQUFNLHlCQUVYLFdBQVcsU0FBQyxPQUFPO0FBQ2xCOzs7Ozs7Ozs7Ozs7Ozs7O0FBZkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQU9BLEFBQUEsQUFBQSxBQUFBLEFBbUJBLEFBQUEsQUFBQSxBQWRBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUlBLEFBQUEsQUFDQSxBQUFBLEFBM0JBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBR0EsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IGNoa0Jvb2xQcm9wIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2NoZWNrLWJvb2wtcHJvcCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2MtZm9ybS1ncm91cCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2Zvcm0tZ3JvdXAuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2Zvcm0tZ3JvdXAuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRm9ybUdyb3VwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQElucHV0KCkgaW5saW5lOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpIGRpc2FibGVkOiBib29sZWFuO1xyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcclxuICBnZXQgZ2V0Q2xhc3NlcygpIHtcclxuICAgIHJldHVybiB0aGlzLmhvc3RDbGFzc2VzO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGhvc3RDbGFzc2VzKCkge1xyXG5cclxuICAgIGNvbnN0IGNsYXNzZXMgPSB7XHJcbiAgICAgICdmb3JtLWdyb3VwJzogdHJ1ZSxcclxuICAgICAgZGlzYWJsZWQ6IGNoa0Jvb2xQcm9wKHRoaXMuZGlzYWJsZWQpXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIGNsYXNzZXM7XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==