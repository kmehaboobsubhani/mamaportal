import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormDirective } from './form/form.directive';
import { FormGroupComponent } from './form-group/form-group.component';
import { FormFeedbackComponent } from './form-feedback/form-feedback.component';
import { FormTextComponent } from './form-text/form-text.component';
import { InputDirective } from './input/input.directive';
import { InputGroupComponent } from './input-group/input-group.component';
import { InputGroupTextComponent } from './input-group-text/input-group-text.component';
import { InputGroupAddonComponent, InputGroupPrependComponent, InputGroupAppendComponent } from './input-group-addon/input-group-addon.component';
import { TextareaDirective } from './textarea/textarea.directive';
import { SelectDirective } from './select/select.directive';
import { LabelDirective } from './label/label.directive';
import { FormCheckComponent } from './form-check/form-check.component';
import * as ɵngcc0 from '@angular/core';
export class FormModule {
}
FormModule.ɵfac = function FormModule_Factory(t) { return new (t || FormModule)(); };
FormModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormModule });
FormModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormModule, { declarations: function () { return [FormDirective,
        FormCheckComponent,
        FormFeedbackComponent,
        FormGroupComponent,
        FormTextComponent,
        InputDirective,
        InputGroupComponent,
        InputGroupTextComponent,
        InputGroupAddonComponent,
        InputGroupPrependComponent,
        InputGroupAppendComponent,
        TextareaDirective,
        SelectDirective,
        LabelDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [FormDirective,
        FormCheckComponent,
        FormFeedbackComponent,
        FormGroupComponent,
        FormTextComponent,
        InputDirective,
        InputGroupComponent,
        InputGroupTextComponent,
        InputGroupPrependComponent,
        InputGroupAppendComponent,
        TextareaDirective,
        SelectDirective,
        LabelDirective]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    FormDirective,
                    FormCheckComponent,
                    FormFeedbackComponent,
                    FormGroupComponent,
                    FormTextComponent,
                    InputDirective,
                    InputGroupComponent,
                    InputGroupTextComponent,
                    InputGroupAddonComponent,
                    InputGroupPrependComponent,
                    InputGroupAppendComponent,
                    TextareaDirective,
                    SelectDirective,
                    LabelDirective
                ],
                imports: [
                    CommonModule
                ],
                exports: [
                    FormDirective,
                    FormCheckComponent,
                    FormFeedbackComponent,
                    FormGroupComponent,
                    FormTextComponent,
                    InputDirective,
                    InputGroupComponent,
                    InputGroupTextComponent,
                    InputGroupPrependComponent,
                    InputGroupAppendComponent,
                    TextareaDirective,
                    SelectDirective,
                    LabelDirective
                ]
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvZm9ybS9mb3JtLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDdkUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDaEYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDcEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQ3hGLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSwwQkFBMEIsRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQ2xKLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDekQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7O0FBc0N2RSxNQUFNLE9BQU8sVUFBVTtBQUFJO3dDQXBDMUIsUUFBUSxTQUFDLG1CQUNSO0VBQVksRUFBRSx1QkFDWixhQUFhLHVCQUNiO2dCQUFrQix1QkFDbEI7SUFBcUI7RUFDckI7S0FBa0IsdUJBQ2xCLGlCQUFpQix1QkFDakIsY0FBYyx1QkFDZCxtQkFBbUIsdUJBQ25CO2FBQXVCO1FBQ3ZCO0NBQXdCLHVCQUN4QjtzQkFBMEI7a0JBQzFCO21CQUF5QjthQUN6QixpQkFBaUI7b0JBQ2pCO0NBQWUsdUJBQ2Y7RUFBYyxtQkFDZjtLQUNELE9BQU8sRUFBRTtVQUNQLFlBQVk7Z0JBQ2IsbUJBQ0QsT0FBTyxFQUFFLHVCQUNQLGFBQWEsdUJBQ2Isa0JBQWtCO3FCQUNsQjtjQUFxQjtNQUNyQixrQkFBa0I7bUJBQ2xCO1NBQWlCO1FBQ2pCLGNBQWM7Z0JBQ2Q7RUFBbUIsdUJBQ25CO1lBQXVCO0FBQ3ZCLDBCQUEwQjtzQkFDMUI7c0JBQXlCO1FBQ3pCLGlCQUFpQix1QkFDakIsZUFBZSx1QkFDZixjQUFjO2FBQ2Y7SUFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWxEQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBc0NBLEFBQUEsQUFBQSxBQUFBLEFBcENBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRm9ybURpcmVjdGl2ZSB9IGZyb20gJy4vZm9ybS9mb3JtLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2Zvcm0tZ3JvdXAvZm9ybS1ncm91cC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRm9ybUZlZWRiYWNrQ29tcG9uZW50IH0gZnJvbSAnLi9mb3JtLWZlZWRiYWNrL2Zvcm0tZmVlZGJhY2suY29tcG9uZW50JztcbmltcG9ydCB7IEZvcm1UZXh0Q29tcG9uZW50IH0gZnJvbSAnLi9mb3JtLXRleHQvZm9ybS10ZXh0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJbnB1dERpcmVjdGl2ZSB9IGZyb20gJy4vaW5wdXQvaW5wdXQuZGlyZWN0aXZlJztcbmltcG9ydCB7IElucHV0R3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2lucHV0LWdyb3VwL2lucHV0LWdyb3VwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJbnB1dEdyb3VwVGV4dENvbXBvbmVudCB9IGZyb20gJy4vaW5wdXQtZ3JvdXAtdGV4dC9pbnB1dC1ncm91cC10ZXh0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJbnB1dEdyb3VwQWRkb25Db21wb25lbnQsIElucHV0R3JvdXBQcmVwZW5kQ29tcG9uZW50LCBJbnB1dEdyb3VwQXBwZW5kQ29tcG9uZW50IH0gZnJvbSAnLi9pbnB1dC1ncm91cC1hZGRvbi9pbnB1dC1ncm91cC1hZGRvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGV4dGFyZWFEaXJlY3RpdmUgfSBmcm9tICcuL3RleHRhcmVhL3RleHRhcmVhLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTZWxlY3REaXJlY3RpdmUgfSBmcm9tICcuL3NlbGVjdC9zZWxlY3QuZGlyZWN0aXZlJztcbmltcG9ydCB7IExhYmVsRGlyZWN0aXZlIH0gZnJvbSAnLi9sYWJlbC9sYWJlbC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRm9ybUNoZWNrQ29tcG9uZW50IH0gZnJvbSAnLi9mb3JtLWNoZWNrL2Zvcm0tY2hlY2suY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgRm9ybURpcmVjdGl2ZSxcbiAgICBGb3JtQ2hlY2tDb21wb25lbnQsXG4gICAgRm9ybUZlZWRiYWNrQ29tcG9uZW50LFxuICAgIEZvcm1Hcm91cENvbXBvbmVudCxcbiAgICBGb3JtVGV4dENvbXBvbmVudCxcbiAgICBJbnB1dERpcmVjdGl2ZSxcbiAgICBJbnB1dEdyb3VwQ29tcG9uZW50LFxuICAgIElucHV0R3JvdXBUZXh0Q29tcG9uZW50LFxuICAgIElucHV0R3JvdXBBZGRvbkNvbXBvbmVudCxcbiAgICBJbnB1dEdyb3VwUHJlcGVuZENvbXBvbmVudCxcbiAgICBJbnB1dEdyb3VwQXBwZW5kQ29tcG9uZW50LFxuICAgIFRleHRhcmVhRGlyZWN0aXZlLFxuICAgIFNlbGVjdERpcmVjdGl2ZSxcbiAgICBMYWJlbERpcmVjdGl2ZVxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBGb3JtRGlyZWN0aXZlLFxuICAgIEZvcm1DaGVja0NvbXBvbmVudCxcbiAgICBGb3JtRmVlZGJhY2tDb21wb25lbnQsXG4gICAgRm9ybUdyb3VwQ29tcG9uZW50LFxuICAgIEZvcm1UZXh0Q29tcG9uZW50LFxuICAgIElucHV0RGlyZWN0aXZlLFxuICAgIElucHV0R3JvdXBDb21wb25lbnQsXG4gICAgSW5wdXRHcm91cFRleHRDb21wb25lbnQsXG4gICAgSW5wdXRHcm91cFByZXBlbmRDb21wb25lbnQsXG4gICAgSW5wdXRHcm91cEFwcGVuZENvbXBvbmVudCxcbiAgICBUZXh0YXJlYURpcmVjdGl2ZSxcbiAgICBTZWxlY3REaXJlY3RpdmUsXG4gICAgTGFiZWxEaXJlY3RpdmVcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBGb3JtTW9kdWxlIHsgfVxuIl19