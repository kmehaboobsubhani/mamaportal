import { Component, HostBinding } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class InputGroupTextComponent {
    constructor() { }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const classes = {
            'input-group-text': true,
        };
        return classes;
    }
    ngOnInit() { }
}
InputGroupTextComponent.ɵfac = function InputGroupTextComponent_Factory(t) { return new (t || InputGroupTextComponent)(); };
InputGroupTextComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputGroupTextComponent, selectors: [["c-input-group-text"]], hostVars: 2, hostBindings: function InputGroupTextComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function InputGroupTextComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [""] });
InputGroupTextComponent.ctorParameters = () => [];
InputGroupTextComponent.propDecorators = {
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputGroupTextComponent, [{
        type: Component,
        args: [{
                selector: 'c-input-group-text',
                template: "<ng-content></ng-content>\n",
                styles: [""]
            }]
    }], function () { return []; }, { getClasses: [{
            type: HostBinding,
            args: ['class']
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtZ3JvdXAtdGV4dC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvZm9ybS9pbnB1dC1ncm91cC10ZXh0L2lucHV0LWdyb3VwLXRleHQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFVLE1BQU0sZUFBZSxDQUFDOzs7O0FBTy9ELE1BQU0sT0FBTyx1QkFBdUI7QUFBSSxJQWF0QyxnQkFBZSxDQUFDO0FBRWxCLElBZEUsSUFDSSxVQUFVO0FBQ2YsUUFBRyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7QUFDM0IsSUFBQyxDQUFDO0FBRUgsSUFBRSxJQUFJLFdBQVc7QUFDaEIsUUFBRyxNQUFNLE9BQU8sR0FBRztBQUNuQixZQUFLLGtCQUFrQixFQUFFLElBQUk7QUFDN0IsU0FBSSxDQUFDO0FBQ0wsUUFBRyxPQUFPLE9BQU8sQ0FBQztBQUNsQixJQUFDLENBQUM7QUFFSCxJQUVFLFFBQVEsS0FBVSxDQUFDO0FBQ3BCO3FEQXJCQSxTQUFTLFNBQUMsbUJBQ1QsUUFBUSxFQUFFLG9CQUFvQjtjQUM5Qix1Q0FBZ0QsOENBRWpEOzs7Ozt5QkFDSztBQUFFO0FBQ0w7QUFFRCx5QkFGQyxXQUFXLFNBQUMsT0FBTztBQUNqQjs7Ozs7Ozs7Ozs7O0FBVEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFPQSxBQUFBLEFBQUEsQUFBQSxBQWFBLEFBQUEsQUFBQSxBQVpBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUlBLEFBQUEsQUFBQSxBQUFBLEFBcEJBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBRUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYy1pbnB1dC1ncm91cC10ZXh0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LWdyb3VwLXRleHQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pbnB1dC1ncm91cC10ZXh0LmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIElucHV0R3JvdXBUZXh0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXG4gIGdldCBnZXRDbGFzc2VzKCkge1xuICAgIHJldHVybiB0aGlzLmhvc3RDbGFzc2VzO1xuICB9XG5cbiAgZ2V0IGhvc3RDbGFzc2VzKCkge1xuICAgIGNvbnN0IGNsYXNzZXMgPSB7XG4gICAgICAnaW5wdXQtZ3JvdXAtdGV4dCc6IHRydWUsXG4gICAgfTtcbiAgICByZXR1cm4gY2xhc3NlcztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHt9XG59XG4iXX0=