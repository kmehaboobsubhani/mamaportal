import { Directive, HostBinding, Input } from '@angular/core';
import classNames from 'classnames';
export class ImgDirective {
    constructor() {
        this.align = '';
        this.placeholderColor = 'transparent';
    }
    get getStyles() {
        return { backgroundColor: this.placeholderColor };
    }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const classes = classNames(this.alignClass, {
            'img-thumbnail': this.thumbnail,
            'img-fluid': this.fluid || this.fluidGrow,
            'w-100': this.fluidGrow,
            'd-block': this.block,
            [`${this.shape}`]: this.shape,
        });
        return classes;
    }
    get alignClass() {
        return this.align === 'center' ? 'mx-auto' :
            this.align === 'right' ? 'float-right' :
                this.align === 'left' ? 'float-left' : '';
    }
    ngOnInit() { }
}
ImgDirective.decorators = [
    { type: Directive, args: [{
                selector: '[cImg]'
            },] }
];
ImgDirective.ctorParameters = () => [];
ImgDirective.propDecorators = {
    block: [{ type: Input }],
    fluid: [{ type: Input }],
    fluidGrow: [{ type: Input }],
    shape: [{ type: Input }],
    thumbnail: [{ type: Input }],
    align: [{ type: Input }],
    placeholderColor: [{ type: Input }],
    getStyles: [{ type: HostBinding, args: ['style',] }],
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1nLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvaW1hZ2UvaW1nLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDdEUsT0FBTyxVQUFVLE1BQU0sWUFBWSxDQUFDO0FBS3BDLE1BQU0sT0FBTyxZQUFZO0lBd0N2QjtRQWpDUyxVQUFLLEdBQXFDLEVBQUUsQ0FBQztRQUM3QyxxQkFBZ0IsR0FBRyxhQUFhLENBQUM7SUFnQzNCLENBQUM7SUE5QmhCLElBQ0ksU0FBUztRQUNYLE9BQU8sRUFBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixFQUFDLENBQUM7SUFDbEQsQ0FBQztJQUVELElBQ0ksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IsTUFBTSxPQUFPLEdBQUcsVUFBVSxDQUN4QixJQUFJLENBQUMsVUFBVSxFQUNmO1lBQ0UsZUFBZSxFQUFFLElBQUksQ0FBQyxTQUFTO1lBQy9CLFdBQVcsRUFBRSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxTQUFTO1lBQ3pDLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUztZQUN2QixTQUFTLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDckIsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLO1NBQzlCLENBQ0YsQ0FBQztRQUNGLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxJQUFJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUMxQyxJQUFJLENBQUMsS0FBSyxLQUFLLE9BQU8sQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUM7Z0JBQ3RDLElBQUksQ0FBQyxLQUFLLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUNoRCxDQUFDO0lBSUQsUUFBUSxLQUFVLENBQUM7OztZQTdDcEIsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxRQUFRO2FBQ25COzs7O29CQUdFLEtBQUs7b0JBQ0wsS0FBSzt3QkFDTCxLQUFLO29CQUNMLEtBQUs7d0JBQ0wsS0FBSztvQkFDTCxLQUFLOytCQUNMLEtBQUs7d0JBRUwsV0FBVyxTQUFDLE9BQU87eUJBS25CLFdBQVcsU0FBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0QmluZGluZywgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2NJbWddJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSW1nRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQElucHV0KCkgYmxvY2s6IGJvb2xlYW47XHJcbiAgQElucHV0KCkgZmx1aWQ6IGJvb2xlYW47XHJcbiAgQElucHV0KCkgZmx1aWRHcm93OiBib29sZWFuO1xyXG4gIEBJbnB1dCgpIHNoYXBlOiBzdHJpbmcgfCAncm91bmRlZCcgfCAncm91bmRlZC10b3AnIHwgJ3JvdW5kZWQtcmlnaHQnIHwgJ3JvdW5kZWQtYm90dG9tJyB8ICdyb3VuZGVkLWxlZnQnIHwgJ3JvdW5kZWQtY2lyY2xlJyB8ICdyb3VuZGVkLXBpbGwnIHwgJ3JvdW5kZWQtMCcgfCAncm91bmRlZC1zbScgfCAncm91bmRlZC1sZycgO1xyXG4gIEBJbnB1dCgpIHRodW1ibmFpbDogYm9vbGVhbjtcclxuICBASW5wdXQoKSBhbGlnbjogJycgfCAnbGVmdCcgfCAncmlnaHQnIHwgJ2NlbnRlcicgPSAnJztcclxuICBASW5wdXQoKSBwbGFjZWhvbGRlckNvbG9yID0gJ3RyYW5zcGFyZW50JztcclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdzdHlsZScpXHJcbiAgZ2V0IGdldFN0eWxlcygpIHtcclxuICAgIHJldHVybiB7YmFja2dyb3VuZENvbG9yOiB0aGlzLnBsYWNlaG9sZGVyQ29sb3J9O1xyXG4gIH1cclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXHJcbiAgZ2V0IGdldENsYXNzZXMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5ob3N0Q2xhc3NlcztcclxuICB9XHJcblxyXG4gIGdldCBob3N0Q2xhc3NlcygpIHtcclxuICAgIGNvbnN0IGNsYXNzZXMgPSBjbGFzc05hbWVzKFxyXG4gICAgICB0aGlzLmFsaWduQ2xhc3MsXHJcbiAgICAgIHtcclxuICAgICAgICAnaW1nLXRodW1ibmFpbCc6IHRoaXMudGh1bWJuYWlsLFxyXG4gICAgICAgICdpbWctZmx1aWQnOiB0aGlzLmZsdWlkIHx8IHRoaXMuZmx1aWRHcm93LFxyXG4gICAgICAgICd3LTEwMCc6IHRoaXMuZmx1aWRHcm93LFxyXG4gICAgICAgICdkLWJsb2NrJzogdGhpcy5ibG9jayxcclxuICAgICAgICBbYCR7dGhpcy5zaGFwZX1gXTogdGhpcy5zaGFwZSxcclxuICAgICAgfVxyXG4gICAgKTtcclxuICAgIHJldHVybiBjbGFzc2VzO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGFsaWduQ2xhc3MoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5hbGlnbiA9PT0gJ2NlbnRlcicgPyAnbXgtYXV0bycgOlxyXG4gICAgICB0aGlzLmFsaWduID09PSAncmlnaHQnID8gJ2Zsb2F0LXJpZ2h0JyA6XHJcbiAgICAgICAgdGhpcy5hbGlnbiA9PT0gJ2xlZnQnID8gJ2Zsb2F0LWxlZnQnIDogJyc7XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3RvcigpIHt9XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge31cclxufVxyXG4iXX0=