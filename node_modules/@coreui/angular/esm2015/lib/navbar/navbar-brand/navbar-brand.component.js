import { Component, HostBinding } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class NavbarBrandComponent {
    constructor() {
        this.navbarBrand = true;
        this.role = 'button';
    }
    ngOnInit() { }
}
NavbarBrandComponent.ɵfac = function NavbarBrandComponent_Factory(t) { return new (t || NavbarBrandComponent)(); };
NavbarBrandComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NavbarBrandComponent, selectors: [["c-navbar-brand"]], hostVars: 3, hostBindings: function NavbarBrandComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role);
        ɵngcc0.ɵɵclassProp("navbar-brand", ctx.navbarBrand);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function NavbarBrandComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%]{outline:inherit}"] });
NavbarBrandComponent.ctorParameters = () => [];
NavbarBrandComponent.propDecorators = {
    navbarBrand: [{ type: HostBinding, args: ['class.navbar-brand',] }],
    role: [{ type: HostBinding, args: ['attr.role',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavbarBrandComponent, [{
        type: Component,
        args: [{
                selector: 'c-navbar-brand',
                template: "<ng-content></ng-content>\n",
                styles: [":host{outline:inherit}"]
            }]
    }], function () { return []; }, { navbarBrand: [{
            type: HostBinding,
            args: ['class.navbar-brand']
        }], role: [{
            type: HostBinding,
            args: ['attr.role']
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2YmFyLWJyYW5kLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9uYXZiYXIvbmF2YmFyLWJyYW5kL25hdmJhci1icmFuZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQVUsTUFBTSxlQUFlLENBQUM7Ozs7QUFPL0QsTUFBTSxPQUFPLG9CQUFvQjtBQUFJLElBS25DO0FBQWlCLFFBSGtCLGdCQUFXLEdBQUcsSUFBSSxDQUFDO0FBQ3ZELFFBQTJCLFNBQUksR0FBRyxRQUFRLENBQUM7QUFFNUMsSUFBa0IsQ0FBQztBQUVuQixJQUFFLFFBQVEsS0FBVyxDQUFDO0FBRXRCO2tEQWRDLFNBQVMsU0FBQyxtQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQix1Q0FBNEMsb0VBRTdDOzs7Ozs7MERBQ0s7QUFBRTtBQUVOO0FBQXlDLDBCQUF4QyxXQUFXLFNBQUMsb0JBQW9CO0FBQVEsbUJBQ3hDLFdBQVcsU0FBQyxXQUFXO0FBQU87Ozs7Ozs7Ozs7Ozs7OztBQVZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUhBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBWkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0QmluZGluZywgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2MtbmF2YmFyLWJyYW5kJyxcbiAgdGVtcGxhdGVVcmw6ICcuL25hdmJhci1icmFuZC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25hdmJhci1icmFuZC5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIE5hdmJhckJyYW5kQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLm5hdmJhci1icmFuZCcpIG5hdmJhckJyYW5kID0gdHJ1ZTtcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLnJvbGUnKSByb2xlID0gJ2J1dHRvbic7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHsgfVxuXG59XG4iXX0=