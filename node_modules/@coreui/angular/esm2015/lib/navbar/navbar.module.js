import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterModule } from '@angular/router';
import { NavbarComponent } from './navbar.component';
import { NavbarBrandComponent } from './navbar-brand/navbar-brand.component';
import { NavbarNavComponent } from './navbar-nav/navbar-nav.component';
import { NavbarTextComponent } from './navbar-text/navbar-text.component';
import * as ɵngcc0 from '@angular/core';
export class NavbarModule {
}
NavbarModule.ɵfac = function NavbarModule_Factory(t) { return new (t || NavbarModule)(); };
NavbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NavbarModule });
NavbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule,
            RouterModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NavbarModule, { declarations: function () { return [NavbarComponent,
        NavbarBrandComponent,
        NavbarNavComponent,
        NavbarTextComponent]; }, imports: function () { return [CommonModule,
        RouterModule]; }, exports: function () { return [NavbarComponent,
        NavbarBrandComponent,
        NavbarNavComponent,
        NavbarTextComponent]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavbarModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    NavbarComponent,
                    NavbarBrandComponent,
                    NavbarNavComponent,
                    NavbarTextComponent
                ],
                exports: [
                    NavbarComponent,
                    NavbarBrandComponent,
                    NavbarNavComponent,
                    NavbarTextComponent
                ],
                imports: [
                    CommonModule,
                    RouterModule
                ]
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2YmFyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9uYXZiYXIvbmF2YmFyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDOztBQW9CMUUsTUFBTSxPQUFPLFlBQVk7QUFBSTswQ0FsQjVCLFFBQVEsU0FBQyxtQkFDUixZQUFZO0FBQUUsdUJBQ1osZUFBZSx1QkFDZjtZQUFvQix1QkFDcEIsa0JBQWtCO2tCQUNsQjtXQUFtQjtLQUNwQjtTQUNELE9BQU8sRUFBRSx1QkFDUCxlQUFlLHVCQUNmLG9CQUFvQix1QkFDcEIsa0JBQWtCO0VBQ2xCLG1CQUFtQjtVQUNwQjtDQUNELE9BQU8sRUFBRSx1QkFDUCxZQUFZLHVCQUNaO0VBQVksbUJBQ2IsZUFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTFCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBb0JBLEFBQUEsQUFBQSxBQUFBLEFBbEJBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuaW1wb3J0IHsgTmF2YmFyQ29tcG9uZW50IH0gZnJvbSAnLi9uYXZiYXIuY29tcG9uZW50JztcbmltcG9ydCB7IE5hdmJhckJyYW5kQ29tcG9uZW50IH0gZnJvbSAnLi9uYXZiYXItYnJhbmQvbmF2YmFyLWJyYW5kLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOYXZiYXJOYXZDb21wb25lbnQgfSBmcm9tICcuL25hdmJhci1uYXYvbmF2YmFyLW5hdi5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmF2YmFyVGV4dENvbXBvbmVudCB9IGZyb20gJy4vbmF2YmFyLXRleHQvbmF2YmFyLXRleHQuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTmF2YmFyQ29tcG9uZW50LFxuICAgIE5hdmJhckJyYW5kQ29tcG9uZW50LFxuICAgIE5hdmJhck5hdkNvbXBvbmVudCxcbiAgICBOYXZiYXJUZXh0Q29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBOYXZiYXJDb21wb25lbnQsXG4gICAgTmF2YmFyQnJhbmRDb21wb25lbnQsXG4gICAgTmF2YmFyTmF2Q29tcG9uZW50LFxuICAgIE5hdmJhclRleHRDb21wb25lbnRcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBSb3V0ZXJNb2R1bGVcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBOYXZiYXJNb2R1bGUgeyB9XG4iXX0=