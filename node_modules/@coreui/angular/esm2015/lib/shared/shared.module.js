import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { OutClickService } from './out-click.service';
import { OutClickDirective } from './out-click.directive';
import { HtmlAttributesDirective } from './html-attr.directive';
import * as ɵngcc0 from '@angular/core';
export class SharedModule {
    static forRoot() {
        return {
            ngModule: SharedModule,
            providers: [
                { provide: OutClickService }
            ]
        };
    }
}
SharedModule.ɵfac = function SharedModule_Factory(t) { return new (t || SharedModule)(); };
SharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SharedModule });
SharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [], imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SharedModule, { declarations: function () { return [OutClickDirective,
        HtmlAttributesDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [OutClickDirective,
        HtmlAttributesDirective]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SharedModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    OutClickDirective,
                    HtmlAttributesDirective
                ],
                exports: [
                    OutClickDirective,
                    HtmlAttributesDirective
                ],
                providers: []
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmVkLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9zaGFyZWQvc2hhcmVkLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDOztBQWdCaEUsTUFBTSxPQUFPLFlBQVk7QUFFekIsSUFBRSxNQUFNLENBQUMsT0FBTztBQUFNLFFBQ2xCLE9BQU87QUFDVixZQUFLLFFBQVEsRUFBRSxZQUFZO0FBQzNCLFlBQUssU0FBUyxFQUFFO0FBQ2hCLGdCQUFPLEVBQUMsT0FBTyxFQUFFLGVBQWUsRUFBQztBQUNqQyxhQUFNO0FBQ04sU0FBSSxDQUFDO0FBQ0wsSUFBQyxDQUFDO0FBQ0Y7MENBeEJBLFFBQVEsU0FBQyxtQkFDUixPQUFPLEVBQUU7a0JBQ1AsWUFBWSxtQkFDYixtQkFDRDtXQUFZLEVBQUUsdUJBQ1osaUJBQWlCO0dBQ2pCO0NBQXVCO0tBQ3hCLG1CQUNELE9BQU8sRUFBRSx1QkFDUCxpQkFBaUIsdUJBQ2pCLHVCQUF1QixtQkFDeEIsbUJBQ0Q7R0FBUyxFQUFFLEVBQUUsZUFDZDs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXBCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQWdCQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQXZCQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgT3V0Q2xpY2tTZXJ2aWNlIH0gZnJvbSAnLi9vdXQtY2xpY2suc2VydmljZSc7XG5pbXBvcnQgeyBPdXRDbGlja0RpcmVjdGl2ZSB9IGZyb20gJy4vb3V0LWNsaWNrLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBIdG1sQXR0cmlidXRlc0RpcmVjdGl2ZSB9IGZyb20gJy4vaHRtbC1hdHRyLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgT3V0Q2xpY2tEaXJlY3RpdmUsXG4gICAgSHRtbEF0dHJpYnV0ZXNEaXJlY3RpdmVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIE91dENsaWNrRGlyZWN0aXZlLFxuICAgIEh0bWxBdHRyaWJ1dGVzRGlyZWN0aXZlXG4gIF0sXG4gIHByb3ZpZGVyczogW11cbn0pXG5leHBvcnQgY2xhc3MgU2hhcmVkTW9kdWxlIHtcblxuICBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPFNoYXJlZE1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogU2hhcmVkTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtwcm92aWRlOiBPdXRDbGlja1NlcnZpY2V9XG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19