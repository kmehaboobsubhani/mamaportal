import { Component, HostBinding, Input } from '@angular/core';
import classNames from 'classnames';
import * as ɵngcc0 from '@angular/core';
export class SpinnerComponent {
    constructor() {
        this.color = '';
        this.grow = false;
        this.size = '';
        this.role = 'status';
    }
    get getClasses() {
        return this.hostClasses;
    }
    get hostClasses() {
        const shape = this.grow ? 'grow' : 'border';
        const classes = classNames({
            [`spinner-${shape}`]: true,
            [`text-${this.color}`]: !!this.color,
            [`spinner-${shape}-${this.size}`]: !!this.size
        });
        return classes;
    }
}
SpinnerComponent.ɵfac = function SpinnerComponent_Factory(t) { return new (t || SpinnerComponent)(); };
SpinnerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SpinnerComponent, selectors: [["c-spinner"]], hostVars: 3, hostBindings: function SpinnerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role);
        ɵngcc0.ɵɵclassMap(ctx.getClasses);
    } }, inputs: { color: "color", grow: "grow", size: "size", role: "role" }, decls: 2, vars: 0, consts: [[1, "sr-only"]], template: function SpinnerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵtext(1, "Loading...");
        ɵngcc0.ɵɵelementEnd();
    } }, styles: [""] });
SpinnerComponent.propDecorators = {
    color: [{ type: Input }],
    grow: [{ type: Input }],
    size: [{ type: Input }],
    role: [{ type: Input }, { type: HostBinding, args: ['attr.role',] }],
    getClasses: [{ type: HostBinding, args: ['class',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SpinnerComponent, [{
        type: Component,
        args: [{
                selector: 'c-spinner',
                template: "<!--<div [ngClass]=\"classes\" [attr.role]=\"role\" [ngStyle]=\"styles\">-->\n  <span class=\"sr-only\">Loading...</span>\n<!--</div>-->\n",
                styles: [""]
            }]
    }], function () { return []; }, { color: [{
            type: Input
        }], grow: [{
            type: Input
        }], size: [{
            type: Input
        }], role: [{
            type: Input
        }, {
            type: HostBinding,
            args: ['attr.role']
        }], getClasses: [{
            type: HostBinding,
            args: ['class']
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Bpbm5lci5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvc3Bpbm5lci9zcGlubmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxVQUFVLE1BQU0sWUFBWSxDQUFDOztBQU9wQyxNQUFNLE9BQU8sZ0JBQWdCO0FBQzdCLElBTkE7QUFDRyxRQU1RLFVBQUssR0FBRyxFQUFFLENBQUM7QUFDdEIsUUFBVyxTQUFJLEdBQUcsS0FBSyxDQUFDO0FBQ3hCLFFBQVcsU0FBSSxHQUFjLEVBQUUsQ0FBQztBQUNoQyxRQUU0QixTQUFJLEdBQUcsUUFBUSxDQUFDO0FBQzVDLElBaUJBLENBQUM7QUFDRCxJQWpCRSxJQUNJLFVBQVU7QUFDaEIsUUFBSSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7QUFDNUIsSUFBRSxDQUFDO0FBQ0gsSUFDRSxJQUFJLFdBQVc7QUFDakIsUUFBSSxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztBQUNoRCxRQUFJLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FDeEI7QUFDTixZQUFRLENBQUMsV0FBVyxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUk7QUFDbEMsWUFBUSxDQUFDLFFBQVEsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLO0FBQzVDLFlBQVEsQ0FBQyxXQUFXLEtBQUssSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUk7QUFDdEQsU0FBTyxDQUNGLENBQUM7QUFDTixRQUFJLE9BQU8sT0FBTyxDQUFDO0FBQ25CLElBQUUsQ0FBQztBQUNIOzhDQTlCQyxTQUFTLFNBQUMsbUJBQ1QsUUFBUSxFQUFFO0FBQVcsbUJBQ3JCLHNKQUF1QztxQkFFeEM7Ozs7Ozt5QkFDSTtBQUFFO0FBRUUsb0JBQU4sS0FBSztBQUFNLG1CQUNYLEtBQUs7QUFBTSxtQkFDWCxLQUFLO0FBQU0sbUJBRVgsS0FBSyxZQUNMLFdBQVcsU0FBQyxXQUFXO0FBQVEseUJBRS9CLFdBQVcsU0FBQyxPQUFPO0FBQ2xCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWxCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFPQSxBQUFBLEFBQUEsQUFBQSxBQUxBLEFBT0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQWtCQSxBQUFBLEFBaEJBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUE3QkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFHQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdjLXNwaW5uZXInLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9zcGlubmVyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9zcGlubmVyLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFNwaW5uZXJDb21wb25lbnQge1xyXG5cclxuICBASW5wdXQoKSBjb2xvciA9ICcnO1xyXG4gIEBJbnB1dCgpIGdyb3cgPSBmYWxzZTtcclxuICBASW5wdXQoKSBzaXplOiAnJyB8ICdzbScgPSAnJztcclxuXHJcbiAgQElucHV0KClcclxuICBASG9zdEJpbmRpbmcoJ2F0dHIucm9sZScpIHJvbGUgPSAnc3RhdHVzJztcclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXHJcbiAgZ2V0IGdldENsYXNzZXMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5ob3N0Q2xhc3NlcztcclxuICB9XHJcblxyXG4gIGdldCBob3N0Q2xhc3NlcygpIHtcclxuICAgIGNvbnN0IHNoYXBlID0gdGhpcy5ncm93ID8gJ2dyb3cnIDogJ2JvcmRlcic7XHJcbiAgICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyhcclxuICAgICAge1xyXG4gICAgICAgIFtgc3Bpbm5lci0ke3NoYXBlfWBdOiB0cnVlLFxyXG4gICAgICAgIFtgdGV4dC0ke3RoaXMuY29sb3J9YF06ICEhdGhpcy5jb2xvcixcclxuICAgICAgICBbYHNwaW5uZXItJHtzaGFwZX0tJHt0aGlzLnNpemV9YF06ICEhdGhpcy5zaXplXHJcbiAgICAgIH0sXHJcbiAgICApO1xyXG4gICAgcmV0dXJuIGNsYXNzZXM7XHJcbiAgfVxyXG59XHJcbiJdfQ==