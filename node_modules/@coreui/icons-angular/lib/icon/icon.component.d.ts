import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { IconSetService } from '../icon-set/icon-set.service';
import * as ɵngcc0 from '@angular/core';
export declare class IconComponent {
    private sanitizer;
    private iconSet;
    private _name;
    private _viewBox;
    attributes: any;
    set name(name: string);
    get name(): string;
    content?: string | string[];
    size?: 'custom' | 'custom-size' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl' | '';
    src?: string;
    title?: string;
    use: string;
    customClasses?: string | string[] | Set<string> | {
        [klass: string]: any;
    };
    set viewBox(viewBox: string);
    get viewBox(): string;
    width?: any;
    height?: any;
    get titleCode(): string;
    get code(): string[] | undefined | string;
    get iconCode(): SafeHtml;
    get scale(): string;
    get computedSize(): 'custom-size' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl' | '';
    get computedClasses(): any;
    constructor(sanitizer: DomSanitizer, iconSet: IconSetService);
    toCamelCase(str: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IconComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IconComponent, "c-icon", never, { "attributes": "attributes"; "size": "size"; "use": "use"; "name": "name"; "viewBox": "viewBox"; "content": "content"; "src": "src"; "title": "title"; "customClasses": "customClasses"; "width": "width"; "height": "height"; }, {}, never, never>;
}

//# sourceMappingURL=icon.component.d.ts.map