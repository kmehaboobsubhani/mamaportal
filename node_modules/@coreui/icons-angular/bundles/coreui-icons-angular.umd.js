(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/platform-browser'),require('@angular/common'),exports, require('@angular/core'), require('@angular/platform-browser'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@coreui/icons-angular', ['@angular/core','@angular/platform-browser','@angular/common','exports', '@angular/core', '@angular/platform-browser', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.ng.platformBrowser,global.ng.common,(global.coreui = global.coreui || {}, global.coreui['icons-angular'] = {}), global.ng.core, global.ng.platformBrowser, global.ng.common));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,exports, i0, platformBrowser, common) { 
function IconComponent_img_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 3);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("cHtmlAttr", ctx_r0.attributes)("ngClass", ctx_r0.customClasses)("src", ctx_r0.src, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵattribute("alt", ctx_r0.title);
} }
function IconComponent__svg_svg_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "svg", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHtml", ctx_r1.iconCode, ɵngcc0.ɵɵsanitizeHtml)("ngClass", ctx_r1.computedClasses)("cHtmlAttr", ctx_r1.attributes);
    ɵngcc0.ɵɵattribute("width", ctx_r1.width)("height", ctx_r1.height || ctx_r1.width)("viewBox", ctx_r1.viewBox);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.titleCode, "\n");
} }
function IconComponent__svg_svg_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "svg", 5);
    ɵngcc0.ɵɵelement(1, "use");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r2.computedClasses)("cHtmlAttr", ctx_r2.attributes);
    ɵngcc0.ɵɵattribute("width", ctx_r2.width)("height", ctx_r2.height || ctx_r2.width);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("href", ctx_r2.use);
} }
'use strict';

    var IconSetService = /** @class */ (function () {
        function IconSetService() {
            // tslint:disable-next-line:variable-name
            this._icons = {};
        }
        Object.defineProperty(IconSetService.prototype, "icons", {
            get: function () {
                return this._icons;
            },
            set: function (iconSet) {
                this._icons = iconSet;
            },
            enumerable: false,
            configurable: true
        });
        IconSetService.prototype.getIcon = function (name) {
            var icon = this.icons[name];
            if (!icon) {
                console.warn("CoreUI WARN: Icon " + name + " is not registered in IconService");
            }
            return this.icons[name];
        };
IconSetService.ɵfac = function IconSetService_Factory(t) { return new (t || IconSetService)(); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconSetService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
        return IconSetService;
    }());
    IconSetService.ɵprov = i0.ɵɵdefineInjectable({ factory: function IconSetService_Factory() { return new IconSetService(); }, token: IconSetService, providedIn: "root" });
    IconSetService.ctorParameters = function () { return []; };

    var IconComponent = /** @class */ (function () {
        function IconComponent(sanitizer, iconSet) {
            this.sanitizer = sanitizer;
            this.iconSet = iconSet;
            this.attributes = { role: 'img' };
            this.size = '';
            this.use = '';
        }
        Object.defineProperty(IconComponent.prototype, "name", {
            get: function () {
                var nameIsKebabCase = this._name && this._name.includes('-');
                return nameIsKebabCase ? this.toCamelCase(this._name) : this._name;
            },
            set: function (name) {
                this._name = name;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IconComponent.prototype, "viewBox", {
            get: function () {
                return this._viewBox || "0 0 " + this.scale;
            },
            set: function (viewBox) {
                this._viewBox = viewBox;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IconComponent.prototype, "titleCode", {
            get: function () {
                return this.title ? "<title>" + this.title + "</title>" : '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IconComponent.prototype, "code", {
            get: function () {
                if (this.content) {
                    return this.content;
                }
                else if (this.iconSet) {
                    return this.iconSet.getIcon(this.name);
                }
                console.warn("c-icon component: icon name '" + this.name + "' does not exist for IconSet service. " +
                    "To use icon by 'name' prop you need to add it to IconSet service. \n", this.name);
                return undefined;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IconComponent.prototype, "iconCode", {
            get: function () {
                var code = Array.isArray(this.code) ? this.code[1] || this.code[0] : this.code;
                return this.sanitizer.bypassSecurityTrustHtml(this.titleCode + code);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IconComponent.prototype, "scale", {
            get: function () {
                return Array.isArray(this.code) && this.code.length > 1 ? this.code[0] : '64 64';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IconComponent.prototype, "computedSize", {
            get: function () {
                var addCustom = !this.size && (this.width || this.height);
                return this.size === 'custom' || addCustom ? 'custom-size' : this.size;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IconComponent.prototype, "computedClasses", {
            get: function () {
                var _a;
                var classes = (_a = {
                        'c-icon': true
                    },
                    _a["c-icon-" + this.computedSize] = !!this.computedSize,
                    _a);
                return !!this.customClasses ? this.customClasses : classes;
            },
            enumerable: false,
            configurable: true
        });
        IconComponent.prototype.toCamelCase = function (str) {
            return str.replace(/([-_][a-z0-9])/ig, function ($1) {
                return $1.toUpperCase().replace('-', '');
            });
        };
IconComponent.ɵfac = function IconComponent_Factory(t) { return new (t || IconComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(IconSetService)); };
IconComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IconComponent, selectors: [["c-icon"]], inputs: { attributes: "attributes", size: "size", use: "use", name: "name", viewBox: "viewBox", content: "content", src: "src", title: "title", customClasses: "customClasses", width: "width", height: "height" }, decls: 3, vars: 3, consts: [[3, "cHtmlAttr", "ngClass", "src", 4, "ngIf"], ["xmlns", "http://www.w3.org/2000/svg", "role", "img", "pointer-events", "none", 3, "innerHtml", "ngClass", "cHtmlAttr", 4, "ngIf"], ["xmlns", "http://www.w3.org/2000/svg", "role", "img", "pointer-events", "none", 3, "ngClass", "cHtmlAttr", 4, "ngIf"], [3, "cHtmlAttr", "ngClass", "src"], ["xmlns", "http://www.w3.org/2000/svg", "role", "img", "pointer-events", "none", 3, "innerHtml", "ngClass", "cHtmlAttr"], ["xmlns", "http://www.w3.org/2000/svg", "role", "img", "pointer-events", "none", 3, "ngClass", "cHtmlAttr"]], template: function IconComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, IconComponent_img_0_Template, 1, 4, "img", 0);
        ɵngcc0.ɵɵtemplate(1, IconComponent__svg_svg_1_Template, 2, 7, "svg", 1);
        ɵngcc0.ɵɵtemplate(2, IconComponent__svg_svg_2_Template, 2, 5, "svg", 2);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.src);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.src && !ctx.use && !!ctx.code);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.use);
    } }, directives: function () { return [ɵngcc2.NgIf, HtmlAttributesDirective, ɵngcc2.NgClass]; }, styles: [".c-icon[_ngcontent-%COMP%]{display:inline-block;color:inherit;text-align:center;fill:currentColor}.c-icon[_ngcontent-%COMP%]:not(.c-icon-c-s):not(.c-icon-custom-size){width:1rem;height:1rem;font-size:1rem}.c-icon[_ngcontent-%COMP%]:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-2xl{width:2rem;height:2rem;font-size:2rem}.c-icon[_ngcontent-%COMP%]:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-3xl{width:3rem;height:3rem;font-size:3rem}.c-icon[_ngcontent-%COMP%]:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-4xl{width:4rem;height:4rem;font-size:4rem}.c-icon[_ngcontent-%COMP%]:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-5xl{width:5rem;height:5rem;font-size:5rem}.c-icon[_ngcontent-%COMP%]:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-6xl{width:6rem;height:6rem;font-size:6rem}.c-icon[_ngcontent-%COMP%]:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-7xl{width:7rem;height:7rem;font-size:7rem}.c-icon[_ngcontent-%COMP%]:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-8xl{width:8rem;height:8rem;font-size:8rem}.c-icon[_ngcontent-%COMP%]:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-9xl{width:9rem;height:9rem;font-size:9rem}.c-icon[_ngcontent-%COMP%]:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-xl{width:1.5rem;height:1.5rem;font-size:1.5rem}.c-icon[_ngcontent-%COMP%]:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-lg{width:1.25rem;height:1.25rem;font-size:1.25rem}.c-icon[_ngcontent-%COMP%]:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-sm{width:.875rem;height:.875rem;font-size:.875rem}.c-icon-c-s[_ngcontent-%COMP%], .c-icon-custom-size[_ngcontent-%COMP%]{width:auto!important;height:auto!important}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c-icon',
                template: "<img *ngIf=\"src\"\r\n     [cHtmlAttr]=\"attributes\"\r\n     [attr.alt]=\"title\"\r\n     [ngClass]=\"customClasses\"\r\n     [src]=\"src\"\r\n/>\r\n<svg  *ngIf=\"(!src) && (!use) && (!!code)\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      [attr.width]=\"width\"\r\n      [attr.height]=\"height || width\"\r\n      [attr.viewBox]=\"viewBox\"\r\n      [innerHtml]=\"iconCode\"\r\n      [ngClass]=\"computedClasses\"\r\n      [cHtmlAttr]=\"attributes\"\r\n      role=\"img\"\r\n      pointer-events=\"none\"\r\n>\r\n  {{titleCode}}\r\n</svg>\r\n<svg *ngIf=\"use\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     [attr.width]=\"width\"\r\n     [attr.height]=\"height || width\"\r\n     [ngClass]=\"computedClasses\"\r\n     [cHtmlAttr]=\"attributes\"\r\n     role=\"img\"\r\n     pointer-events=\"none\"\r\n>\r\n  <use [attr.href]=\"use\"></use>\r\n</svg>\r\n",
                styles: [".c-icon{display:inline-block;color:inherit;text-align:center;fill:currentColor}.c-icon:not(.c-icon-c-s):not(.c-icon-custom-size){width:1rem;height:1rem;font-size:1rem}.c-icon:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-2xl{width:2rem;height:2rem;font-size:2rem}.c-icon:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-3xl{width:3rem;height:3rem;font-size:3rem}.c-icon:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-4xl{width:4rem;height:4rem;font-size:4rem}.c-icon:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-5xl{width:5rem;height:5rem;font-size:5rem}.c-icon:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-6xl{width:6rem;height:6rem;font-size:6rem}.c-icon:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-7xl{width:7rem;height:7rem;font-size:7rem}.c-icon:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-8xl{width:8rem;height:8rem;font-size:8rem}.c-icon:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-9xl{width:9rem;height:9rem;font-size:9rem}.c-icon:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-xl{width:1.5rem;height:1.5rem;font-size:1.5rem}.c-icon:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-lg{width:1.25rem;height:1.25rem;font-size:1.25rem}.c-icon:not(.c-icon-c-s):not(.c-icon-custom-size).c-icon-sm{width:.875rem;height:.875rem;font-size:.875rem}.c-icon-c-s,.c-icon-custom-size{width:auto!important;height:auto!important}"]
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }, { type: IconSetService }]; }, { attributes: [{
            type: i0.Input
        }], size: [{
            type: i0.Input
        }], use: [{
            type: i0.Input
        }], name: [{
            type: i0.Input
        }], viewBox: [{
            type: i0.Input
        }], content: [{
            type: i0.Input
        }], src: [{
            type: i0.Input
        }], title: [{
            type: i0.Input
        }], customClasses: [{
            type: i0.Input
        }], width: [{
            type: i0.Input
        }], height: [{
            type: i0.Input
        }] }); })();
        return IconComponent;
    }());
    IconComponent.ctorParameters = function () { return [
        { type: platformBrowser.DomSanitizer },
        { type: IconSetService }
    ]; };
    IconComponent.propDecorators = {
        attributes: [{ type: i0.Input }],
        name: [{ type: i0.Input }],
        content: [{ type: i0.Input }],
        size: [{ type: i0.Input }],
        src: [{ type: i0.Input }],
        title: [{ type: i0.Input }],
        use: [{ type: i0.Input }],
        customClasses: [{ type: i0.Input }],
        viewBox: [{ type: i0.Input }],
        width: [{ type: i0.Input }],
        height: [{ type: i0.Input }]
    };

    var HtmlAttributesDirective = /** @class */ (function () {
        function HtmlAttributesDirective(renderer, el) {
            this.renderer = renderer;
            this.el = el;
        }
        HtmlAttributesDirective.prototype.ngOnInit = function () {
            var attribs = this.cHtmlAttr;
            for (var attr in attribs) {
                if (attr === 'style' && typeof (attribs[attr]) === 'object') {
                    this.setStyle(attribs[attr]);
                }
                else if (attr === 'class') {
                    this.addClass(attribs[attr]);
                }
                else {
                    this.setAttrib(attr, attribs[attr]);
                }
            }
        };
        HtmlAttributesDirective.prototype.setStyle = function (styles) {
            // tslint:disable-next-line:forin
            for (var style in styles) {
                this.renderer.setStyle(this.el.nativeElement, style, styles[style]);
            }
        };
        HtmlAttributesDirective.prototype.addClass = function (classes) {
            var _this = this;
            var classArray = (Array.isArray(classes) ? classes : classes.split(' '));
            classArray.filter(function (element) { return element.length > 0; }).forEach(function (element) {
                _this.renderer.addClass(_this.el.nativeElement, element);
            });
        };
        HtmlAttributesDirective.prototype.setAttrib = function (key, value) {
            value !== null ?
                this.renderer.setAttribute(this.el.nativeElement, key, value) :
                this.renderer.removeAttribute(this.el.nativeElement, key);
        };
HtmlAttributesDirective.ɵfac = function HtmlAttributesDirective_Factory(t) { return new (t || HtmlAttributesDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
HtmlAttributesDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HtmlAttributesDirective, selectors: [["", "cHtmlAttr", ""]], inputs: { cHtmlAttr: "cHtmlAttr" }, exportAs: ["cHtmlAttr"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HtmlAttributesDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[cHtmlAttr]',
                exportAs: 'cHtmlAttr'
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { cHtmlAttr: [{
            type: i0.Input
        }] }); })();
        return HtmlAttributesDirective;
    }());
    HtmlAttributesDirective.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef }
    ]; };
    HtmlAttributesDirective.propDecorators = {
        cHtmlAttr: [{ type: i0.Input }]
    };

    var IconModule = /** @class */ (function () {
        function IconModule() {
        }
IconModule.ɵfac = function IconModule_Factory(t) { return new (t || IconModule)(); };
IconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IconModule });
IconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            common.CommonModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IconModule, { declarations: [IconComponent, HtmlAttributesDirective], imports: [ɵngcc2.CommonModule], exports: [IconComponent, HtmlAttributesDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    IconComponent,
                    HtmlAttributesDirective
                ],
                imports: [
                    common.CommonModule,
                ],
                exports: [
                    IconComponent,
                    HtmlAttributesDirective
                ]
            }]
    }], function () { return []; }, null); })();
        return IconModule;
    }());

    var IconSetModule = /** @class */ (function () {
        function IconSetModule(parentModule) {
            if (parentModule) {
                throw new Error('CoreUI IconSetModule is already loaded. Import it in the AppModule only');
            }
        }
        IconSetModule.forRoot = function () {
            return {
                ngModule: IconSetModule,
                providers: [
                    { provide: IconSetService }
                ]
            };
        };
IconSetModule.ɵfac = function IconSetModule_Factory(t) { return new (t || IconSetModule)(ɵngcc0.ɵɵinject(IconSetModule, 12)); };
IconSetModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IconSetModule });
IconSetModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [
        IconSetService
    ], imports: [[
            common.CommonModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IconSetModule, { imports: [ɵngcc2.CommonModule] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconSetModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                ],
                providers: [
                    IconSetService
                ]
            }]
    }], function () { return [{ type: IconSetModule, decorators: [{
                type: i0.Optional
            }, {
                type: i0.SkipSelf
            }] }]; }, null); })();
        return IconSetModule;
    }());
    IconSetModule.ctorParameters = function () { return [
        { type: IconSetModule, decorators: [{ type: i0.Optional }, { type: i0.SkipSelf }] }
    ]; };

    /*
     * Public API Surface of @coreui/icons-angular
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.IconComponent = IconComponent;
    exports.IconModule = IconModule;
    exports.IconSetModule = IconSetModule;
    exports.IconSetService = IconSetService;
    exports.ɵa = HtmlAttributesDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=coreui-icons-angular.umd.js.map