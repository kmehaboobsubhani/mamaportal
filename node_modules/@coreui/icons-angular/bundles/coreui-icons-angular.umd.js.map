{"version":3,"file":"coreui-icons-angular.umd.js","sources":["../../../projects/coreui/icons-angular/src/lib/icon-set/icon-set.service.ts","../../../projects/coreui/icons-angular/src/lib/icon/icon.component.ts","../../../projects/coreui/icons-angular/src/lib/shared/html-attr.directive.ts","../../../projects/coreui/icons-angular/src/lib/icon/icon.module.ts","../../../projects/coreui/icons-angular/src/lib/icon-set/icon-set.module.ts","../../../projects/coreui/icons-angular/src/public-api.ts","../../../projects/coreui/icons-angular/src/coreui-icons-angular.ts"],"names":["Injectable","Component","DomSanitizer","Input","Directive","Renderer2","ElementRef","NgModule","CommonModule","Optional","SkipSelf"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nexport interface IIconSet {\r\n  [iconName: string]: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IconSetService {\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _icons: IIconSet = {};\r\n\r\n  constructor() {}\r\n\r\n  set icons(iconSet) {\r\n    this._icons = iconSet;\r\n  }\r\n  get icons(): IIconSet {\r\n    return this._icons;\r\n  }\r\n\r\n  public getIcon(name): string[] {\r\n    const icon = this.icons[name];\r\n    if (!icon) {\r\n      console.warn(`CoreUI WARN: Icon ${name} is not registered in IconService`);\r\n    }\r\n    return this.icons[name];\r\n  }\r\n}\r\n","import { Component, HostBinding, Input } from '@angular/core';\r\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\r\nimport {IconSetService} from '../icon-set/icon-set.service';\r\n\r\n@Component({\r\n  selector: 'c-icon',\r\n  templateUrl: './icon.component.svg',\r\n  styleUrls: ['./icon.component.scss']\r\n})\r\nexport class IconComponent {\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _name: string;\r\n  // tslint:disable-next-line:variable-name\r\n  private _viewBox: string;\r\n\r\n  @Input() attributes: any = { role: 'img'};\r\n  @Input()\r\n  set name(name: string) {\r\n    this._name = name;\r\n  }\r\n  get name(): string {\r\n    const nameIsKebabCase = this._name && this._name.includes('-');\r\n    return nameIsKebabCase ? this.toCamelCase(this._name) : this._name;\r\n  }\r\n  @Input() content?: string | string[];\r\n  @Input() size?: 'custom' | 'custom-size' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl' | '' = '';\r\n  @Input() src?: string;\r\n  @Input() title?: string;\r\n  @Input() use = '';\r\n  @Input() customClasses?: string|string[]|Set<string>|{[klass: string]: any};\r\n  @Input()\r\n  set viewBox(viewBox: string) {\r\n    this._viewBox = viewBox;\r\n  }\r\n  get viewBox(): string {\r\n    return this._viewBox || `0 0 ${ this.scale }`;\r\n  }\r\n  @Input() width?;\r\n  @Input() height?;\r\n\r\n  get titleCode(): string {\r\n    return this.title ? `<title>${this.title}</title>` : '';\r\n  }\r\n\r\n  get code(): string[] | undefined | string {\r\n    if (this.content) {\r\n      return this.content;\r\n    } else if (this.iconSet) {\r\n      return this.iconSet.getIcon(this.name);\r\n    }\r\n    console.warn(`c-icon component: icon name '${this.name}' does not exist for IconSet service. ` +\r\n      `To use icon by 'name' prop you need to add it to IconSet service. \\n`,\r\n      this.name\r\n    );\r\n    return undefined;\r\n  }\r\n  get iconCode(): SafeHtml {\r\n    const code = Array.isArray(this.code) ? this.code[1] || this.code[0] : this.code;\r\n    return this.sanitizer.bypassSecurityTrustHtml(this.titleCode + code);\r\n  }\r\n\r\n  get scale(): string {\r\n    return Array.isArray(this.code) && this.code.length > 1 ? this.code[0] : '64 64';\r\n  }\r\n\r\n  get computedSize(): 'custom-size' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl' | '' {\r\n    const addCustom = !this.size && (this.width || this.height);\r\n    return this.size === 'custom' || addCustom ? 'custom-size' : this.size;\r\n  }\r\n  get computedClasses(): any {\r\n    const classes = {\r\n      'c-icon': true,\r\n      [`c-icon-${this.computedSize}`]: !!this.computedSize\r\n    };\r\n    return !!this.customClasses ? this.customClasses : classes;\r\n  }\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private iconSet: IconSetService\r\n  ) { }\r\n\r\n  toCamelCase(str): any {\r\n    return str.replace(/([-_][a-z0-9])/ig, ($1) => {\r\n      return $1.toUpperCase().replace('-', '');\r\n    });\r\n  }\r\n}\r\n","import {Directive, ElementRef, Input, OnInit, Renderer2} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[cHtmlAttr]',\r\n  exportAs: 'cHtmlAttr'\r\n})\r\nexport class HtmlAttributesDirective implements OnInit {\r\n\r\n  @Input() cHtmlAttr: {[key: string]: any };\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private el: ElementRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const attribs = this.cHtmlAttr;\r\n    for (const attr in attribs) {\r\n      if (attr === 'style' && typeof(attribs[attr]) === 'object' ) {\r\n        this.setStyle(attribs[attr]);\r\n      } else if (attr === 'class') {\r\n        this.addClass(attribs[attr]);\r\n      } else {\r\n        this.setAttrib(attr, attribs[attr]);\r\n      }\r\n    }\r\n  }\r\n\r\n  private setStyle(styles): void {\r\n    // tslint:disable-next-line:forin\r\n    for (const style in styles) {\r\n      this.renderer.setStyle(this.el.nativeElement, style, styles[style] );\r\n    }\r\n  }\r\n\r\n  private addClass(classes): void {\r\n    const classArray = (Array.isArray(classes) ? classes : classes.split(' '));\r\n    classArray.filter((element) => element.length > 0).forEach(element => {\r\n      this.renderer.addClass(this.el.nativeElement, element );\r\n    });\r\n  }\r\n\r\n  private setAttrib(key, value): void {\r\n    value !== null ?\r\n      this.renderer.setAttribute(this.el.nativeElement, key, value ) :\r\n      this.renderer.removeAttribute(this.el.nativeElement, key);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {IconComponent} from './icon.component';\r\nimport { HtmlAttributesDirective } from '../shared/html-attr.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IconComponent,\r\n    HtmlAttributesDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    IconComponent,\r\n    HtmlAttributesDirective\r\n  ],\r\n})\r\nexport class IconModule {}\r\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {IconSetService} from './icon-set.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  providers: [\r\n    IconSetService\r\n  ]\r\n})\r\nexport class IconSetModule {\r\n  constructor(@Optional() @SkipSelf() parentModule?: IconSetModule) {\r\n    if (parentModule) {\r\n      throw new Error(\r\n        'CoreUI IconSetModule is already loaded. Import it in the AppModule only');\r\n    }\r\n  }\r\n\r\n  static forRoot(): ModuleWithProviders<IconSetModule> {\r\n    return {\r\n      ngModule: IconSetModule,\r\n      providers: [\r\n        {provide: IconSetService}\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/*\n * Public API Surface of @coreui/icons-angular\n */\nexport { IconComponent } from './lib/icon/icon.component';\nexport { IconModule } from './lib/icon/icon.module';\nexport { IconSetService, IIconSet } from './lib/icon-set/icon-set.service';\nexport { IconSetModule } from './lib/icon-set/icon-set.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {HtmlAttributesDirective as ɵa} from './lib/shared/html-attr.directive';"]}