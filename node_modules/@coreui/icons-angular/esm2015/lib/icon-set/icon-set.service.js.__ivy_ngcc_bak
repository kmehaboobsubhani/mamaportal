import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class IconSetService {
    constructor() {
        // tslint:disable-next-line:variable-name
        this._icons = {};
    }
    set icons(iconSet) {
        this._icons = iconSet;
    }
    get icons() {
        return this._icons;
    }
    getIcon(name) {
        const icon = this.icons[name];
        if (!icon) {
            console.warn(`CoreUI WARN: Icon ${name} is not registered in IconService`);
        }
        return this.icons[name];
    }
}
IconSetService.ɵprov = i0.ɵɵdefineInjectable({ factory: function IconSetService_Factory() { return new IconSetService(); }, token: IconSetService, providedIn: "root" });
IconSetService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
IconSetService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi1zZXQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS9pY29ucy1hbmd1bGFyL3NyYy9saWIvaWNvbi1zZXQvaWNvbi1zZXQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQVMzQyxNQUFNLE9BQU8sY0FBYztJQUt6QjtRQUhBLHlDQUF5QztRQUNqQyxXQUFNLEdBQWEsRUFBRSxDQUFDO0lBRWYsQ0FBQztJQUVoQixJQUFJLEtBQUssQ0FBQyxPQUFPO1FBQ2YsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUM7SUFDeEIsQ0FBQztJQUNELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0lBRU0sT0FBTyxDQUFDLElBQUk7UUFDakIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QixJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ1QsT0FBTyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsSUFBSSxtQ0FBbUMsQ0FBQyxDQUFDO1NBQzVFO1FBQ0QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzFCLENBQUM7Ozs7WUF2QkYsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJSWNvblNldCB7XHJcbiAgW2ljb25OYW1lOiBzdHJpbmddOiBzdHJpbmdbXTtcclxufVxyXG5cclxuQEluamVjdGFibGUoe1xyXG4gIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSWNvblNldFNlcnZpY2Uge1xyXG5cclxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6dmFyaWFibGUtbmFtZVxyXG4gIHByaXZhdGUgX2ljb25zOiBJSWNvblNldCA9IHt9O1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHt9XHJcblxyXG4gIHNldCBpY29ucyhpY29uU2V0KSB7XHJcbiAgICB0aGlzLl9pY29ucyA9IGljb25TZXQ7XHJcbiAgfVxyXG4gIGdldCBpY29ucygpOiBJSWNvblNldCB7XHJcbiAgICByZXR1cm4gdGhpcy5faWNvbnM7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0SWNvbihuYW1lKTogc3RyaW5nW10ge1xyXG4gICAgY29uc3QgaWNvbiA9IHRoaXMuaWNvbnNbbmFtZV07XHJcbiAgICBpZiAoIWljb24pIHtcclxuICAgICAgY29uc29sZS53YXJuKGBDb3JlVUkgV0FSTjogSWNvbiAke25hbWV9IGlzIG5vdCByZWdpc3RlcmVkIGluIEljb25TZXJ2aWNlYCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5pY29uc1tuYW1lXTtcclxuICB9XHJcbn1cclxuIl19