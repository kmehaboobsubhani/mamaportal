{"version":3,"file":"coreui-icons-angular.js","sources":["../../../projects/coreui/icons-angular/src/lib/icon-set/icon-set.service.ts","../../../projects/coreui/icons-angular/src/lib/icon/icon.component.ts","../../../projects/coreui/icons-angular/src/lib/shared/html-attr.directive.ts","../../../projects/coreui/icons-angular/src/lib/icon/icon.module.ts","../../../projects/coreui/icons-angular/src/lib/icon-set/icon-set.module.ts","../../../projects/coreui/icons-angular/src/public-api.ts","../../../projects/coreui/icons-angular/src/coreui-icons-angular.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nexport interface IIconSet {\r\n  [iconName: string]: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IconSetService {\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _icons: IIconSet = {};\r\n\r\n  constructor() {}\r\n\r\n  set icons(iconSet) {\r\n    this._icons = iconSet;\r\n  }\r\n  get icons(): IIconSet {\r\n    return this._icons;\r\n  }\r\n\r\n  public getIcon(name): string[] {\r\n    const icon = this.icons[name];\r\n    if (!icon) {\r\n      console.warn(`CoreUI WARN: Icon ${name} is not registered in IconService`);\r\n    }\r\n    return this.icons[name];\r\n  }\r\n}\r\n","import { Component, HostBinding, Input } from '@angular/core';\r\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\r\nimport {IconSetService} from '../icon-set/icon-set.service';\r\n\r\n@Component({\r\n  selector: 'c-icon',\r\n  templateUrl: './icon.component.svg',\r\n  styleUrls: ['./icon.component.scss']\r\n})\r\nexport class IconComponent {\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _name: string;\r\n  // tslint:disable-next-line:variable-name\r\n  private _viewBox: string;\r\n\r\n  @Input() attributes: any = { role: 'img'};\r\n  @Input()\r\n  set name(name: string) {\r\n    this._name = name;\r\n  }\r\n  get name(): string {\r\n    const nameIsKebabCase = this._name && this._name.includes('-');\r\n    return nameIsKebabCase ? this.toCamelCase(this._name) : this._name;\r\n  }\r\n  @Input() content?: string | string[];\r\n  @Input() size?: 'custom' | 'custom-size' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl' | '' = '';\r\n  @Input() src?: string;\r\n  @Input() title?: string;\r\n  @Input() use = '';\r\n  @Input() customClasses?: string|string[]|Set<string>|{[klass: string]: any};\r\n  @Input()\r\n  set viewBox(viewBox: string) {\r\n    this._viewBox = viewBox;\r\n  }\r\n  get viewBox(): string {\r\n    return this._viewBox || `0 0 ${ this.scale }`;\r\n  }\r\n  @Input() width?;\r\n  @Input() height?;\r\n\r\n  get titleCode(): string {\r\n    return this.title ? `<title>${this.title}</title>` : '';\r\n  }\r\n\r\n  get code(): string[] | undefined | string {\r\n    if (this.content) {\r\n      return this.content;\r\n    } else if (this.iconSet) {\r\n      return this.iconSet.getIcon(this.name);\r\n    }\r\n    console.warn(`c-icon component: icon name '${this.name}' does not exist for IconSet service. ` +\r\n      `To use icon by 'name' prop you need to add it to IconSet service. \\n`,\r\n      this.name\r\n    );\r\n    return undefined;\r\n  }\r\n  get iconCode(): SafeHtml {\r\n    const code = Array.isArray(this.code) ? this.code[1] || this.code[0] : this.code;\r\n    return this.sanitizer.bypassSecurityTrustHtml(this.titleCode + code);\r\n  }\r\n\r\n  get scale(): string {\r\n    return Array.isArray(this.code) && this.code.length > 1 ? this.code[0] : '64 64';\r\n  }\r\n\r\n  get computedSize(): 'custom-size' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl' | '' {\r\n    const addCustom = !this.size && (this.width || this.height);\r\n    return this.size === 'custom' || addCustom ? 'custom-size' : this.size;\r\n  }\r\n  get computedClasses(): any {\r\n    const classes = {\r\n      'c-icon': true,\r\n      [`c-icon-${this.computedSize}`]: !!this.computedSize\r\n    };\r\n    return !!this.customClasses ? this.customClasses : classes;\r\n  }\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private iconSet: IconSetService\r\n  ) { }\r\n\r\n  toCamelCase(str): any {\r\n    return str.replace(/([-_][a-z0-9])/ig, ($1) => {\r\n      return $1.toUpperCase().replace('-', '');\r\n    });\r\n  }\r\n}\r\n","import {Directive, ElementRef, Input, OnInit, Renderer2} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[cHtmlAttr]',\r\n  exportAs: 'cHtmlAttr'\r\n})\r\nexport class HtmlAttributesDirective implements OnInit {\r\n\r\n  @Input() cHtmlAttr: {[key: string]: any };\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private el: ElementRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const attribs = this.cHtmlAttr;\r\n    for (const attr in attribs) {\r\n      if (attr === 'style' && typeof(attribs[attr]) === 'object' ) {\r\n        this.setStyle(attribs[attr]);\r\n      } else if (attr === 'class') {\r\n        this.addClass(attribs[attr]);\r\n      } else {\r\n        this.setAttrib(attr, attribs[attr]);\r\n      }\r\n    }\r\n  }\r\n\r\n  private setStyle(styles): void {\r\n    // tslint:disable-next-line:forin\r\n    for (const style in styles) {\r\n      this.renderer.setStyle(this.el.nativeElement, style, styles[style] );\r\n    }\r\n  }\r\n\r\n  private addClass(classes): void {\r\n    const classArray = (Array.isArray(classes) ? classes : classes.split(' '));\r\n    classArray.filter((element) => element.length > 0).forEach(element => {\r\n      this.renderer.addClass(this.el.nativeElement, element );\r\n    });\r\n  }\r\n\r\n  private setAttrib(key, value): void {\r\n    value !== null ?\r\n      this.renderer.setAttribute(this.el.nativeElement, key, value ) :\r\n      this.renderer.removeAttribute(this.el.nativeElement, key);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {IconComponent} from './icon.component';\r\nimport { HtmlAttributesDirective } from '../shared/html-attr.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IconComponent,\r\n    HtmlAttributesDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    IconComponent,\r\n    HtmlAttributesDirective\r\n  ],\r\n})\r\nexport class IconModule {}\r\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {IconSetService} from './icon-set.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  providers: [\r\n    IconSetService\r\n  ]\r\n})\r\nexport class IconSetModule {\r\n  constructor(@Optional() @SkipSelf() parentModule?: IconSetModule) {\r\n    if (parentModule) {\r\n      throw new Error(\r\n        'CoreUI IconSetModule is already loaded. Import it in the AppModule only');\r\n    }\r\n  }\r\n\r\n  static forRoot(): ModuleWithProviders<IconSetModule> {\r\n    return {\r\n      ngModule: IconSetModule,\r\n      providers: [\r\n        {provide: IconSetService}\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/*\n * Public API Surface of @coreui/icons-angular\n */\nexport { IconComponent } from './lib/icon/icon.component';\nexport { IconModule } from './lib/icon/icon.module';\nexport { IconSetService, IIconSet } from './lib/icon-set/icon-set.service';\nexport { IconSetModule } from './lib/icon-set/icon-set.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {HtmlAttributesDirective as ɵa} from './lib/shared/html-attr.directive';"]}