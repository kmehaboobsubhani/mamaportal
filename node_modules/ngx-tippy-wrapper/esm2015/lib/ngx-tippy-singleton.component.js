import { Component, ElementRef, Input, ViewChild, Inject, PLATFORM_ID } from '@angular/core';
import { isPlatformServer } from '@angular/common';
import tippy, { createSingleton } from 'tippy.js';
/**
 * This component implements case - singleton: single tippy element that takes the place of an array of regular tippy instances
 */
import * as ɵngcc0 from '@angular/core';

const _c0 = ["contentWrapper"];
const _c1 = ["*"];
export class NgxTippySingletonComponent {
    constructor(platform) {
        this.platform = platform;
    }
    ngAfterViewInit() {
        if (isPlatformServer(this.platform))
            return;
        this.setTooltips();
    }
    setTooltips() {
        const contentWrapperNativeEl = this.contentWrapper.nativeElement;
        const tooltips = Array.from(contentWrapperNativeEl.querySelectorAll('[data-singleton]'));
        this.initTippy(tooltips);
    }
    initTippy(tooltips) {
        createSingleton(tippy(tooltips), this.tippyProps);
    }
}
NgxTippySingletonComponent.ɵfac = function NgxTippySingletonComponent_Factory(t) { return new (t || NgxTippySingletonComponent)(ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };
NgxTippySingletonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxTippySingletonComponent, selectors: [["ngx-tippy-singleton"]], viewQuery: function NgxTippySingletonComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 1, ElementRef);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentWrapper = _t.first);
    } }, inputs: { tippyProps: "tippyProps" }, ngContentSelectors: _c1, decls: 3, vars: 0, consts: [["contentWrapper", ""]], template: function NgxTippySingletonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", null, 0);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
NgxTippySingletonComponent.ctorParameters = () => [
    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
];
NgxTippySingletonComponent.propDecorators = {
    tippyProps: [{ type: Input }],
    contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { read: ElementRef, static: false },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxTippySingletonComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-tippy-singleton',
                template: `
    <div #contentWrapper>
      <ng-content></ng-content>
    </div>
  `
            }]
    }], function () { return [{ type: Object, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }]; }, { tippyProps: [{
            type: Input
        }], contentWrapper: [{
            type: ViewChild,
            args: ['contentWrapper', { read: ElementRef, static: false }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRpcHB5LXNpbmdsZXRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC10aXBweS13cmFwcGVyL3NyYy9saWIvbmd4LXRpcHB5LXNpbmdsZXRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUM1RyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRCxPQUFPLEtBQUssRUFBRSxFQUFFLGVBQWUsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUdsRDtBQUNBO0FBQ0EsR0FBRzs7Ozs7QUFTSCxNQUFNLE9BQU8sMEJBQTBCO0FBQUcsSUFJeEMsWUFBeUMsUUFBZ0I7QUFBSSxRQUFwQixhQUFRLEdBQVIsUUFBUSxDQUFRO0FBQUMsSUFBRSxDQUFDO0FBQy9ELElBQ0UsZUFBZTtBQUNqQixRQUFJLElBQUksZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztBQUFFLFlBQUEsT0FBTztBQUNoRCxRQUFJLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUN2QixJQUFFLENBQUM7QUFDSCxJQUNFLFdBQVc7QUFDYixRQUFJLE1BQU0sc0JBQXNCLEdBQWdCLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDO0FBQ2xGLFFBQUksTUFBTSxRQUFRLEdBQWtCLEtBQUssQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO0FBQzVHLFFBQ0ksSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM3QixJQUFFLENBQUM7QUFDSCxJQUNFLFNBQVMsQ0FBQyxRQUF1QjtBQUNuQyxRQUFJLGVBQWUsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3RELElBQUUsQ0FBQztBQUNIO3NEQTdCQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLHFCQUFxQixrQkFDL0IsUUFBUSxFQUFFO29EQUlULGNBQ0Y7Ozs7Ozs7Ozs7NkJBQ0k7QUFBQztBQUFvRCxZQUlMLE1BQU0sdUJBQTVDLE1BQU0sU0FBQyxXQUFXO0FBQVE7QUFBRztBQUd6Qyx5QkFOQSxLQUFLO0FBQUssNkJBQ1YsU0FBUyxTQUFDLGdCQUFnQixFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFO0FBQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFZpZXdDaGlsZCwgSW5qZWN0LCBQTEFURk9STV9JRCwgQWZ0ZXJWaWV3SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaXNQbGF0Zm9ybVNlcnZlciB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgdGlwcHksIHsgY3JlYXRlU2luZ2xldG9uIH0gZnJvbSAndGlwcHkuanMnO1xuaW1wb3J0IHsgTmd4VGlwcHlQcm9wcyB9IGZyb20gJy4vbmd4LXRpcHB5LmludGVyZmFjZXMnO1xuXG4vKipcbiAqIFRoaXMgY29tcG9uZW50IGltcGxlbWVudHMgY2FzZSAtIHNpbmdsZXRvbjogc2luZ2xlIHRpcHB5IGVsZW1lbnQgdGhhdCB0YWtlcyB0aGUgcGxhY2Ugb2YgYW4gYXJyYXkgb2YgcmVndWxhciB0aXBweSBpbnN0YW5jZXNcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmd4LXRpcHB5LXNpbmdsZXRvbicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiAjY29udGVudFdyYXBwZXI+XG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgPC9kaXY+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIE5neFRpcHB5U2luZ2xldG9uQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIEBJbnB1dCgpIHRpcHB5UHJvcHM/OiBOZ3hUaXBweVByb3BzO1xuICBAVmlld0NoaWxkKCdjb250ZW50V3JhcHBlcicsIHsgcmVhZDogRWxlbWVudFJlZiwgc3RhdGljOiBmYWxzZSB9KSBjb250ZW50V3JhcHBlcjogRWxlbWVudFJlZjtcblxuICBjb25zdHJ1Y3RvcihASW5qZWN0KFBMQVRGT1JNX0lEKSBwcml2YXRlIHBsYXRmb3JtOiBPYmplY3QpIHt9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIGlmIChpc1BsYXRmb3JtU2VydmVyKHRoaXMucGxhdGZvcm0pKSByZXR1cm47XG4gICAgdGhpcy5zZXRUb29sdGlwcygpO1xuICB9XG5cbiAgc2V0VG9vbHRpcHMoKSB7XG4gICAgY29uc3QgY29udGVudFdyYXBwZXJOYXRpdmVFbDogSFRNTEVsZW1lbnQgPSB0aGlzLmNvbnRlbnRXcmFwcGVyLm5hdGl2ZUVsZW1lbnQ7XG4gICAgY29uc3QgdG9vbHRpcHM6IEhUTUxFbGVtZW50W10gPSBBcnJheS5mcm9tKGNvbnRlbnRXcmFwcGVyTmF0aXZlRWwucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtc2luZ2xldG9uXScpKTtcblxuICAgIHRoaXMuaW5pdFRpcHB5KHRvb2x0aXBzKTtcbiAgfVxuXG4gIGluaXRUaXBweSh0b29sdGlwczogSFRNTEVsZW1lbnRbXSkge1xuICAgIGNyZWF0ZVNpbmdsZXRvbih0aXBweSh0b29sdGlwcyksIHRoaXMudGlwcHlQcm9wcyk7XG4gIH1cbn1cbiJdfQ==