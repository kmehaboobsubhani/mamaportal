{"version":3,"file":"ngx-tippy-wrapper.js","sources":["../../projects/ngx-tippy-wrapper/src/lib/ngx-tippy.service.ts","../../projects/ngx-tippy-wrapper/src/lib/ngx-tippy.directive.ts","../../projects/ngx-tippy-wrapper/src/lib/ngx-tippy-group.component.ts","../../projects/ngx-tippy-wrapper/src/lib/ngx-tippy-singleton.component.ts","../../projects/ngx-tippy-wrapper/src/lib/ngx-tippy.module.ts","../../../projects/ngx-tippy-wrapper/src/public-api.ts","../../../projects/ngx-tippy-wrapper/src/ngx-tippy-wrapper.ts"],"sourcesContent":["import { Injectable, Renderer2, RendererFactory2, isDevMode } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport tippy, { hideAll } from 'tippy.js';\nimport {\n  NgxTippyInstance,\n  NgxTippyProps,\n  NgxTippyContent,\n  NgxHideAllOptions,\n  InstancesChanges,\n  InstanceChangeReason,\n} from './ngx-tippy.interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxTippyService {\n  private tippyInstances: Map<string, NgxTippyInstance> = new Map();\n  private tippyInstances$ = new Subject<InstancesChanges>();\n  private renderer: Renderer2;\n\n  constructor(rendererFactory: RendererFactory2) {\n    this.createRenderer(rendererFactory);\n  }\n\n  /**\n   * Working with storage\n   */\n\n  /**\n   * Write tippy instances to storage\n   *\n   * @param name { string } name of tippy instance\n   * @param state { NgxTippyInstance } tippy instance\n   */\n  setInstance(name: string, state: NgxTippyInstance) {\n    this.tippyInstances.set(name, state);\n    this.emitInstancesChange('setInstance', name);\n  }\n\n  /**\n   * Get specific tippy instance\n   *\n   * @param name { string } name of tippy instance\n   * @returns { NgxTippyInstance | null } specific tippy instance or null\n   */\n  getInstance(name: string): NgxTippyInstance | null {\n    return this.tippyInstances.has(name) ? this.tippyInstances.get(name) : null;\n  }\n\n  /**\n   * Get all tippy instances from storage\n   *\n   * @returns { Map<string, NgxTippyInstance> | null } all tippy instances or null\n   */\n  getInstances(): Map<string, NgxTippyInstance> | null {\n    return this.tippyInstances.size ? this.tippyInstances : null;\n  }\n\n  /**\n   * Working with tippy instance methods\n   */\n\n  /**\n   * Programmatically show the tippy\n   *\n   * @param name { string } name of tippy instance\n   */\n  show(name: string) {\n    if (!this.tippyInstances.has(name)) {\n      this.throwError(`Instance with identifier '${name}' does not exist`);\n    }\n\n    this.tippyInstances.get(name).show();\n    this.emitInstancesChange('show', name);\n  }\n\n  /**\n   * Programmatically hide the tippy\n   *\n   * @param name { string } name of tippy instance\n   */\n  hide(name: string) {\n    if (!this.tippyInstances.has(name)) {\n      this.throwError(`Instance with identifier '${name}' does not exist`);\n    }\n\n    this.tippyInstances.get(name).hide();\n    this.emitInstancesChange('hide', name);\n  }\n\n  /**\n   * Will hide the tippy only if the cursor is outside of the tippy's interactive region\n   * This allows you to programmatically hook into interactive behavior upon a mouseleave event if implementing custom event listeners\n   *\n   * @param name { string } name of tippy instance\n   * @param name { mouseEvent } pass the mouse event object in from your event listener\n   */\n  hideWithInteractivity(name: string, mouseEvent: MouseEvent) {\n    if (!this.tippyInstances.has(name)) {\n      this.throwError(`Instance with identifier '${name}' does not exist`);\n    }\n\n    this.tippyInstances.get(name).hideWithInteractivity(mouseEvent);\n    this.emitInstancesChange('hideWithInteractivity', name);\n  }\n\n  /**\n   * Prevent a tippy from showing or hiding\n   *\n   * @param name { string } name of tippy instance\n   */\n  disable(name: string) {\n    if (!this.tippyInstances.has(name)) {\n      this.throwError(`Instance with identifier '${name}' does not exist`);\n    }\n\n    this.tippyInstances.get(name).disable();\n    this.emitInstancesChange('disable', name);\n  }\n\n  /**\n   * Re-enable a tippy\n   *\n   * @param name { string } name of tippy instance\n   */\n  enable(name: string) {\n    if (!this.tippyInstances.has(name)) {\n      this.throwError(`Instance with identifier '${name}' does not exist`);\n    }\n\n    this.tippyInstances.get(name).enable();\n    this.emitInstancesChange('enable', name);\n  }\n\n  /**\n   * Update any tippy props\n   *\n   * @param name { string } name of tippy instance\n   * @param tippyProps { NgxTippyProps } new props\n   */\n  setProps(name: string, tippyProps: NgxTippyProps) {\n    if (!this.tippyInstances.has(name)) {\n      this.throwError(`Instance with identifier '${name}' does not exist`);\n    }\n\n    this.tippyInstances.get(name).setProps(tippyProps);\n    this.emitInstancesChange('setProps', name);\n  }\n\n  /**\n   * Update the content for tippy\n   *\n   * @param name { string } name of tippy instance\n   * @param tippyContent { NgxTippyContent } new content\n   */\n  setContent(name: string, tippyContent: NgxTippyContent) {\n    if (!this.tippyInstances.has(name)) {\n      this.throwError(`Instance with identifier '${name}' does not exist`);\n    }\n\n    this.setTemplateVisible(tippyContent);\n    this.tippyInstances.get(name).setContent(tippyContent);\n    this.emitInstancesChange('setContent', name);\n  }\n\n  /**\n   * The element(s) that the trigger event listeners are added to\n   * Allows you to separate the tippy's positioning from its trigger source\n   *\n   * @param name { string } name of tippy instance\n   * @param triggerTarget { Element | Element[] } element(s) that the trigger tooltip\n   */\n  setTriggerTarget(name: string, triggerTarget: Element | Element[]) {\n    if (!this.tippyInstances.has(name)) {\n      this.throwError(`Instance with identifier '${name}' does not exist`);\n    }\n\n    this.tippyInstances.get(name).setProps({ triggerTarget });\n    this.emitInstancesChange('setTriggerTarget', name);\n  }\n\n  /**\n   * Unmount the tippy from the DOM\n   *\n   * @param name { string } name of tippy instance\n   */\n  unmount(name: string) {\n    if (!this.tippyInstances.has(name)) {\n      this.throwError(`Instance with identifier '${name}' does not exist`);\n    }\n\n    this.tippyInstances.get(name).unmount();\n    this.emitInstancesChange('unmount', name);\n  }\n\n  /**\n   * Clears the instances delay timeouts\n   *\n   * @param name { string } name of tippy instance\n   */\n  clearDelayTimeouts(name: string) {\n    if (!this.tippyInstances.has(name)) {\n      this.throwError(`Instance with identifier '${name}' does not exist`);\n    }\n\n    this.tippyInstances.get(name).clearDelayTimeouts();\n    this.emitInstancesChange('clearDelayTimeouts', name);\n  }\n\n  /**\n   * Permanently destroy and clean up the tippy instance\n   *\n   * @param name { string } name of tippy instance\n   */\n  destroy(name: string) {\n    if (!this.tippyInstances.has(name)) {\n      this.throwError(`Instance with identifier '${name}' does not exist`);\n    }\n\n    this.tippyInstances.get(name).destroy();\n    this.emitInstancesChange('destroy', name);\n    this.tippyInstances.delete(name);\n  }\n\n  /** Working with tippy static methods */\n\n  /**\n   * Set the default props for each new tippy instance\n   *\n   * @param tippyProps { NgxTippyProps } default props\n   */\n  setDefaultProps(tippyProps: NgxTippyProps) {\n    tippy.setDefaultProps(tippyProps);\n  }\n\n  /**\n   * Show all tippies\n   */\n  showAll() {\n    this.tippyInstances.forEach((tippyInstance: NgxTippyInstance, key: string) => {\n      tippyInstance.show();\n      this.emitInstancesChange('show', key);\n    });\n  }\n\n  /**\n   * Hide all tippies or hide all except a particular one\n   * Additional hide them with duration\n   *\n   * @param { NgxHideAllOptions } [options] - additional hiding options\n   */\n  hideAll(options?: NgxHideAllOptions) {\n    const exclude =\n      options && this.tippyInstances.has(options.excludeName) && this.tippyInstances.get(options.excludeName);\n    const duration = options && options.duration;\n\n    hideAll({ duration, exclude });\n  }\n\n  /**\n   * Subscription to change of tippy instances\n   *\n   * @returns { Observable<InstancesChanges> } observable of tippy instances change\n   */\n  get instancesChanges(): Observable<InstancesChanges> {\n    return this.tippyInstances$.asObservable();\n  }\n\n  /**\n   * Service methods\n   */\n  public setTemplateVisible(tippyContent: NgxTippyContent) {\n    tippyContent instanceof Element && this.renderer.setStyle(tippyContent, 'display', 'block');\n  }\n\n  private emitInstancesChange(reason: InstanceChangeReason, name: string) {\n    const instance = this.tippyInstances.get(name);\n    this.tippyInstances$.next({ name, reason, instance });\n  }\n\n  private createRenderer(rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  private throwError(message: string, errorConstrictor: ErrorConstructor = Error) {\n    if (!isDevMode()) return;\n    throw new errorConstrictor(message);\n  }\n}\n","import { Directive, OnInit, ElementRef, Input, Renderer2, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport tippy, { Instance } from 'tippy.js';\nimport { NgxTippyService } from './ngx-tippy.service';\nimport { NgxTippyProps, NgxTippyInstance, NgxTippyContent } from './ngx-tippy.interfaces';\n\ninterface TippyHTMLElement extends HTMLElement {\n  _tippy: Instance;\n}\n\n@Directive({\n  selector: '[ngxTippy]',\n})\nexport class NgxTippyDirective implements OnInit {\n  @Input() ngxTippy?: NgxTippyContent | null;\n  @Input() tippyProps?: NgxTippyProps;\n  @Input() tippyName?: string;\n  @Input() tippyClassName?: string;\n\n  constructor(\n    private tippyEl: ElementRef,\n    private ngxTippyService: NgxTippyService,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platform: Object\n  ) {}\n\n  ngOnInit() {\n    if (isPlatformServer(this.platform)) return;\n    this.initTippy();\n  }\n\n  /**\n   * Tooltip initialize\n   * Content can be directly passed through `ngxTippy` selector\n   */\n  private initTippy() {\n    if (this.ngxTippy === null || this.ngxTippy === undefined) return;\n\n    const tippyTarget = this.tippyEl.nativeElement;\n    const tippyTemplate = this.ngxTippy;\n\n    tippy(tippyTarget, { ...(this.tippyProps || {}), ...(tippyTemplate && { content: tippyTemplate }) });\n\n    this.ngxTippyService.setTemplateVisible(tippyTemplate);\n    this.setTippyInstance(tippyTarget);\n  }\n\n  private setTippyInstance(tippyTarget: TippyHTMLElement) {\n    const tippyInstance: NgxTippyInstance = tippyTarget._tippy;\n\n    this.writeInstancesToStorage(tippyInstance);\n    this.setClassName(tippyInstance);\n  }\n\n  private setClassName(tippyInstance: NgxTippyInstance) {\n    if (!this.tippyClassName) return;\n    const classNames = this.tippyClassName.split(' ');\n\n    classNames.length &&\n      classNames.forEach((className) => {\n        this.renderer.addClass(tippyInstance.popper.firstElementChild, className);\n      });\n  }\n\n  /**\n   * To manipulate tooltips, write all instances to storage\n   * `tippyName` used as unique key\n   * If `tippyName` does not provided - it will be generated using `tippyInstance.id`\n   *\n   * @param tippyInstance { NgxTippyInstance }\n   */\n  private writeInstancesToStorage(tippyInstance: NgxTippyInstance) {\n    this.ngxTippyService.setInstance(this.tippyName || `tippy-${tippyInstance.id}`, tippyInstance);\n  }\n}\n","import { Component, ElementRef, Input, ViewChild, Inject, PLATFORM_ID, AfterViewInit } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport tippy from 'tippy.js';\nimport { NgxTippyProps } from './ngx-tippy.interfaces';\n\n/**\n * This component implements next case: different tooltip content to many different elements, while only needing to initialize once with shared props\n */\n@Component({\n  selector: 'ngx-tippy-group',\n  template: `\n    <div #contentWrapper>\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class NgxTippyGroupComponent implements AfterViewInit {\n  @Input() tippyProps?: NgxTippyProps;\n  @ViewChild('contentWrapper', { read: ElementRef, static: false }) contentWrapper: ElementRef;\n\n  constructor(@Inject(PLATFORM_ID) private platform: Object) {}\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platform)) return;\n    this.setTooltips();\n  }\n\n  setTooltips() {\n    const contentWrapperNativeEl: HTMLElement = this.contentWrapper.nativeElement;\n    const tooltips: HTMLElement[] = Array.from(contentWrapperNativeEl.querySelectorAll('[data-grouped]'));\n\n    this.initTippy(tooltips);\n  }\n\n  initTippy(tooltips: HTMLElement[]) {\n    tippy(tooltips, this.tippyProps);\n  }\n}\n","import { Component, ElementRef, Input, ViewChild, Inject, PLATFORM_ID, AfterViewInit } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport tippy, { createSingleton } from 'tippy.js';\nimport { NgxTippyProps } from './ngx-tippy.interfaces';\n\n/**\n * This component implements case - singleton: single tippy element that takes the place of an array of regular tippy instances\n */\n@Component({\n  selector: 'ngx-tippy-singleton',\n  template: `\n    <div #contentWrapper>\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class NgxTippySingletonComponent implements AfterViewInit {\n  @Input() tippyProps?: NgxTippyProps;\n  @ViewChild('contentWrapper', { read: ElementRef, static: false }) contentWrapper: ElementRef;\n\n  constructor(@Inject(PLATFORM_ID) private platform: Object) {}\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platform)) return;\n    this.setTooltips();\n  }\n\n  setTooltips() {\n    const contentWrapperNativeEl: HTMLElement = this.contentWrapper.nativeElement;\n    const tooltips: HTMLElement[] = Array.from(contentWrapperNativeEl.querySelectorAll('[data-singleton]'));\n\n    this.initTippy(tooltips);\n  }\n\n  initTippy(tooltips: HTMLElement[]) {\n    createSingleton(tippy(tooltips), this.tippyProps);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxTippySingletonComponent } from './ngx-tippy-singleton.component';\nimport { NgxTippyGroupComponent } from './ngx-tippy-group.component';\nimport { NgxTippyDirective } from './ngx-tippy.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxTippyDirective, NgxTippyGroupComponent, NgxTippySingletonComponent],\n  exports: [NgxTippyDirective, NgxTippyGroupComponent, NgxTippySingletonComponent],\n  providers: [],\n})\nexport class NgxTippyModule {}\n","/*\n * Public API Surface of ngx-tippy-wrapper\n */\n\nexport * from './lib/ngx-tippy.interfaces';\nexport * from './lib/ngx-tippy.directive';\nexport * from './lib/ngx-tippy-group.component';\nexport * from './lib/ngx-tippy-singleton.component';\nexport * from './lib/ngx-tippy.service';\nexport * from './lib/ngx-tippy.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}