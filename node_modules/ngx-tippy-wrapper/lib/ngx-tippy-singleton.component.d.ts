import { ElementRef, AfterViewInit } from '@angular/core';
import { NgxTippyProps } from './ngx-tippy.interfaces';
/**
 * This component implements case - singleton: single tippy element that takes the place of an array of regular tippy instances
 */
import * as ɵngcc0 from '@angular/core';
export declare class NgxTippySingletonComponent implements AfterViewInit {
    private platform;
    tippyProps?: NgxTippyProps;
    contentWrapper: ElementRef;
    constructor(platform: Object);
    ngAfterViewInit(): void;
    setTooltips(): void;
    initTippy(tooltips: HTMLElement[]): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxTippySingletonComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxTippySingletonComponent, "ngx-tippy-singleton", never, { "tippyProps": "tippyProps"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=ngx-tippy-singleton.component.d.ts.map