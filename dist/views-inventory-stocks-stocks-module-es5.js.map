{"version":3,"sources":["webpack:///src/app/views/inventory/stocks/stocks.component.ts","webpack:///src/app/views/inventory/stocks/stocks-routing.module.ts","webpack:///src/app/views/inventory/stocks/stocks.module.ts","webpack:///src/app/views/inventory/stocks/stocks.component.css","webpack:///src/app/views/inventory/stocks/stocks-filter.pipe.ts","webpack:///src/app/views/inventory/stocks/stocks.component.html"],"names":["StocksComponent","service","commonData","spinner","route","currentPage","filterQuery","itemNames","springs","machineId","getMerchantTransactionsData","merchantId","subscribe","data","console","log","JSON","stringify","rowSprings","status","selector","template","routes","path","component","title","StocksRoutingModule","imports","forChild","exports","StocksModule","declarations","DataFilterPipe","array","query","row","name","indexOf"],"mappings":"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","file":"views-inventory-stocks-stocks-module-es5.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { CommonDataService } from '../../../Common/common-data.service';\r\nimport { DataService } from '../../../service/data.service';\r\nimport { ITableData } from '../../tables/data-tables/data-tables.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ColDef } from 'ag-grid-community';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'app-stocks',\r\n  templateUrl: './stocks.component.html',\r\n  styleUrls: ['./stocks.component.css']\r\n})\r\nexport class StocksComponent implements OnInit {\r\n  currentPage = 1;\r\n  page: number;\r\n  public data: ITableData;\r\n  public filterQuery = '';\r\n  error: any;\r\n  machineId: string;\r\n  public itemNames: any = [];\r\n  public selItem : any;\r\n  public springs: any = [];\r\n\r\n  constructor(private service: DataService, private commonData: CommonDataService,private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute) {\r\n      this.machineId = \"MACH01\";\r\n\r\n      this.service.getMerchantTransactionsData(this.commonData.merchantId, this.machineId).subscribe((data: any) => {\r\n        console.log(\"getSprings Reponse:::\" + JSON.stringify(data));\r\n        debugger;\r\n          console.log(\"Springs...............................\")\r\n          this.springs ;\r\n          //this.data = data.rowSprings.springs ;\r\n          this.data = data.rowSprings[0].springs[0]\r\n          //  console.log(this.springs);\r\n          //  for (let i = 0; i < data.length; i++) {\r\n          //  this.data.push(data[i]); \r\n          //  }\r\n        debugger;\r\n      });\r\n    }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  getBadge(status) {\r\n    switch (status) {\r\n      case 'Active':\r\n        return 'success';\r\n      case 'Inactive':\r\n        return 'secondary';\r\n      case 'Payment Success':\r\n        return 'warning';\r\n      case 'Banned':\r\n        return 'danger';\r\n      default:\r\n        return 'primary';\r\n    }\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { StocksComponent } from './stocks.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StocksComponent,\r\n    data: {\r\n      title: 'stocks',\r\n    }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class StocksRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CardModule, GridModule, SwitchModule, FormModule, } from '@coreui/angular';\r\nimport { IconModule } from '@coreui/icons-angular';\r\nimport { StocksRoutingModule } from './stocks-routing.module';\r\nimport { StocksComponent } from './stocks.component';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// DataTable\r\nimport { DataTableModule } from '@pascalhonegger/ng-datatable';\r\n\r\nimport { DataFilterPipe } from './stocks-filter.pipe';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StocksRoutingModule,\r\n    CardModule,\r\n    GridModule,\r\n    IconModule,\r\n    SwitchModule,\r\n    PaginationModule,\r\n    FormsModule,\r\n    FormModule,\r\n    DataTableModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [StocksComponent, DataFilterPipe],\r\n})\r\nexport class StocksModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdG9ja3MuY29tcG9uZW50LmNzcyJ9 */\";","import * as _ from 'lodash';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dataFilter',\r\n})\r\nexport class DataFilterPipe implements PipeTransform {\r\n  transform(array: any[], query: string): any {\r\n    if (query) {\r\n      return _.filter(array, (row) => row.name.indexOf(query) > -1);\r\n    }\r\n    return array;\r\n  }\r\n}\r\n","export default \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <div class=\\\"float-left\\\">\\r\\n        <h3 class=\\\"text-info\\\">Stock Management</h3>\\r\\n      </div>\\r\\n      <div class=\\\"float-right\\\">\\r\\n        <a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/stocks/addStocks']\\\"><i class=\\\"fa fa-plus\\\"></i> Add Stock</a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"table-responsive-sm\\\">\\r\\n        <div class=\\\"float-right\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\r\\n        </div>\\r\\n        <div class=\\\"float-right\\\">\\r\\n          <input cInput [(ngModel)]=\\\"filterQuery\\\" placeholder=\\\"Search by name\\\" />\\r\\n        </div>\\r\\n\\r\\n        <table class=\\\"table table-striped table-hover table-responsive-lg\\\" [mfData]=\\\"data | dataFilter: filterQuery\\\"\\r\\n        #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th style=\\\"width: 10%;\\\">\\r\\n              <mfDefaultSorter by=\\\"springName\\\" #sortspringName>\\r\\n                SpringName\\r\\n                <span\\r\\n                  *ngIf=\\\"sortspringName.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortspringName.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>            \\r\\n            <th style=\\\"width: 10%;\\\">\\r\\n              <mfDefaultSorter by=\\\"availability\\\" #sortavailability>\\r\\n                Available Quantity\\r\\n                <span\\r\\n                  *ngIf=\\\"sortavailability.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortavailability.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n            <th style=\\\"width: 10%;\\\">\\r\\n              <mfDefaultSorter by=\\\"name\\\" #sortname>\\r\\n                Item Name\\r\\n                <span\\r\\n                  *ngIf=\\\"sortname.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortname.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n            <th style=\\\"width: 10%;\\\">\\r\\n              <mfDefaultSorter by=\\\"totalSlots\\\" #sorttotalSlots>\\r\\n                TotalSlots\\r\\n                <span\\r\\n                  *ngIf=\\\"sorttotalSlots.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sorttotalSlots.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n            \\r\\n            <th style=\\\"width: 15%;\\\">\\r\\n              <mfDefaultSorter by=\\\"alterNativeSpringNo\\\" #sortalterNativeSpringNo>\\r\\n                AlterNative Spring Name\\r\\n                <span\\r\\n                  *ngIf=\\\"sortalterNativeSpringNo.isSortedByMeAsc\\\"\\r\\n                  class=\\\"cil-arrow-top\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n                <span\\r\\n                  *ngIf=\\\"sortalterNativeSpringNo.isSortedByMeDesc\\\"\\r\\n                  class=\\\"cil-arrow-bottom\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></span>\\r\\n              </mfDefaultSorter>\\r\\n            </th>\\r\\n           \\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let tx of mf.data\\\">                              \\r\\n                <td>{{tx.springName}}</td> \\r\\n                <td>{{tx.availability}}</td>\\r\\n                <td>{{tx.name}}</td>\\r\\n                <td>{{tx.totalSlots}}</td>\\r\\n                <td>{{tx.alterNativeSpringNo}}</td>\\r\\n                <td>{{tx.active}}</td>                 \\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <div class=\\\"float-right\\\">\\r\\n              <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5, 10, 15]\\\"></mfBootstrapPaginator>\\r\\n        </div>\\r\\n        </div>\\r\\n      </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";"]}