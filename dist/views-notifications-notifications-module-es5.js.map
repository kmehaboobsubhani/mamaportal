{"version":3,"sources":["webpack:///src/app/views/notifications/badges/badges.component.html","webpack:///src/app/views/notifications/alerts/alerts.component.html","webpack:///src/app/views/notifications/notifications.module.ts","webpack:///src/app/views/notifications/modals/modals.component.ts","webpack:///src/app/views/notifications/toasters/toasters.component.ts","webpack:///src/app/views/notifications/modals/modals.component.html","webpack:///src/app/views/notifications/alerts/alerts.component.ts","webpack:///src/app/views/notifications/toasters/toast-simple/toast.component.scss","webpack:///src/app/views/notifications/toasters/toast-simple/toast.component.html","webpack:///src/app/views/notifications/notifications-routing.module.ts","webpack:///src/app/views/notifications/toasters/toasters.component.scss","webpack:///src/app/views/notifications/badges/badges.component.ts","webpack:///src/app/views/notifications/toasters/toasters.component.html","webpack:///src/app/views/notifications/toasters/toast-simple/toast.component.ts"],"names":["NotificationsModule","imports","declarations","ModalsComponent","text","template","Colors","ToastersComponent","positions","Object","values","position","TopRight","colors","keys","autohide","delay","fade","toasterForm","value","disabled","closeButton","color","formChanges","valueChanges","pipe","e","subscribe","control","get","enable","disable","enabled","timeout","formValues","toasterPosition","viewChildren","filter","item","forEach","title","options","componentRef","addToast","instance","selector","AlertsComponent","showTime","showDismiss","show","dismissible","timeouts","setTimers","clearTimeouts","map","index","clearTimeout","time","setTimeout","id","routes","path","data","children","redirectTo","component","NotificationsRoutingModule","forChild","exports","BadgesComponent","AppToastComponent","hostElement","renderer","ref","toasterService","providers","provide","useExisting"],"mappings":"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","file":"views-notifications-notifications-module-es5.js","sourcesContent":["export default \"<div class=\\\"fade-in\\\">\\r\\n  <c-row>\\r\\n    <c-col lg=\\\"6\\\">\\r\\n      <c-card>\\r\\n        <c-card-header>\\r\\n          Badges\\r\\n          <c-card-header-actions>\\r\\n            <a href=\\\"http://coreui.io/docs/components/bootstrap-badge/\\\" class=\\\"c-card-header-action\\\" target=\\\"_blank\\\">\\r\\n              <small class=\\\"text-muted\\\">docs</small>\\r\\n            </a>\\r\\n          </c-card-header-actions>\\r\\n        </c-card-header>\\r\\n        <c-card-body>\\r\\n          <h1>Example heading\\r\\n            <c-badge color=\\\"secondary\\\">New</c-badge>\\r\\n          </h1>\\r\\n          <h2>Example heading\\r\\n            <c-badge color=\\\"secondary\\\">New</c-badge>\\r\\n          </h2>\\r\\n          <h3>Example heading\\r\\n            <c-badge color=\\\"secondary\\\">New</c-badge>\\r\\n          </h3>\\r\\n          <h4>Example heading\\r\\n            <c-badge color=\\\"secondary\\\">New</c-badge>\\r\\n          </h4>\\r\\n          <h5>Example heading\\r\\n            <c-badge color=\\\"secondary\\\">New</c-badge>\\r\\n          </h5>\\r\\n          <h6>Example heading\\r\\n            <c-badge color=\\\"secondary\\\">New</c-badge>\\r\\n          </h6>\\r\\n        </c-card-body>\\r\\n        <c-card-footer>\\r\\n          <button cButton color=\\\"primary\\\" type=\\\"link\\\" >Notifications\\r\\n            <c-badge color=\\\"light\\\" shape=\\\"pill\\\" class=\\\"c-ml-1\\\">9</c-badge>\\r\\n          </button>\\r\\n        </c-card-footer>\\r\\n      </c-card>\\r\\n    </c-col>\\r\\n    <c-col lg=\\\"6\\\">\\r\\n      <c-card>\\r\\n        <c-card-header>\\r\\n          Badges\\r\\n          <small>contextual variations</small>\\r\\n        </c-card-header>\\r\\n        <c-card-body>\\r\\n          <c-badge color=\\\"primary\\\" class=\\\"mx-1\\\">Primary</c-badge>\\r\\n          <c-badge color=\\\"secondary\\\" class=\\\"mx-1\\\">Secondary</c-badge>\\r\\n          <c-badge color=\\\"success\\\" class=\\\"mx-1\\\">Success</c-badge>\\r\\n          <c-badge color=\\\"danger\\\" class=\\\"mx-1\\\">Danger</c-badge>\\r\\n          <c-badge color=\\\"warning\\\" class=\\\"mx-1\\\">Warning</c-badge>\\r\\n          <c-badge color=\\\"info\\\" class=\\\"mx-1\\\">Info</c-badge>\\r\\n          <c-badge color=\\\"light\\\" class=\\\"mx-1\\\">Light</c-badge>\\r\\n          <c-badge color=\\\"dark\\\" class=\\\"mx-1\\\">Dark</c-badge>\\r\\n        </c-card-body>\\r\\n      </c-card>\\r\\n      <c-card>\\r\\n        <c-card-header>\\r\\n          Badges\\r\\n          <small>pill badges</small>\\r\\n        </c-card-header>\\r\\n        <c-card-body>\\r\\n          <c-badge shape=\\\"pill\\\" color=\\\"primary\\\" class=\\\"mx-1\\\">Primary</c-badge>\\r\\n          <c-badge shape=\\\"pill\\\" color=\\\"secondary\\\" class=\\\"mx-1\\\">Secondary</c-badge>\\r\\n          <c-badge shape=\\\"pill\\\" color=\\\"success\\\" class=\\\"mx-1\\\">Success</c-badge>\\r\\n          <c-badge shape=\\\"pill\\\" color=\\\"danger\\\" class=\\\"mx-1\\\">Danger</c-badge>\\r\\n          <c-badge shape=\\\"pill\\\" color=\\\"warning\\\" class=\\\"mx-1\\\">Warning</c-badge>\\r\\n          <c-badge shape=\\\"pill\\\" color=\\\"info\\\" class=\\\"mx-1\\\">Info</c-badge>\\r\\n          <c-badge shape=\\\"pill\\\" color=\\\"light\\\" class=\\\"mx-1\\\">Light</c-badge>\\r\\n          <c-badge shape=\\\"pill\\\" color=\\\"dark\\\" class=\\\"mx-1\\\">Dark</c-badge>\\r\\n        </c-card-body>\\r\\n      </c-card>\\r\\n      <c-card>\\r\\n        <c-card-header>\\r\\n          Badges\\r\\n          <small>links</small>\\r\\n        </c-card-header>\\r\\n        <c-card-body>\\r\\n          <a href=\\\"#\\\" class=\\\"mx-1\\\">\\r\\n            <c-badge color=\\\"primary\\\">Primary</c-badge>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\" class=\\\"mx-1\\\">\\r\\n            <c-badge color=\\\"secondary\\\">Secondary</c-badge>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\" class=\\\"mx-1\\\">\\r\\n            <c-badge color=\\\"success\\\">Success</c-badge>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\" class=\\\"mx-1\\\">\\r\\n            <c-badge color=\\\"danger\\\">Danger</c-badge>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\" class=\\\"mx-1\\\">\\r\\n            <c-badge color=\\\"warning\\\">Warning</c-badge>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\" class=\\\"mx-1\\\">\\r\\n            <c-badge color=\\\"info\\\">Info</c-badge>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\" class=\\\"mx-1\\\">\\r\\n            <c-badge color=\\\"light\\\">Light</c-badge>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\" class=\\\"mx-1\\\">\\r\\n            <c-badge color=\\\"dark\\\">Dark</c-badge>\\r\\n          </a>\\r\\n        </c-card-body>\\r\\n      </c-card>\\r\\n    </c-col>\\r\\n  </c-row>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"fade-in\\\">\\r\\n  <c-row>\\r\\n    <c-col md=\\\"6\\\">\\r\\n      <c-card>\\r\\n        <c-card-header>\\r\\n          <strong>Bootstrap Alerts</strong>\\r\\n          <c-card-header-actions>\\r\\n            <a href=\\\"https://coreui.io\\\" target=\\\"_blank\\\">\\r\\n              <small class=\\\"text-muted\\\">docs</small>\\r\\n            </a>\\r\\n          </c-card-header-actions>\\r\\n        </c-card-header>\\r\\n        <c-card-body>\\r\\n          <div *ngFor=\\\"let alert of colors\\\">\\r\\n            <c-alert [color]=\\\"alert\\\">\\r\\n              <span>This is a <strong class=\\\"text-{{ alert }}\\\">{{ alert }}</strong> alert — check it out!</span>\\r\\n            </c-alert>\\r\\n          </div>\\r\\n        </c-card-body>\\r\\n      </c-card>\\r\\n    </c-col>\\r\\n    <c-col md=\\\"6\\\">\\r\\n      <c-card>\\r\\n        <c-card-header>\\r\\n          <strong>Alert</strong>{{ ' ' }}<small>links</small>\\r\\n          <c-card-header-actions>\\r\\n            <a href=\\\"https://coreui.io\\\" target=\\\"_blank\\\">\\r\\n              <small class=\\\"text-muted\\\">docs</small>\\r\\n            </a>\\r\\n          </c-card-header-actions>\\r\\n        </c-card-header>\\r\\n        <c-card-body>\\r\\n          <div *ngFor=\\\"let alert of colors\\\">\\r\\n            <c-alert [color]=\\\"alert\\\">\\r\\n              <span>This is a <strong>{{ alert }}</strong> alert with an <a href=\\\"#\\\" class=\\\"c-alert-link\\\">example link</a>. Give it a click if you like.</span>\\r\\n            </c-alert>\\r\\n          </div>\\r\\n\\r\\n        </c-card-body>\\r\\n      </c-card>\\r\\n    </c-col>\\r\\n  </c-row>\\r\\n  <c-row>\\r\\n    <c-col md=\\\"6\\\">\\r\\n      <c-card>\\r\\n        <c-card-header>\\r\\n          <strong>Alert</strong> with timeout\\r\\n          <c-card-header-actions>\\r\\n            <a href=\\\"https://coreui.io\\\" target=\\\"_blank\\\">\\r\\n              <small class=\\\"text-muted\\\">docs</small>\\r\\n            </a>\\r\\n          </c-card-header-actions>\\r\\n        </c-card-header>\\r\\n        <c-card-body>\\r\\n          <c-alert color=\\\"warning\\\" [show]=\\\"!!showTime[0]\\\" [fade]=\\\"true\\\" [timeout]=\\\"showTime[0]\\\" (dismissed)=\\\"showTime[0]=0\\\" closeButton=\\\"true\\\">\\r\\n            <strong>Holy guacamole!</strong> You should check in on some of those fields below.\\r\\n          </c-alert>\\r\\n          <c-alert #alert1 color=\\\"danger\\\" [show]=\\\"!!showTime[1]\\\" [fade]=\\\"true\\\" [timeout]=\\\"showTime[1]\\\" (dismissed)=\\\"showTime[1]=0\\\">\\r\\n            <strong class=\\\"c-alert-heading\\\">Alert</strong> dismiss in {{(showTime[1] / 1000) - alert1.clock}} seconds.\\r\\n          </c-alert>\\r\\n          <c-alert #alert2 color=\\\"success\\\" [show]=\\\"!!showTime[2]\\\" [fade]=\\\"true\\\" [timeout]=\\\"showTime[2]\\\" (dismissed)=\\\"showTime[2]=0\\\">\\r\\n            <strong class=\\\"c-alert-heading\\\">Alert</strong> dismiss in {{(showTime[2] / 1000) - alert2.clock}} seconds.\\r\\n            <c-progress size=\\\"xs\\\">\\r\\n              <c-progress-bar [value]=\\\"(showTime[2] / 1000) - alert2.clock\\\" [max]=\\\"showTime[2]/1000\\\" color=\\\"success\\\"></c-progress-bar>\\r\\n            </c-progress>\\r\\n          </c-alert>\\r\\n          <hr>\\r\\n          <button cButton color=\\\"secondary\\\" (click)=\\\"onResetShowTime()\\\">Reset</button>\\r\\n        </c-card-body>\\r\\n      </c-card>\\r\\n    </c-col>\\r\\n    <c-col md=\\\"6\\\">\\r\\n      <c-card>\\r\\n        <c-card-header>\\r\\n          <strong>Alert</strong> dismissible\\r\\n          <c-card-header-actions>\\r\\n            <a href=\\\"https://coreui.io\\\" target=\\\"_blank\\\">\\r\\n              <small class=\\\"text-muted\\\">docs</small>\\r\\n            </a>\\r\\n          </c-card-header-actions>\\r\\n        </c-card-header>\\r\\n        <c-card-body>\\r\\n          <c-alert color=\\\"warning\\\" [closeButton]=\\\"dismissible\\\" [fade]=\\\"true\\\" (dismissed)=\\\"onDismiss(0)\\\" [show]=\\\"showDismiss[0]\\\" >\\r\\n            <strong>Holy guacamole!</strong> You should check in on some of those fields below.\\r\\n          </c-alert>\\r\\n          <c-alert color=\\\"danger\\\" [closeButton]=\\\"dismissible\\\" [fade]=\\\"true\\\" (dismissed)=\\\"onDismiss(1)\\\" [show]=\\\"showDismiss[1]\\\" iconHtml=\\\"<i class='cil-ban'></i>\\\">\\r\\n            <strong class=\\\"c-alert-heading\\\">Holy guacamole!</strong> You should check in on some of those fields below.\\r\\n          </c-alert>\\r\\n          <c-alert color=\\\"success\\\" [closeButton]=\\\"dismissible\\\" [fade]=\\\"false\\\" (dismissed)=\\\"onDismiss(2)\\\" [show]=\\\"showDismiss[2]\\\">\\r\\n            <strong class=\\\"c-alert-heading\\\">No fade!</strong> You should check in on some of those fields below.\\r\\n          </c-alert>\\r\\n          <hr>\\r\\n          <button cButton color=\\\"primary\\\" [ngClass]=\\\"'mfe-1'\\\" (click)=\\\"onToggleDismiss()\\\">Toggle</button>\\r\\n          <button cButton color=\\\"secondary\\\" (click)=\\\"onResetDismiss()\\\">Reset</button>\\r\\n        </c-card-body>\\r\\n      </c-card>\\r\\n    </c-col>\\r\\n  </c-row>\\r\\n  <c-row>\\r\\n    <c-col md=\\\"6\\\">\\r\\n      <c-card>\\r\\n        <c-card-header>\\r\\n          <strong>Alert</strong> with additional content\\r\\n          <c-card-header-actions>\\r\\n            <a href=\\\"https://coreui.io\\\" target=\\\"_blank\\\">\\r\\n              <small class=\\\"text-muted\\\">docs</small>\\r\\n            </a>\\r\\n          </c-card-header-actions>\\r\\n        </c-card-header>\\r\\n        <c-card-body>\\r\\n          <c-alert [color]=\\\"color\\\">\\r\\n            <h4 class=\\\"c-alert-heading\\\">Well done!</h4>\\r\\n            <span>\\r\\n              <p>You successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\\r\\n              <hr>\\r\\n              <p class=\\\"mb-0\\\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\\r\\n            </span>\\r\\n          </c-alert>\\r\\n        </c-card-body>\\r\\n      </c-card>\\r\\n    </c-col>\\r\\n  </c-row>\\r\\n</div>\\r\\n\";","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n// CoreUI Modules\r\nimport {\r\n  AlertModule,\r\n  BadgeModule,\r\n  ButtonModule,\r\n  CardModule, FormModule,\r\n  GridModule,\r\n  ModalModule,\r\n  ProgressModule,\r\n  ToastModule\r\n} from '@coreui/angular';\r\n\r\nimport { IconModule } from '@coreui/icons-angular';\r\n\r\n// views\r\nimport { AlertsComponent } from './alerts/alerts.component';\r\nimport { BadgesComponent } from './badges/badges.component';\r\nimport { ModalsComponent } from './modals/modals.component';\r\nimport { ToastersComponent } from './toasters/toasters.component';\r\n\r\n\r\n// Notifications Routing\r\nimport { NotificationsRoutingModule } from './notifications-routing.module';\r\n\r\n// Simple Toast\r\nimport { AppToastComponent } from './toasters/toast-simple/toast.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    // BrowserAnimationsModule,\r\n    NotificationsRoutingModule,\r\n    AlertModule,\r\n    BadgeModule,\r\n    ModalModule,\r\n    CardModule,\r\n    GridModule,\r\n    ButtonModule,\r\n    ProgressModule,\r\n    ToastModule,\r\n    IconModule,\r\n    FormModule,\r\n    ReactiveFormsModule,\r\n    ToastModule,\r\n  ],\r\n  declarations: [\r\n    AlertsComponent,\r\n    BadgesComponent,\r\n    ModalsComponent,\r\n    ToastersComponent,\r\n    AppToastComponent,\r\n  ],\r\n})\r\nexport class NotificationsModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'modals.component.html',\r\n})\r\nexport class ModalsComponent {\r\n  text = '';\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { ToasterComponent, ToasterPosition } from '@coreui/angular';\r\nimport { AppToastComponent } from './toast-simple/toast.component';\r\n\r\nexport enum Colors {\r\n  '' = '',\r\n  primary = 'primary',\r\n  secondary = 'secondary',\r\n  success = 'success',\r\n  info = 'info',\r\n  warning = 'warning',\r\n  danger = 'danger',\r\n  dark = 'dark',\r\n  light = 'light',\r\n}\r\n\r\n@Component({\r\n  selector: 'app-toasters',\r\n  templateUrl: './toasters.component.html',\r\n  styleUrls: ['./toasters.component.scss']\r\n})\r\nexport class ToastersComponent implements OnInit {\r\n\r\n  positions = Object.values(ToasterPosition);\r\n  position = ToasterPosition.TopRight;\r\n  colors = Object.keys(Colors);\r\n  autohide = true;\r\n  delay = 5000;\r\n  fade = true;\r\n\r\n  formChanges: Observable<any>;\r\n\r\n  toasterForm = new FormGroup({\r\n    autohide: new FormControl(this.autohide),\r\n    delay: new FormControl({ value: this.delay, disabled: !this.autohide}, ),\r\n    position: new FormControl(this.position),\r\n    fade: new FormControl({value: true, disabled: false}),\r\n    closeButton: new FormControl(true),\r\n    color: new FormControl(''),\r\n  });\r\n\r\n  @ViewChildren(ToasterComponent) viewChildren!: QueryList<ToasterComponent>;\r\n\r\n  ngOnInit(): void {\r\n    this.formChanges = this.toasterForm.valueChanges.pipe(filter(e => e.autohide !== this.autohide));\r\n    this.formChanges.subscribe(e => {\r\n      this.autohide = e.autohide;\r\n      this.position = e.position;\r\n      this.fade = e.fade;\r\n      const control = this.toasterForm?.get('delay');\r\n      this.autohide ? control.enable() : control.disable();\r\n      this.delay = control.enabled ? e.timeout : this.delay;\r\n    });\r\n  }\r\n\r\n  addToast() {\r\n    const formValues = this.toasterForm.value;\r\n    const toasterPosition = this.viewChildren.filter(item => item.position === this.toasterForm.value.position);\r\n    toasterPosition.forEach((item) => {\r\n      const title = `Toast ${formValues.color} ${formValues.position}`;\r\n      const {...options} = {...formValues, title };\r\n      const componentRef = item.addToast(AppToastComponent, options);\r\n      componentRef.instance['closeButton'] = options.closeButton;\r\n    });\r\n  }\r\n}\r\n","export default \"<div class=\\\"fade-in\\\">\\r\\n  <c-row>\\r\\n    <c-col lg=\\\"12\\\">\\r\\n      <c-card>\\r\\n        <c-card-header>\\r\\n          Modals\\r\\n        </c-card-header>\\r\\n        <c-card-body>\\r\\n          <!-- Button trigger modal -->\\r\\n          <button cButton color=\\\"secondary\\\" class=\\\"mr-1\\\" (click)=\\\"defaultModal.show()\\\">\\r\\n            Launch default modal\\r\\n          </button>\\r\\n          <button cButton color=\\\"secondary\\\" class=\\\"mr-1\\\" (click)=\\\"lgModal.show()\\\">\\r\\n            Launch large modal\\r\\n          </button>\\r\\n          <button cButton color=\\\"secondary\\\" class=\\\"mr-1\\\" (click)=\\\"smModal.show()\\\">\\r\\n            Launch small modal\\r\\n          </button>\\r\\n          <button cButton color=\\\"secondary\\\" class=\\\"mr-1\\\" (click)=\\\"xlModal.show()\\\">\\r\\n            Launch xl modal\\r\\n          </button>\\r\\n          <hr>\\r\\n          <button cButton color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"primaryModal.show()\\\">\\r\\n            Primary modal\\r\\n          </button>\\r\\n          <button cButton color=\\\"success\\\" class=\\\"mr-1\\\" (click)=\\\"successModal.show()\\\">\\r\\n            Success modal\\r\\n          </button>\\r\\n          <button cButton color=\\\"warning\\\" class=\\\"mr-1\\\" (click)=\\\"warningModal.show()\\\">\\r\\n            Warning modal\\r\\n          </button>\\r\\n          <button cButton color=\\\"danger\\\" class=\\\"mr-1\\\" (click)=\\\"dangerModal.show()\\\">\\r\\n            Danger modal\\r\\n          </button>\\r\\n          <button cButton color=\\\"info\\\" class=\\\"mr-1\\\" (click)=\\\"infoModal.show()\\\">\\r\\n            Info modal\\r\\n          </button>\\r\\n        </c-card-body>\\r\\n      </c-card>\\r\\n    </c-col>\\r\\n  </c-row>\\r\\n</div>\\r\\n\\r\\n<c-modal #defaultModal [closeOnBackdrop]=\\\"false\\\">\\r\\n  <ng-template #modalHeader>\\r\\n    <h4 class=\\\"c-modal-title\\\">Default modal</h4>\\r\\n  </ng-template>\\r\\n  <ng-template #modalBody>\\r\\n    <p>One fine body&hellip;</p>\\r\\n  </ng-template>\\r\\n  <ng-template #modalFooter>\\r\\n    <button cButton color=\\\"secondary\\\" (click)=\\\"defaultModal.hide()\\\">Close</button>\\r\\n    <button cButton color=\\\"primary\\\" >Save changes</button>\\r\\n  </ng-template>\\r\\n</c-modal>\\r\\n\\r\\n<c-modal #lgModal size=\\\"lg\\\">\\r\\n  <ng-template #modalHeader>\\r\\n    <h4 class=\\\"c-modal-title\\\">Large modal</h4>\\r\\n  </ng-template>\\r\\n  <ng-template #modalBody>\\r\\n    <p class=\\\"text-center\\\">One fine body&hellip;</p>\\r\\n  </ng-template>\\r\\n  <ng-template #modalFooter>\\r\\n    <button cButton color=\\\"secondary\\\" (click)=\\\"lgModal.hide()\\\">Close</button>\\r\\n    <button cButton color=\\\"primary\\\" >Save changes</button>\\r\\n  </ng-template>\\r\\n</c-modal>\\r\\n\\r\\n<c-modal #smModal size=\\\"sm\\\">\\r\\n  <ng-template #modalHeader>\\r\\n    <h4 class=\\\"c-modal-title\\\">Small modal</h4>\\r\\n  </ng-template>\\r\\n  <ng-template #modalBody>\\r\\n    <p>One fine body&hellip;</p>\\r\\n  </ng-template>\\r\\n  <ng-template #modalFooter>\\r\\n    <button cButton color=\\\"secondary\\\" (click)=\\\"smModal.hide()\\\">Close</button>\\r\\n    <button cButton color=\\\"primary\\\" >Save changes</button>\\r\\n  </ng-template>\\r\\n</c-modal>\\r\\n\\r\\n<c-modal #xlModal size=\\\"xl\\\">\\r\\n  <ng-template #modalHeader>\\r\\n    <h4 class=\\\"c-modal-title\\\">XL modal</h4>\\r\\n  </ng-template>\\r\\n  <ng-template #modalBody>\\r\\n    <p>One fine body&hellip;</p>\\r\\n  </ng-template>\\r\\n  <ng-template #modalFooter>\\r\\n    <button cButton color=\\\"secondary\\\" (click)=\\\"xlModal.hide()\\\">Close</button>\\r\\n    <button cButton color=\\\"primary\\\" >Save changes</button>\\r\\n  </ng-template>\\r\\n</c-modal>\\r\\n\\r\\n<c-modal #primaryModal color=\\\"primary\\\">\\r\\n  <ng-template #modalHeader>\\r\\n    <h4 class=\\\"c-modal-title\\\">Primary modal</h4>\\r\\n  </ng-template>\\r\\n  <ng-template #modalBody>\\r\\n    <p>One fine body&hellip;</p>\\r\\n  </ng-template>\\r\\n  <ng-template #modalFooter>\\r\\n    <button cButton color=\\\"secondary\\\" (click)=\\\"primaryModal.hide()\\\">Close</button>\\r\\n    <button cButton color=\\\"primary\\\" >Save changes</button>\\r\\n  </ng-template>\\r\\n</c-modal>\\r\\n\\r\\n<c-modal #successModal color=\\\"success\\\">\\r\\n  <ng-template #modalHeader>\\r\\n    <h4 class=\\\"c-modal-title\\\">Success modal</h4>\\r\\n  </ng-template>\\r\\n  <ng-template #modalBody>\\r\\n    <p>One fine body&hellip;</p>\\r\\n  </ng-template>\\r\\n  <ng-template #modalFooter>\\r\\n    <button cButton color=\\\"secondary\\\" (click)=\\\"successModal.hide()\\\">Close</button>\\r\\n    <button cButton color=\\\"success\\\" >Save changes</button>\\r\\n  </ng-template>\\r\\n</c-modal>\\r\\n\\r\\n<c-modal #warningModal color=\\\"warning\\\">\\r\\n  <ng-template #modalHeader>\\r\\n    <h4 class=\\\"c-modal-title\\\">Warning modal</h4>\\r\\n  </ng-template>\\r\\n  <ng-template #modalBody>\\r\\n    <p>One fine body&hellip;</p>\\r\\n  </ng-template>\\r\\n  <ng-template #modalFooter>\\r\\n    <button cButton color=\\\"secondary\\\" (click)=\\\"warningModal.hide()\\\">Close</button>\\r\\n    <button cButton color=\\\"warning\\\" >Save changes</button>\\r\\n  </ng-template>\\r\\n</c-modal>\\r\\n\\r\\n<c-modal #dangerModal color=\\\"danger\\\">\\r\\n  <ng-template #modalHeader>\\r\\n    <h4 class=\\\"c-modal-title\\\">Danger modal</h4>\\r\\n  </ng-template>\\r\\n  <ng-template #modalBody>\\r\\n    <p>One fine body&hellip;</p>\\r\\n  </ng-template>\\r\\n  <ng-template #modalFooter>\\r\\n    <button cButton color=\\\"secondary\\\" (click)=\\\"dangerModal.hide()\\\">Close</button>\\r\\n    <button cButton color=\\\"danger\\\" >Save changes</button>\\r\\n  </ng-template>\\r\\n</c-modal>\\r\\n\\r\\n<c-modal #infoModal color=\\\"info\\\">\\r\\n  <ng-template #modalHeader>\\r\\n    <h4 class=\\\"c-modal-title\\\">Info modal</h4>\\r\\n  </ng-template>\\r\\n  <ng-template #modalBody>\\r\\n    <p>One fine body&hellip;</p>\\r\\n  </ng-template>\\r\\n  <ng-template #modalFooter>\\r\\n    <button cButton color=\\\"secondary\\\" (click)=\\\"infoModal.hide()\\\">Close</button>\\r\\n    <button cButton color=\\\"info\\\" >Save changes</button>\\r\\n  </ng-template>\\r\\n</c-modal>\\r\\n\";","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\n\r\nconst enum Color {\r\n  primary = 'primary',\r\n  secondary = 'secondary ',\r\n  success = 'success',\r\n  danger = 'danger',\r\n  warning = 'warning',\r\n  info = 'info',\r\n  light = 'light',\r\n  dark = 'dark',\r\n  white = 'white',\r\n  transparent = 'transparent',\r\n}\r\n\r\n@Component({\r\n  templateUrl: 'alerts.component.html',\r\n})\r\nexport class AlertsComponent implements OnInit, OnDestroy {\r\n  constructor() {}\r\n\r\n  readonly colors = [\r\n    'primary',\r\n    'secondary ',\r\n    'success',\r\n    'danger',\r\n    'warning',\r\n    'info',\r\n    'light',\r\n    'dark',\r\n    // 'transparent',\r\n    // 'white',\r\n  ];\r\n\r\n  showTime = [3000, 6000, 9000];\r\n  showDismiss = [true, true, true];\r\n  show = false;\r\n  color = 'info';\r\n  dismissible = true;\r\n  timeouts = [];\r\n\r\n  ngOnInit() {\r\n    this.setTimers();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n  }\r\n\r\n  clearTimeouts() {\r\n    this.timeouts.map((item, index) => {\r\n      clearTimeout(this.timeouts[index]);\r\n      this.timeouts[index] = null;\r\n    });\r\n  }\r\n\r\n  setTimers() {\r\n    this.showTime.map((time, index) => {\r\n      this.timeouts[index] = setTimeout(() => {\r\n        // this.showTime[index] = item;\r\n      }, time);\r\n    });\r\n  }\r\n\r\n  onResetShowTime() {\r\n    this.clearTimeouts();\r\n    this.showTime = [3000, 6000, 9000];\r\n    this.setTimers();\r\n  }\r\n\r\n  onDismiss(id) {\r\n    this.showDismiss[id] = false;\r\n  }\r\n\r\n  onResetDismiss() {\r\n    this.showDismiss = [true, true, true];\r\n  }\r\n\r\n  onToggleDismiss() {\r\n    this.dismissible = !this.dismissible;\r\n  }\r\n\r\n  // dismissible = true;\r\n  // alerts: any = [\r\n  //   {\r\n  //     type: 'success',\r\n  //     msg: `You successfully read this important alert message.`\r\n  //   },\r\n  //   {\r\n  //     type: 'info',\r\n  //     msg: `This alert needs your attention, but it's not super important.`\r\n  //   },\r\n  //   {\r\n  //     type: 'danger',\r\n  //     msg: `Better check yourself, you're not looking too good.`\r\n  //   }\r\n  // ];\r\n  //\r\n  // alertsHtml: any = [\r\n  //   {\r\n  //     type: 'success',\r\n  //     msg: `<strong>Well done!</strong> You successfully read this important alert message.`\r\n  //   },\r\n  //   {\r\n  //     type: 'info',\r\n  //     msg: `<strong>Heads up!</strong> This alert needs your attention, but it's not super important.`\r\n  //   },\r\n  //   {\r\n  //     type: 'danger',\r\n  //     msg: `<strong>Warning!</strong> Better check yourself, you're not looking too good.`\r\n  //   }\r\n  // ];\r\n  //\r\n  // index = 0;\r\n  // messages = [\r\n  //   'You successfully read this important alert message.',\r\n  //   'Now this text is different from what it was before. Go ahead and click the button one more time',\r\n  //   'Well done! Click reset button and you\\'ll see the first message'\r\n  // ];\r\n  //\r\n  // alertsDismiss: any = [];\r\n  //\r\n  // reset(): void {\r\n  //   this.alerts = this.alerts.map((alert: any) => Object.assign({}, alert));\r\n  // }\r\n  //\r\n  // changeText() {\r\n  //   if (this.messages.length - 1 !== this.index) {\r\n  //     this.index++;\r\n  //   }\r\n  // }\r\n  //\r\n  // add(): void {\r\n  //   this.alertsDismiss.push({\r\n  //     type: 'info',\r\n  //     msg: `This alert will be closed in 5 seconds (added: ${new Date().toLocaleTimeString()})`,\r\n  //     timeout: 5000\r\n  //   });\r\n  // }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b2FzdC5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<ng-container>\\r\\n  <c-toast-header [closeButton]=\\\"closeButton\\\"><i>{{title}}</i></c-toast-header>\\r\\n  <c-toast-body #toast [cToastClose]=\\\"toast.toast\\\">\\r\\n    <div>This is a dynamic toast no {{index}} {{clock}}</div>\\r\\n    <ng-content></ng-content>\\r\\n  </c-toast-body>\\r\\n</ng-container>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AlertsComponent } from './alerts/alerts.component';\r\nimport { BadgesComponent } from './badges/badges.component';\r\nimport { ModalsComponent } from './modals/modals.component';\r\nimport { ToastersComponent } from './toasters/toasters.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Notifications',\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'alerts',\r\n      },\r\n      {\r\n        path: 'alerts',\r\n        component: AlertsComponent,\r\n        data: {\r\n          title: 'Alerts',\r\n        },\r\n      },\r\n      {\r\n        path: 'badges',\r\n        component: BadgesComponent,\r\n        data: {\r\n          title: 'Badges',\r\n        },\r\n      },\r\n      {\r\n        path: 'modals',\r\n        component: ModalsComponent,\r\n        data: {\r\n          title: 'Modals',\r\n        },\r\n      },\r\n      {\r\n        path: 'toasters',\r\n        component: ToastersComponent,\r\n        data: {\r\n          title: 'Toasters',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NotificationsRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b2FzdGVycy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'badges.component.html',\r\n})\r\nexport class BadgesComponent {\r\n  constructor() {}\r\n}\r\n","export default \"<div class=\\\"fade-in\\\">\\r\\n  <c-card>\\r\\n    <c-card-header>\\r\\n      Toaster\\r\\n  <!--    <DocsLink name=\\\"-Toast\\\"/>-->\\r\\n    </c-card-header>\\r\\n    <c-card-body>\\r\\n      <c-container>\\r\\n        <c-row>\\r\\n          <c-col sm=\\\"12\\\" lg=\\\"6\\\">\\r\\n            <form cForm [formGroup]=\\\"toasterForm\\\">\\r\\n              <h5>Add toast with following props:</h5>\\r\\n\\r\\n              <c-form-check custom variant=\\\"checkbox\\\" class=\\\"my-2 mt-4\\\">\\r\\n                <input cInput type=\\\"checkbox\\\" formControlName=\\\"autohide\\\" class=\\\"custom-control-input\\\" id=\\\"autohide\\\">\\r\\n                <label cLabel class=\\\"custom-control-label\\\" for=\\\"autohide\\\">\\r\\n                  Toast autohide\\r\\n                </label>\\r\\n              </c-form-check>\\r\\n\\r\\n              <c-form-group>\\r\\n                <label cLabel for=\\\"delay\\\">Delay</label >\\r\\n                <input cInput type=\\\"number\\\" formControlName=\\\"delay\\\" id=\\\"delay\\\">\\r\\n              </c-form-group>\\r\\n\\r\\n              <c-form-group class=\\\"my-2\\\">\\r\\n                <label cLabel>Position</label>\\r\\n                <select cSelect formControlName=\\\"position\\\">\\r\\n                  <option *ngFor=\\\"let position of positions\\\" [ngValue]=\\\"position\\\">\\r\\n                    {{position}}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </c-form-group>\\r\\n\\r\\n              <c-form-group class=\\\"my-2\\\">\\r\\n                <label cLabel>Color</label>\\r\\n                <select cSelect formControlName=\\\"color\\\">\\r\\n                  <option *ngFor=\\\"let color of colors\\\" [ngValue]=\\\"color\\\">\\r\\n                    {{color}}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </c-form-group>\\r\\n\\r\\n              <c-form-check custom variant=\\\"checkbox\\\" class=\\\"my-2\\\">\\r\\n                <input cInput type=\\\"checkbox\\\" formControlName=\\\"fade\\\" class=\\\"custom-control-input\\\" id=\\\"fade\\\">\\r\\n                <label cLabel class=\\\"custom-control-label\\\" for=\\\"fade\\\">Fade</label>\\r\\n              </c-form-check>\\r\\n\\r\\n              <c-form-check custom variant=\\\"checkbox\\\" class=\\\"my-2\\\">\\r\\n                <input cInput type=\\\"checkbox\\\" formControlName=\\\"closeButton\\\" class=\\\"custom-control-input\\\" id=\\\"close\\\">\\r\\n                <label cLabel class=\\\"custom-control-label\\\" for=\\\"close\\\">Close Button</label>\\r\\n              </c-form-check>\\r\\n              <hr/>\\r\\n              <button cButton class=\\\"mfe-1 w-25\\\" color=\\\"success\\\" (click)=\\\"addToast()\\\">\\r\\n                Add toast\\r\\n              </button>\\r\\n            </form>\\r\\n          </c-col>\\r\\n          <c-col>\\r\\n            <c-toaster position=\\\"static\\\">\\r\\n              <c-toast [show]=\\\"true\\\" [autohide]=\\\"false\\\" [fade]=\\\"true\\\">\\r\\n                <c-toast-header>Toast title</c-toast-header>\\r\\n                <c-toast-body>This is a static toast in a static toaster</c-toast-body>\\r\\n              </c-toast>\\r\\n              <c-toast [show]=\\\"true\\\" color=\\\"dark\\\" [fade]=\\\"true\\\">\\r\\n                <c-toast-header [closeButton]=\\\"false\\\">Toast title</c-toast-header>\\r\\n                <c-toast-body>This is a static toast in a static toaster</c-toast-body>\\r\\n              </c-toast>\\r\\n              <app-toast-simple [autohide]=\\\"false\\\" [show]=\\\"true\\\" color=\\\"secondary\\\" [title]=\\\"'App Toast'\\\" [fade]=\\\"true\\\" #at>This is a toast in static positioned App toaster! {{at.index}}</app-toast-simple>\\r\\n            </c-toaster>\\r\\n            <c-toaster *ngFor=\\\"let pos of positions | slice : 1\\\" position=\\\"{{pos}}\\\"></c-toaster>\\r\\n          </c-col>\\r\\n        </c-row>\\r\\n      </c-container>\\r\\n    </c-card-body>\\r\\n  </c-card>\\r\\n  <c-card>\\r\\n    <c-card-body>\\r\\n      <c-row>\\r\\n        <c-col>\\r\\n          <p>Form value: {{ toasterForm.value | json }}</p>\\r\\n        </c-col>\\r\\n      </c-row>\\r\\n    </c-card-body>\\r\\n  </c-card>\\r\\n</div>\\r\\n\";","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  Input,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\nimport { ToastComponent, ToasterService } from '@coreui/angular';\r\n\r\n@Component({\r\n  selector: 'app-toast-simple',\r\n  templateUrl: './toast.component.html',\r\n  styleUrls: ['./toast.component.scss'],\r\n  providers: [{provide: ToastComponent, useExisting: forwardRef(() => AppToastComponent)}],\r\n})\r\nexport class AppToastComponent extends ToastComponent {\r\n\r\n  @Input() autohide = true;\r\n  @Input() color;\r\n  @Input() delay = 1000;\r\n  @Input() show;\r\n  @Input() fade = true;\r\n  @Input() closeButton = true;\r\n  @Input() title = '';\r\n\r\n  index: number;\r\n\r\n  constructor(\r\n    public hostElement: ElementRef,\r\n    public renderer: Renderer2,\r\n    public ref: ChangeDetectorRef,\r\n    public toasterService: ToasterService\r\n  ) {\r\n    super(hostElement, renderer, ref, toasterService);\r\n  }\r\n\r\n  doShow(): void {\r\n    this.show = true;\r\n  }\r\n  doHide(): void {\r\n    this.show = false;\r\n  }\r\n}\r\n"]}